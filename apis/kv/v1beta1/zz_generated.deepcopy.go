//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomMetadataInitParameters) DeepCopyInto(out *CustomMetadataInitParameters) {
	*out = *in
	if in.CasRequired != nil {
		in, out := &in.CasRequired, &out.CasRequired
		*out = new(bool)
		**out = **in
	}
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DeleteVersionAfter != nil {
		in, out := &in.DeleteVersionAfter, &out.DeleteVersionAfter
		*out = new(float64)
		**out = **in
	}
	if in.MaxVersions != nil {
		in, out := &in.MaxVersions, &out.MaxVersions
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomMetadataInitParameters.
func (in *CustomMetadataInitParameters) DeepCopy() *CustomMetadataInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomMetadataInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomMetadataObservation) DeepCopyInto(out *CustomMetadataObservation) {
	*out = *in
	if in.CasRequired != nil {
		in, out := &in.CasRequired, &out.CasRequired
		*out = new(bool)
		**out = **in
	}
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DeleteVersionAfter != nil {
		in, out := &in.DeleteVersionAfter, &out.DeleteVersionAfter
		*out = new(float64)
		**out = **in
	}
	if in.MaxVersions != nil {
		in, out := &in.MaxVersions, &out.MaxVersions
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomMetadataObservation.
func (in *CustomMetadataObservation) DeepCopy() *CustomMetadataObservation {
	if in == nil {
		return nil
	}
	out := new(CustomMetadataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomMetadataParameters) DeepCopyInto(out *CustomMetadataParameters) {
	*out = *in
	if in.CasRequired != nil {
		in, out := &in.CasRequired, &out.CasRequired
		*out = new(bool)
		**out = **in
	}
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DeleteVersionAfter != nil {
		in, out := &in.DeleteVersionAfter, &out.DeleteVersionAfter
		*out = new(float64)
		**out = **in
	}
	if in.MaxVersions != nil {
		in, out := &in.MaxVersions, &out.MaxVersions
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomMetadataParameters.
func (in *CustomMetadataParameters) DeepCopy() *CustomMetadataParameters {
	if in == nil {
		return nil
	}
	out := new(CustomMetadataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Secret) DeepCopyInto(out *Secret) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Secret.
func (in *Secret) DeepCopy() *Secret {
	if in == nil {
		return nil
	}
	out := new(Secret)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Secret) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretBackendV2) DeepCopyInto(out *SecretBackendV2) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretBackendV2.
func (in *SecretBackendV2) DeepCopy() *SecretBackendV2 {
	if in == nil {
		return nil
	}
	out := new(SecretBackendV2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretBackendV2) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretBackendV2InitParameters) DeepCopyInto(out *SecretBackendV2InitParameters) {
	*out = *in
	if in.CasRequired != nil {
		in, out := &in.CasRequired, &out.CasRequired
		*out = new(bool)
		**out = **in
	}
	if in.DeleteVersionAfter != nil {
		in, out := &in.DeleteVersionAfter, &out.DeleteVersionAfter
		*out = new(float64)
		**out = **in
	}
	if in.MaxVersions != nil {
		in, out := &in.MaxVersions, &out.MaxVersions
		*out = new(float64)
		**out = **in
	}
	if in.Mount != nil {
		in, out := &in.Mount, &out.Mount
		*out = new(string)
		**out = **in
	}
	if in.MountRef != nil {
		in, out := &in.MountRef, &out.MountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MountSelector != nil {
		in, out := &in.MountSelector, &out.MountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretBackendV2InitParameters.
func (in *SecretBackendV2InitParameters) DeepCopy() *SecretBackendV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(SecretBackendV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretBackendV2List) DeepCopyInto(out *SecretBackendV2List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecretBackendV2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretBackendV2List.
func (in *SecretBackendV2List) DeepCopy() *SecretBackendV2List {
	if in == nil {
		return nil
	}
	out := new(SecretBackendV2List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretBackendV2List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretBackendV2Observation) DeepCopyInto(out *SecretBackendV2Observation) {
	*out = *in
	if in.CasRequired != nil {
		in, out := &in.CasRequired, &out.CasRequired
		*out = new(bool)
		**out = **in
	}
	if in.DeleteVersionAfter != nil {
		in, out := &in.DeleteVersionAfter, &out.DeleteVersionAfter
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MaxVersions != nil {
		in, out := &in.MaxVersions, &out.MaxVersions
		*out = new(float64)
		**out = **in
	}
	if in.Mount != nil {
		in, out := &in.Mount, &out.Mount
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretBackendV2Observation.
func (in *SecretBackendV2Observation) DeepCopy() *SecretBackendV2Observation {
	if in == nil {
		return nil
	}
	out := new(SecretBackendV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretBackendV2Parameters) DeepCopyInto(out *SecretBackendV2Parameters) {
	*out = *in
	if in.CasRequired != nil {
		in, out := &in.CasRequired, &out.CasRequired
		*out = new(bool)
		**out = **in
	}
	if in.DeleteVersionAfter != nil {
		in, out := &in.DeleteVersionAfter, &out.DeleteVersionAfter
		*out = new(float64)
		**out = **in
	}
	if in.MaxVersions != nil {
		in, out := &in.MaxVersions, &out.MaxVersions
		*out = new(float64)
		**out = **in
	}
	if in.Mount != nil {
		in, out := &in.Mount, &out.Mount
		*out = new(string)
		**out = **in
	}
	if in.MountRef != nil {
		in, out := &in.MountRef, &out.MountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MountSelector != nil {
		in, out := &in.MountSelector, &out.MountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretBackendV2Parameters.
func (in *SecretBackendV2Parameters) DeepCopy() *SecretBackendV2Parameters {
	if in == nil {
		return nil
	}
	out := new(SecretBackendV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretBackendV2Spec) DeepCopyInto(out *SecretBackendV2Spec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretBackendV2Spec.
func (in *SecretBackendV2Spec) DeepCopy() *SecretBackendV2Spec {
	if in == nil {
		return nil
	}
	out := new(SecretBackendV2Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretBackendV2Status) DeepCopyInto(out *SecretBackendV2Status) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretBackendV2Status.
func (in *SecretBackendV2Status) DeepCopy() *SecretBackendV2Status {
	if in == nil {
		return nil
	}
	out := new(SecretBackendV2Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretInitParameters) DeepCopyInto(out *SecretInitParameters) {
	*out = *in
	out.DataJSONSecretRef = in.DataJSONSecretRef
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretInitParameters.
func (in *SecretInitParameters) DeepCopy() *SecretInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecretInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretList) DeepCopyInto(out *SecretList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Secret, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretList.
func (in *SecretList) DeepCopy() *SecretList {
	if in == nil {
		return nil
	}
	out := new(SecretList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretObservation) DeepCopyInto(out *SecretObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretObservation.
func (in *SecretObservation) DeepCopy() *SecretObservation {
	if in == nil {
		return nil
	}
	out := new(SecretObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretParameters) DeepCopyInto(out *SecretParameters) {
	*out = *in
	out.DataJSONSecretRef = in.DataJSONSecretRef
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretParameters.
func (in *SecretParameters) DeepCopy() *SecretParameters {
	if in == nil {
		return nil
	}
	out := new(SecretParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretSpec) DeepCopyInto(out *SecretSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretSpec.
func (in *SecretSpec) DeepCopy() *SecretSpec {
	if in == nil {
		return nil
	}
	out := new(SecretSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretStatus) DeepCopyInto(out *SecretStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretStatus.
func (in *SecretStatus) DeepCopy() *SecretStatus {
	if in == nil {
		return nil
	}
	out := new(SecretStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretV2) DeepCopyInto(out *SecretV2) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretV2.
func (in *SecretV2) DeepCopy() *SecretV2 {
	if in == nil {
		return nil
	}
	out := new(SecretV2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretV2) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretV2InitParameters) DeepCopyInto(out *SecretV2InitParameters) {
	*out = *in
	if in.Cas != nil {
		in, out := &in.Cas, &out.Cas
		*out = new(float64)
		**out = **in
	}
	if in.CustomMetadata != nil {
		in, out := &in.CustomMetadata, &out.CustomMetadata
		*out = make([]CustomMetadataInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.DataJSONSecretRef = in.DataJSONSecretRef
	if in.DeleteAllVersions != nil {
		in, out := &in.DeleteAllVersions, &out.DeleteAllVersions
		*out = new(bool)
		**out = **in
	}
	if in.DisableRead != nil {
		in, out := &in.DisableRead, &out.DisableRead
		*out = new(bool)
		**out = **in
	}
	if in.Mount != nil {
		in, out := &in.Mount, &out.Mount
		*out = new(string)
		**out = **in
	}
	if in.MountRef != nil {
		in, out := &in.MountRef, &out.MountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MountSelector != nil {
		in, out := &in.MountSelector, &out.MountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretV2InitParameters.
func (in *SecretV2InitParameters) DeepCopy() *SecretV2InitParameters {
	if in == nil {
		return nil
	}
	out := new(SecretV2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretV2List) DeepCopyInto(out *SecretV2List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecretV2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretV2List.
func (in *SecretV2List) DeepCopy() *SecretV2List {
	if in == nil {
		return nil
	}
	out := new(SecretV2List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretV2List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretV2Observation) DeepCopyInto(out *SecretV2Observation) {
	*out = *in
	if in.Cas != nil {
		in, out := &in.Cas, &out.Cas
		*out = new(float64)
		**out = **in
	}
	if in.CustomMetadata != nil {
		in, out := &in.CustomMetadata, &out.CustomMetadata
		*out = make([]CustomMetadataObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeleteAllVersions != nil {
		in, out := &in.DeleteAllVersions, &out.DeleteAllVersions
		*out = new(bool)
		**out = **in
	}
	if in.DisableRead != nil {
		in, out := &in.DisableRead, &out.DisableRead
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Mount != nil {
		in, out := &in.Mount, &out.Mount
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretV2Observation.
func (in *SecretV2Observation) DeepCopy() *SecretV2Observation {
	if in == nil {
		return nil
	}
	out := new(SecretV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretV2Parameters) DeepCopyInto(out *SecretV2Parameters) {
	*out = *in
	if in.Cas != nil {
		in, out := &in.Cas, &out.Cas
		*out = new(float64)
		**out = **in
	}
	if in.CustomMetadata != nil {
		in, out := &in.CustomMetadata, &out.CustomMetadata
		*out = make([]CustomMetadataParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.DataJSONSecretRef = in.DataJSONSecretRef
	if in.DeleteAllVersions != nil {
		in, out := &in.DeleteAllVersions, &out.DeleteAllVersions
		*out = new(bool)
		**out = **in
	}
	if in.DisableRead != nil {
		in, out := &in.DisableRead, &out.DisableRead
		*out = new(bool)
		**out = **in
	}
	if in.Mount != nil {
		in, out := &in.Mount, &out.Mount
		*out = new(string)
		**out = **in
	}
	if in.MountRef != nil {
		in, out := &in.MountRef, &out.MountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MountSelector != nil {
		in, out := &in.MountSelector, &out.MountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretV2Parameters.
func (in *SecretV2Parameters) DeepCopy() *SecretV2Parameters {
	if in == nil {
		return nil
	}
	out := new(SecretV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretV2Spec) DeepCopyInto(out *SecretV2Spec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretV2Spec.
func (in *SecretV2Spec) DeepCopy() *SecretV2Spec {
	if in == nil {
		return nil
	}
	out := new(SecretV2Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretV2Status) DeepCopyInto(out *SecretV2Status) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretV2Status.
func (in *SecretV2Status) DeepCopy() *SecretV2Status {
	if in == nil {
		return nil
	}
	out := new(SecretV2Status)
	in.DeepCopyInto(out)
	return out
}
