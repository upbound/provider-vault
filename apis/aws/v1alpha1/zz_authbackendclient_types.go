/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AuthBackendClientInitParameters struct {

	// The AWS access key that Vault should use for the
	// auth backend. Mutually exclusive with identity_token_audience.
	// AWS Access key with permissions to query AWS APIs.
	AccessKeySecretRef *v1.SecretKeySelector `json:"accessKeySecretRef,omitempty" tf:"-"`

	// The path the AWS auth backend being configured was
	// mounted at.  Defaults to aws.
	// Unique name of the auth backend to configure.
	// +crossplane:generate:reference:type=github.com/upbound/provider-vault/v2/apis/auth/v1alpha1.Backend
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("path",false)
	Backend *string `json:"backend,omitempty" tf:"backend,omitempty"`

	// Reference to a Backend in auth to populate backend.
	// +kubebuilder:validation:Optional
	BackendRef *v1.Reference `json:"backendRef,omitempty" tf:"-"`

	// Selector for a Backend in auth to populate backend.
	// +kubebuilder:validation:Optional
	BackendSelector *v1.Selector `json:"backendSelector,omitempty" tf:"-"`

	// Override the URL Vault uses when making EC2 API
	// calls.
	// URL to override the default generated endpoint for making AWS EC2 API calls.
	EC2Endpoint *string `json:"ec2Endpoint,omitempty" tf:"ec2_endpoint,omitempty"`

	// Override the URL Vault uses when making IAM API
	// calls.
	// URL to override the default generated endpoint for making AWS IAM API calls.
	IAMEndpoint *string `json:"iamEndpoint,omitempty" tf:"iam_endpoint,omitempty"`

	// The value to require in the
	// X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests
	// that are used in the IAM auth method.
	// The value to require in the X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests that are used in the iam auth method.
	IAMServerIDHeaderValue *string `json:"iamServerIdHeaderValue,omitempty" tf:"iam_server_id_header_value,omitempty"`

	// The audience claim value. Mutually exclusive with access_key.
	// Requires Vault 1.17+. Available only for Vault Enterprise
	// The audience claim value.
	IdentityTokenAudience *string `json:"identityTokenAudience,omitempty" tf:"identity_token_audience,omitempty"`

	// The TTL of generated identity tokens in seconds. Requires Vault 1.17+.
	// Available only for Vault Enterprise
	// The TTL of generated identity tokens in seconds.
	IdentityTokenTTL *float64 `json:"identityTokenTtl,omitempty" tf:"identity_token_ttl,omitempty"`

	// Number of max retries the client should use for recoverable errors.
	// The default -1 falls back to the AWS SDK's default behavior.
	// Number of max retries the client should use for recoverable errors.
	MaxRetries *float64 `json:"maxRetries,omitempty" tf:"max_retries,omitempty"`

	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The namespace is always relative to the provider's configured namespace.
	// Available only for Vault Enterprise.
	// Target namespace. (requires Enterprise)
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// Role ARN to assume for plugin identity token federation. Requires Vault 1.17+.
	// Available only for Vault Enterprise
	// Role ARN to assume for plugin identity token federation.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// The AWS secret key that Vault should use for the
	// auth backend.
	// AWS Secret key with permissions to query AWS APIs.
	SecretKeySecretRef *v1.SecretKeySelector `json:"secretKeySecretRef,omitempty" tf:"-"`

	// Override the URL Vault uses when making STS API
	// calls.
	// URL to override the default generated endpoint for making AWS STS API calls.
	StsEndpoint *string `json:"stsEndpoint,omitempty" tf:"sts_endpoint,omitempty"`

	// Override the default region when making STS API
	// calls. The sts_endpoint argument must be set when using sts_region.
	// Region to override the default region for making AWS STS API calls.
	StsRegion *string `json:"stsRegion,omitempty" tf:"sts_region,omitempty"`

	// Available in Vault v1.15+. If set,
	// overrides both sts_endpoint and sts_region to instead use the region
	// specified in the client request headers for IAM-based authentication.
	// This can be useful when you have client requests coming from different
	// regions and want flexibility in which regional STS API is used.
	// If set, will override sts_region and use the region from the client request's header
	UseStsRegionFromClient *bool `json:"useStsRegionFromClient,omitempty" tf:"use_sts_region_from_client,omitempty"`
}

type AuthBackendClientObservation struct {

	// The path the AWS auth backend being configured was
	// mounted at.  Defaults to aws.
	// Unique name of the auth backend to configure.
	Backend *string `json:"backend,omitempty" tf:"backend,omitempty"`

	// Override the URL Vault uses when making EC2 API
	// calls.
	// URL to override the default generated endpoint for making AWS EC2 API calls.
	EC2Endpoint *string `json:"ec2Endpoint,omitempty" tf:"ec2_endpoint,omitempty"`

	// Override the URL Vault uses when making IAM API
	// calls.
	// URL to override the default generated endpoint for making AWS IAM API calls.
	IAMEndpoint *string `json:"iamEndpoint,omitempty" tf:"iam_endpoint,omitempty"`

	// The value to require in the
	// X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests
	// that are used in the IAM auth method.
	// The value to require in the X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests that are used in the iam auth method.
	IAMServerIDHeaderValue *string `json:"iamServerIdHeaderValue,omitempty" tf:"iam_server_id_header_value,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The audience claim value. Mutually exclusive with access_key.
	// Requires Vault 1.17+. Available only for Vault Enterprise
	// The audience claim value.
	IdentityTokenAudience *string `json:"identityTokenAudience,omitempty" tf:"identity_token_audience,omitempty"`

	// The TTL of generated identity tokens in seconds. Requires Vault 1.17+.
	// Available only for Vault Enterprise
	// The TTL of generated identity tokens in seconds.
	IdentityTokenTTL *float64 `json:"identityTokenTtl,omitempty" tf:"identity_token_ttl,omitempty"`

	// Number of max retries the client should use for recoverable errors.
	// The default -1 falls back to the AWS SDK's default behavior.
	// Number of max retries the client should use for recoverable errors.
	MaxRetries *float64 `json:"maxRetries,omitempty" tf:"max_retries,omitempty"`

	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The namespace is always relative to the provider's configured namespace.
	// Available only for Vault Enterprise.
	// Target namespace. (requires Enterprise)
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// Role ARN to assume for plugin identity token federation. Requires Vault 1.17+.
	// Available only for Vault Enterprise
	// Role ARN to assume for plugin identity token federation.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Override the URL Vault uses when making STS API
	// calls.
	// URL to override the default generated endpoint for making AWS STS API calls.
	StsEndpoint *string `json:"stsEndpoint,omitempty" tf:"sts_endpoint,omitempty"`

	// Override the default region when making STS API
	// calls. The sts_endpoint argument must be set when using sts_region.
	// Region to override the default region for making AWS STS API calls.
	StsRegion *string `json:"stsRegion,omitempty" tf:"sts_region,omitempty"`

	// Available in Vault v1.15+. If set,
	// overrides both sts_endpoint and sts_region to instead use the region
	// specified in the client request headers for IAM-based authentication.
	// This can be useful when you have client requests coming from different
	// regions and want flexibility in which regional STS API is used.
	// If set, will override sts_region and use the region from the client request's header
	UseStsRegionFromClient *bool `json:"useStsRegionFromClient,omitempty" tf:"use_sts_region_from_client,omitempty"`
}

type AuthBackendClientParameters struct {

	// The AWS access key that Vault should use for the
	// auth backend. Mutually exclusive with identity_token_audience.
	// AWS Access key with permissions to query AWS APIs.
	// +kubebuilder:validation:Optional
	AccessKeySecretRef *v1.SecretKeySelector `json:"accessKeySecretRef,omitempty" tf:"-"`

	// The path the AWS auth backend being configured was
	// mounted at.  Defaults to aws.
	// Unique name of the auth backend to configure.
	// +crossplane:generate:reference:type=github.com/upbound/provider-vault/v2/apis/auth/v1alpha1.Backend
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("path",false)
	// +kubebuilder:validation:Optional
	Backend *string `json:"backend,omitempty" tf:"backend,omitempty"`

	// Reference to a Backend in auth to populate backend.
	// +kubebuilder:validation:Optional
	BackendRef *v1.Reference `json:"backendRef,omitempty" tf:"-"`

	// Selector for a Backend in auth to populate backend.
	// +kubebuilder:validation:Optional
	BackendSelector *v1.Selector `json:"backendSelector,omitempty" tf:"-"`

	// Override the URL Vault uses when making EC2 API
	// calls.
	// URL to override the default generated endpoint for making AWS EC2 API calls.
	// +kubebuilder:validation:Optional
	EC2Endpoint *string `json:"ec2Endpoint,omitempty" tf:"ec2_endpoint,omitempty"`

	// Override the URL Vault uses when making IAM API
	// calls.
	// URL to override the default generated endpoint for making AWS IAM API calls.
	// +kubebuilder:validation:Optional
	IAMEndpoint *string `json:"iamEndpoint,omitempty" tf:"iam_endpoint,omitempty"`

	// The value to require in the
	// X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests
	// that are used in the IAM auth method.
	// The value to require in the X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests that are used in the iam auth method.
	// +kubebuilder:validation:Optional
	IAMServerIDHeaderValue *string `json:"iamServerIdHeaderValue,omitempty" tf:"iam_server_id_header_value,omitempty"`

	// The audience claim value. Mutually exclusive with access_key.
	// Requires Vault 1.17+. Available only for Vault Enterprise
	// The audience claim value.
	// +kubebuilder:validation:Optional
	IdentityTokenAudience *string `json:"identityTokenAudience,omitempty" tf:"identity_token_audience,omitempty"`

	// The TTL of generated identity tokens in seconds. Requires Vault 1.17+.
	// Available only for Vault Enterprise
	// The TTL of generated identity tokens in seconds.
	// +kubebuilder:validation:Optional
	IdentityTokenTTL *float64 `json:"identityTokenTtl,omitempty" tf:"identity_token_ttl,omitempty"`

	// Number of max retries the client should use for recoverable errors.
	// The default -1 falls back to the AWS SDK's default behavior.
	// Number of max retries the client should use for recoverable errors.
	// +kubebuilder:validation:Optional
	MaxRetries *float64 `json:"maxRetries,omitempty" tf:"max_retries,omitempty"`

	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The namespace is always relative to the provider's configured namespace.
	// Available only for Vault Enterprise.
	// Target namespace. (requires Enterprise)
	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// Role ARN to assume for plugin identity token federation. Requires Vault 1.17+.
	// Available only for Vault Enterprise
	// Role ARN to assume for plugin identity token federation.
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// The AWS secret key that Vault should use for the
	// auth backend.
	// AWS Secret key with permissions to query AWS APIs.
	// +kubebuilder:validation:Optional
	SecretKeySecretRef *v1.SecretKeySelector `json:"secretKeySecretRef,omitempty" tf:"-"`

	// Override the URL Vault uses when making STS API
	// calls.
	// URL to override the default generated endpoint for making AWS STS API calls.
	// +kubebuilder:validation:Optional
	StsEndpoint *string `json:"stsEndpoint,omitempty" tf:"sts_endpoint,omitempty"`

	// Override the default region when making STS API
	// calls. The sts_endpoint argument must be set when using sts_region.
	// Region to override the default region for making AWS STS API calls.
	// +kubebuilder:validation:Optional
	StsRegion *string `json:"stsRegion,omitempty" tf:"sts_region,omitempty"`

	// Available in Vault v1.15+. If set,
	// overrides both sts_endpoint and sts_region to instead use the region
	// specified in the client request headers for IAM-based authentication.
	// This can be useful when you have client requests coming from different
	// regions and want flexibility in which regional STS API is used.
	// If set, will override sts_region and use the region from the client request's header
	// +kubebuilder:validation:Optional
	UseStsRegionFromClient *bool `json:"useStsRegionFromClient,omitempty" tf:"use_sts_region_from_client,omitempty"`
}

// AuthBackendClientSpec defines the desired state of AuthBackendClient
type AuthBackendClientSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AuthBackendClientParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AuthBackendClientInitParameters `json:"initProvider,omitempty"`
}

// AuthBackendClientStatus defines the observed state of AuthBackendClient.
type AuthBackendClientStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AuthBackendClientObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AuthBackendClient is the Schema for the AuthBackendClients API. Configures the client used by an AWS Auth Backend in Vault.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vault}
type AuthBackendClient struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AuthBackendClientSpec   `json:"spec"`
	Status            AuthBackendClientStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AuthBackendClientList contains a list of AuthBackendClients
type AuthBackendClientList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AuthBackendClient `json:"items"`
}

// Repository type metadata.
var (
	AuthBackendClient_Kind             = "AuthBackendClient"
	AuthBackendClient_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AuthBackendClient_Kind}.String()
	AuthBackendClient_KindAPIVersion   = AuthBackendClient_Kind + "." + CRDGroupVersion.String()
	AuthBackendClient_GroupVersionKind = CRDGroupVersion.WithKind(AuthBackendClient_Kind)
)

func init() {
	SchemeBuilder.Register(&AuthBackendClient{}, &AuthBackendClientList{})
}
