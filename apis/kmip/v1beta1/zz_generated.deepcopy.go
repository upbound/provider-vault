//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretBackend) DeepCopyInto(out *SecretBackend) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretBackend.
func (in *SecretBackend) DeepCopy() *SecretBackend {
	if in == nil {
		return nil
	}
	out := new(SecretBackend)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretBackend) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretBackendInitParameters) DeepCopyInto(out *SecretBackendInitParameters) {
	*out = *in
	if in.DefaultTLSClientKeyBits != nil {
		in, out := &in.DefaultTLSClientKeyBits, &out.DefaultTLSClientKeyBits
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTLSClientKeyType != nil {
		in, out := &in.DefaultTLSClientKeyType, &out.DefaultTLSClientKeyType
		*out = new(string)
		**out = **in
	}
	if in.DefaultTLSClientTTL != nil {
		in, out := &in.DefaultTLSClientTTL, &out.DefaultTLSClientTTL
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableRemount != nil {
		in, out := &in.DisableRemount, &out.DisableRemount
		*out = new(bool)
		**out = **in
	}
	if in.ListenAddrs != nil {
		in, out := &in.ListenAddrs, &out.ListenAddrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ServerHostnames != nil {
		in, out := &in.ServerHostnames, &out.ServerHostnames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServerIps != nil {
		in, out := &in.ServerIps, &out.ServerIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TLSCAKeyBits != nil {
		in, out := &in.TLSCAKeyBits, &out.TLSCAKeyBits
		*out = new(float64)
		**out = **in
	}
	if in.TLSCAKeyType != nil {
		in, out := &in.TLSCAKeyType, &out.TLSCAKeyType
		*out = new(string)
		**out = **in
	}
	if in.TLSMinVersion != nil {
		in, out := &in.TLSMinVersion, &out.TLSMinVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretBackendInitParameters.
func (in *SecretBackendInitParameters) DeepCopy() *SecretBackendInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecretBackendInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretBackendList) DeepCopyInto(out *SecretBackendList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecretBackend, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretBackendList.
func (in *SecretBackendList) DeepCopy() *SecretBackendList {
	if in == nil {
		return nil
	}
	out := new(SecretBackendList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretBackendList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretBackendObservation) DeepCopyInto(out *SecretBackendObservation) {
	*out = *in
	if in.DefaultTLSClientKeyBits != nil {
		in, out := &in.DefaultTLSClientKeyBits, &out.DefaultTLSClientKeyBits
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTLSClientKeyType != nil {
		in, out := &in.DefaultTLSClientKeyType, &out.DefaultTLSClientKeyType
		*out = new(string)
		**out = **in
	}
	if in.DefaultTLSClientTTL != nil {
		in, out := &in.DefaultTLSClientTTL, &out.DefaultTLSClientTTL
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableRemount != nil {
		in, out := &in.DisableRemount, &out.DisableRemount
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ListenAddrs != nil {
		in, out := &in.ListenAddrs, &out.ListenAddrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ServerHostnames != nil {
		in, out := &in.ServerHostnames, &out.ServerHostnames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServerIps != nil {
		in, out := &in.ServerIps, &out.ServerIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TLSCAKeyBits != nil {
		in, out := &in.TLSCAKeyBits, &out.TLSCAKeyBits
		*out = new(float64)
		**out = **in
	}
	if in.TLSCAKeyType != nil {
		in, out := &in.TLSCAKeyType, &out.TLSCAKeyType
		*out = new(string)
		**out = **in
	}
	if in.TLSMinVersion != nil {
		in, out := &in.TLSMinVersion, &out.TLSMinVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretBackendObservation.
func (in *SecretBackendObservation) DeepCopy() *SecretBackendObservation {
	if in == nil {
		return nil
	}
	out := new(SecretBackendObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretBackendParameters) DeepCopyInto(out *SecretBackendParameters) {
	*out = *in
	if in.DefaultTLSClientKeyBits != nil {
		in, out := &in.DefaultTLSClientKeyBits, &out.DefaultTLSClientKeyBits
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTLSClientKeyType != nil {
		in, out := &in.DefaultTLSClientKeyType, &out.DefaultTLSClientKeyType
		*out = new(string)
		**out = **in
	}
	if in.DefaultTLSClientTTL != nil {
		in, out := &in.DefaultTLSClientTTL, &out.DefaultTLSClientTTL
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableRemount != nil {
		in, out := &in.DisableRemount, &out.DisableRemount
		*out = new(bool)
		**out = **in
	}
	if in.ListenAddrs != nil {
		in, out := &in.ListenAddrs, &out.ListenAddrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ServerHostnames != nil {
		in, out := &in.ServerHostnames, &out.ServerHostnames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServerIps != nil {
		in, out := &in.ServerIps, &out.ServerIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TLSCAKeyBits != nil {
		in, out := &in.TLSCAKeyBits, &out.TLSCAKeyBits
		*out = new(float64)
		**out = **in
	}
	if in.TLSCAKeyType != nil {
		in, out := &in.TLSCAKeyType, &out.TLSCAKeyType
		*out = new(string)
		**out = **in
	}
	if in.TLSMinVersion != nil {
		in, out := &in.TLSMinVersion, &out.TLSMinVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretBackendParameters.
func (in *SecretBackendParameters) DeepCopy() *SecretBackendParameters {
	if in == nil {
		return nil
	}
	out := new(SecretBackendParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretBackendSpec) DeepCopyInto(out *SecretBackendSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretBackendSpec.
func (in *SecretBackendSpec) DeepCopy() *SecretBackendSpec {
	if in == nil {
		return nil
	}
	out := new(SecretBackendSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretBackendStatus) DeepCopyInto(out *SecretBackendStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretBackendStatus.
func (in *SecretBackendStatus) DeepCopy() *SecretBackendStatus {
	if in == nil {
		return nil
	}
	out := new(SecretBackendStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretRole) DeepCopyInto(out *SecretRole) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretRole.
func (in *SecretRole) DeepCopy() *SecretRole {
	if in == nil {
		return nil
	}
	out := new(SecretRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretRole) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretRoleInitParameters) DeepCopyInto(out *SecretRoleInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.OperationActivate != nil {
		in, out := &in.OperationActivate, &out.OperationActivate
		*out = new(bool)
		**out = **in
	}
	if in.OperationAddAttribute != nil {
		in, out := &in.OperationAddAttribute, &out.OperationAddAttribute
		*out = new(bool)
		**out = **in
	}
	if in.OperationAll != nil {
		in, out := &in.OperationAll, &out.OperationAll
		*out = new(bool)
		**out = **in
	}
	if in.OperationCreate != nil {
		in, out := &in.OperationCreate, &out.OperationCreate
		*out = new(bool)
		**out = **in
	}
	if in.OperationDestroy != nil {
		in, out := &in.OperationDestroy, &out.OperationDestroy
		*out = new(bool)
		**out = **in
	}
	if in.OperationDiscoverVersions != nil {
		in, out := &in.OperationDiscoverVersions, &out.OperationDiscoverVersions
		*out = new(bool)
		**out = **in
	}
	if in.OperationGet != nil {
		in, out := &in.OperationGet, &out.OperationGet
		*out = new(bool)
		**out = **in
	}
	if in.OperationGetAttributeList != nil {
		in, out := &in.OperationGetAttributeList, &out.OperationGetAttributeList
		*out = new(bool)
		**out = **in
	}
	if in.OperationGetAttributes != nil {
		in, out := &in.OperationGetAttributes, &out.OperationGetAttributes
		*out = new(bool)
		**out = **in
	}
	if in.OperationLocate != nil {
		in, out := &in.OperationLocate, &out.OperationLocate
		*out = new(bool)
		**out = **in
	}
	if in.OperationNone != nil {
		in, out := &in.OperationNone, &out.OperationNone
		*out = new(bool)
		**out = **in
	}
	if in.OperationRegister != nil {
		in, out := &in.OperationRegister, &out.OperationRegister
		*out = new(bool)
		**out = **in
	}
	if in.OperationRekey != nil {
		in, out := &in.OperationRekey, &out.OperationRekey
		*out = new(bool)
		**out = **in
	}
	if in.OperationRevoke != nil {
		in, out := &in.OperationRevoke, &out.OperationRevoke
		*out = new(bool)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.PathRef != nil {
		in, out := &in.PathRef, &out.PathRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PathSelector != nil {
		in, out := &in.PathSelector, &out.PathSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.ScopeRef != nil {
		in, out := &in.ScopeRef, &out.ScopeRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ScopeSelector != nil {
		in, out := &in.ScopeSelector, &out.ScopeSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSClientKeyBits != nil {
		in, out := &in.TLSClientKeyBits, &out.TLSClientKeyBits
		*out = new(float64)
		**out = **in
	}
	if in.TLSClientKeyType != nil {
		in, out := &in.TLSClientKeyType, &out.TLSClientKeyType
		*out = new(string)
		**out = **in
	}
	if in.TLSClientTTL != nil {
		in, out := &in.TLSClientTTL, &out.TLSClientTTL
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretRoleInitParameters.
func (in *SecretRoleInitParameters) DeepCopy() *SecretRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecretRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretRoleList) DeepCopyInto(out *SecretRoleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecretRole, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretRoleList.
func (in *SecretRoleList) DeepCopy() *SecretRoleList {
	if in == nil {
		return nil
	}
	out := new(SecretRoleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretRoleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretRoleObservation) DeepCopyInto(out *SecretRoleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.OperationActivate != nil {
		in, out := &in.OperationActivate, &out.OperationActivate
		*out = new(bool)
		**out = **in
	}
	if in.OperationAddAttribute != nil {
		in, out := &in.OperationAddAttribute, &out.OperationAddAttribute
		*out = new(bool)
		**out = **in
	}
	if in.OperationAll != nil {
		in, out := &in.OperationAll, &out.OperationAll
		*out = new(bool)
		**out = **in
	}
	if in.OperationCreate != nil {
		in, out := &in.OperationCreate, &out.OperationCreate
		*out = new(bool)
		**out = **in
	}
	if in.OperationDestroy != nil {
		in, out := &in.OperationDestroy, &out.OperationDestroy
		*out = new(bool)
		**out = **in
	}
	if in.OperationDiscoverVersions != nil {
		in, out := &in.OperationDiscoverVersions, &out.OperationDiscoverVersions
		*out = new(bool)
		**out = **in
	}
	if in.OperationGet != nil {
		in, out := &in.OperationGet, &out.OperationGet
		*out = new(bool)
		**out = **in
	}
	if in.OperationGetAttributeList != nil {
		in, out := &in.OperationGetAttributeList, &out.OperationGetAttributeList
		*out = new(bool)
		**out = **in
	}
	if in.OperationGetAttributes != nil {
		in, out := &in.OperationGetAttributes, &out.OperationGetAttributes
		*out = new(bool)
		**out = **in
	}
	if in.OperationLocate != nil {
		in, out := &in.OperationLocate, &out.OperationLocate
		*out = new(bool)
		**out = **in
	}
	if in.OperationNone != nil {
		in, out := &in.OperationNone, &out.OperationNone
		*out = new(bool)
		**out = **in
	}
	if in.OperationRegister != nil {
		in, out := &in.OperationRegister, &out.OperationRegister
		*out = new(bool)
		**out = **in
	}
	if in.OperationRekey != nil {
		in, out := &in.OperationRekey, &out.OperationRekey
		*out = new(bool)
		**out = **in
	}
	if in.OperationRevoke != nil {
		in, out := &in.OperationRevoke, &out.OperationRevoke
		*out = new(bool)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.TLSClientKeyBits != nil {
		in, out := &in.TLSClientKeyBits, &out.TLSClientKeyBits
		*out = new(float64)
		**out = **in
	}
	if in.TLSClientKeyType != nil {
		in, out := &in.TLSClientKeyType, &out.TLSClientKeyType
		*out = new(string)
		**out = **in
	}
	if in.TLSClientTTL != nil {
		in, out := &in.TLSClientTTL, &out.TLSClientTTL
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretRoleObservation.
func (in *SecretRoleObservation) DeepCopy() *SecretRoleObservation {
	if in == nil {
		return nil
	}
	out := new(SecretRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretRoleParameters) DeepCopyInto(out *SecretRoleParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.OperationActivate != nil {
		in, out := &in.OperationActivate, &out.OperationActivate
		*out = new(bool)
		**out = **in
	}
	if in.OperationAddAttribute != nil {
		in, out := &in.OperationAddAttribute, &out.OperationAddAttribute
		*out = new(bool)
		**out = **in
	}
	if in.OperationAll != nil {
		in, out := &in.OperationAll, &out.OperationAll
		*out = new(bool)
		**out = **in
	}
	if in.OperationCreate != nil {
		in, out := &in.OperationCreate, &out.OperationCreate
		*out = new(bool)
		**out = **in
	}
	if in.OperationDestroy != nil {
		in, out := &in.OperationDestroy, &out.OperationDestroy
		*out = new(bool)
		**out = **in
	}
	if in.OperationDiscoverVersions != nil {
		in, out := &in.OperationDiscoverVersions, &out.OperationDiscoverVersions
		*out = new(bool)
		**out = **in
	}
	if in.OperationGet != nil {
		in, out := &in.OperationGet, &out.OperationGet
		*out = new(bool)
		**out = **in
	}
	if in.OperationGetAttributeList != nil {
		in, out := &in.OperationGetAttributeList, &out.OperationGetAttributeList
		*out = new(bool)
		**out = **in
	}
	if in.OperationGetAttributes != nil {
		in, out := &in.OperationGetAttributes, &out.OperationGetAttributes
		*out = new(bool)
		**out = **in
	}
	if in.OperationLocate != nil {
		in, out := &in.OperationLocate, &out.OperationLocate
		*out = new(bool)
		**out = **in
	}
	if in.OperationNone != nil {
		in, out := &in.OperationNone, &out.OperationNone
		*out = new(bool)
		**out = **in
	}
	if in.OperationRegister != nil {
		in, out := &in.OperationRegister, &out.OperationRegister
		*out = new(bool)
		**out = **in
	}
	if in.OperationRekey != nil {
		in, out := &in.OperationRekey, &out.OperationRekey
		*out = new(bool)
		**out = **in
	}
	if in.OperationRevoke != nil {
		in, out := &in.OperationRevoke, &out.OperationRevoke
		*out = new(bool)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.PathRef != nil {
		in, out := &in.PathRef, &out.PathRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PathSelector != nil {
		in, out := &in.PathSelector, &out.PathSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.ScopeRef != nil {
		in, out := &in.ScopeRef, &out.ScopeRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ScopeSelector != nil {
		in, out := &in.ScopeSelector, &out.ScopeSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSClientKeyBits != nil {
		in, out := &in.TLSClientKeyBits, &out.TLSClientKeyBits
		*out = new(float64)
		**out = **in
	}
	if in.TLSClientKeyType != nil {
		in, out := &in.TLSClientKeyType, &out.TLSClientKeyType
		*out = new(string)
		**out = **in
	}
	if in.TLSClientTTL != nil {
		in, out := &in.TLSClientTTL, &out.TLSClientTTL
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretRoleParameters.
func (in *SecretRoleParameters) DeepCopy() *SecretRoleParameters {
	if in == nil {
		return nil
	}
	out := new(SecretRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretRoleSpec) DeepCopyInto(out *SecretRoleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretRoleSpec.
func (in *SecretRoleSpec) DeepCopy() *SecretRoleSpec {
	if in == nil {
		return nil
	}
	out := new(SecretRoleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretRoleStatus) DeepCopyInto(out *SecretRoleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretRoleStatus.
func (in *SecretRoleStatus) DeepCopy() *SecretRoleStatus {
	if in == nil {
		return nil
	}
	out := new(SecretRoleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScope) DeepCopyInto(out *SecretScope) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScope.
func (in *SecretScope) DeepCopy() *SecretScope {
	if in == nil {
		return nil
	}
	out := new(SecretScope)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretScope) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScopeInitParameters) DeepCopyInto(out *SecretScopeInitParameters) {
	*out = *in
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.PathRef != nil {
		in, out := &in.PathRef, &out.PathRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PathSelector != nil {
		in, out := &in.PathSelector, &out.PathSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScopeInitParameters.
func (in *SecretScopeInitParameters) DeepCopy() *SecretScopeInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecretScopeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScopeList) DeepCopyInto(out *SecretScopeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecretScope, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScopeList.
func (in *SecretScopeList) DeepCopy() *SecretScopeList {
	if in == nil {
		return nil
	}
	out := new(SecretScopeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretScopeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScopeObservation) DeepCopyInto(out *SecretScopeObservation) {
	*out = *in
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScopeObservation.
func (in *SecretScopeObservation) DeepCopy() *SecretScopeObservation {
	if in == nil {
		return nil
	}
	out := new(SecretScopeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScopeParameters) DeepCopyInto(out *SecretScopeParameters) {
	*out = *in
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.PathRef != nil {
		in, out := &in.PathRef, &out.PathRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PathSelector != nil {
		in, out := &in.PathSelector, &out.PathSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScopeParameters.
func (in *SecretScopeParameters) DeepCopy() *SecretScopeParameters {
	if in == nil {
		return nil
	}
	out := new(SecretScopeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScopeSpec) DeepCopyInto(out *SecretScopeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScopeSpec.
func (in *SecretScopeSpec) DeepCopy() *SecretScopeSpec {
	if in == nil {
		return nil
	}
	out := new(SecretScopeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretScopeStatus) DeepCopyInto(out *SecretScopeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretScopeStatus.
func (in *SecretScopeStatus) DeepCopy() *SecretScopeStatus {
	if in == nil {
		return nil
	}
	out := new(SecretScopeStatus)
	in.DeepCopyInto(out)
	return out
}
