//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Autopilot) DeepCopyInto(out *Autopilot) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Autopilot.
func (in *Autopilot) DeepCopy() *Autopilot {
	if in == nil {
		return nil
	}
	out := new(Autopilot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Autopilot) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutopilotInitParameters) DeepCopyInto(out *AutopilotInitParameters) {
	*out = *in
	if in.CleanupDeadServers != nil {
		in, out := &in.CleanupDeadServers, &out.CleanupDeadServers
		*out = new(bool)
		**out = **in
	}
	if in.DeadServerLastContactThreshold != nil {
		in, out := &in.DeadServerLastContactThreshold, &out.DeadServerLastContactThreshold
		*out = new(string)
		**out = **in
	}
	if in.DisableUpgradeMigration != nil {
		in, out := &in.DisableUpgradeMigration, &out.DisableUpgradeMigration
		*out = new(bool)
		**out = **in
	}
	if in.LastContactThreshold != nil {
		in, out := &in.LastContactThreshold, &out.LastContactThreshold
		*out = new(string)
		**out = **in
	}
	if in.MaxTrailingLogs != nil {
		in, out := &in.MaxTrailingLogs, &out.MaxTrailingLogs
		*out = new(float64)
		**out = **in
	}
	if in.MinQuorum != nil {
		in, out := &in.MinQuorum, &out.MinQuorum
		*out = new(float64)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.ServerStabilizationTime != nil {
		in, out := &in.ServerStabilizationTime, &out.ServerStabilizationTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutopilotInitParameters.
func (in *AutopilotInitParameters) DeepCopy() *AutopilotInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutopilotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutopilotList) DeepCopyInto(out *AutopilotList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Autopilot, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutopilotList.
func (in *AutopilotList) DeepCopy() *AutopilotList {
	if in == nil {
		return nil
	}
	out := new(AutopilotList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutopilotList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutopilotObservation) DeepCopyInto(out *AutopilotObservation) {
	*out = *in
	if in.CleanupDeadServers != nil {
		in, out := &in.CleanupDeadServers, &out.CleanupDeadServers
		*out = new(bool)
		**out = **in
	}
	if in.DeadServerLastContactThreshold != nil {
		in, out := &in.DeadServerLastContactThreshold, &out.DeadServerLastContactThreshold
		*out = new(string)
		**out = **in
	}
	if in.DisableUpgradeMigration != nil {
		in, out := &in.DisableUpgradeMigration, &out.DisableUpgradeMigration
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LastContactThreshold != nil {
		in, out := &in.LastContactThreshold, &out.LastContactThreshold
		*out = new(string)
		**out = **in
	}
	if in.MaxTrailingLogs != nil {
		in, out := &in.MaxTrailingLogs, &out.MaxTrailingLogs
		*out = new(float64)
		**out = **in
	}
	if in.MinQuorum != nil {
		in, out := &in.MinQuorum, &out.MinQuorum
		*out = new(float64)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.ServerStabilizationTime != nil {
		in, out := &in.ServerStabilizationTime, &out.ServerStabilizationTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutopilotObservation.
func (in *AutopilotObservation) DeepCopy() *AutopilotObservation {
	if in == nil {
		return nil
	}
	out := new(AutopilotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutopilotParameters) DeepCopyInto(out *AutopilotParameters) {
	*out = *in
	if in.CleanupDeadServers != nil {
		in, out := &in.CleanupDeadServers, &out.CleanupDeadServers
		*out = new(bool)
		**out = **in
	}
	if in.DeadServerLastContactThreshold != nil {
		in, out := &in.DeadServerLastContactThreshold, &out.DeadServerLastContactThreshold
		*out = new(string)
		**out = **in
	}
	if in.DisableUpgradeMigration != nil {
		in, out := &in.DisableUpgradeMigration, &out.DisableUpgradeMigration
		*out = new(bool)
		**out = **in
	}
	if in.LastContactThreshold != nil {
		in, out := &in.LastContactThreshold, &out.LastContactThreshold
		*out = new(string)
		**out = **in
	}
	if in.MaxTrailingLogs != nil {
		in, out := &in.MaxTrailingLogs, &out.MaxTrailingLogs
		*out = new(float64)
		**out = **in
	}
	if in.MinQuorum != nil {
		in, out := &in.MinQuorum, &out.MinQuorum
		*out = new(float64)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.ServerStabilizationTime != nil {
		in, out := &in.ServerStabilizationTime, &out.ServerStabilizationTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutopilotParameters.
func (in *AutopilotParameters) DeepCopy() *AutopilotParameters {
	if in == nil {
		return nil
	}
	out := new(AutopilotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutopilotSpec) DeepCopyInto(out *AutopilotSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutopilotSpec.
func (in *AutopilotSpec) DeepCopy() *AutopilotSpec {
	if in == nil {
		return nil
	}
	out := new(AutopilotSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutopilotStatus) DeepCopyInto(out *AutopilotStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutopilotStatus.
func (in *AutopilotStatus) DeepCopy() *AutopilotStatus {
	if in == nil {
		return nil
	}
	out := new(AutopilotStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotAgentConfig) DeepCopyInto(out *SnapshotAgentConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotAgentConfig.
func (in *SnapshotAgentConfig) DeepCopy() *SnapshotAgentConfig {
	if in == nil {
		return nil
	}
	out := new(SnapshotAgentConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SnapshotAgentConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotAgentConfigInitParameters) DeepCopyInto(out *SnapshotAgentConfigInitParameters) {
	*out = *in
	if in.AwsAccessKeyID != nil {
		in, out := &in.AwsAccessKeyID, &out.AwsAccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AwsS3Bucket != nil {
		in, out := &in.AwsS3Bucket, &out.AwsS3Bucket
		*out = new(string)
		**out = **in
	}
	if in.AwsS3DisableTLS != nil {
		in, out := &in.AwsS3DisableTLS, &out.AwsS3DisableTLS
		*out = new(bool)
		**out = **in
	}
	if in.AwsS3EnableKMS != nil {
		in, out := &in.AwsS3EnableKMS, &out.AwsS3EnableKMS
		*out = new(bool)
		**out = **in
	}
	if in.AwsS3Endpoint != nil {
		in, out := &in.AwsS3Endpoint, &out.AwsS3Endpoint
		*out = new(string)
		**out = **in
	}
	if in.AwsS3ForcePathStyle != nil {
		in, out := &in.AwsS3ForcePathStyle, &out.AwsS3ForcePathStyle
		*out = new(bool)
		**out = **in
	}
	if in.AwsS3KMSKey != nil {
		in, out := &in.AwsS3KMSKey, &out.AwsS3KMSKey
		*out = new(string)
		**out = **in
	}
	if in.AwsS3Region != nil {
		in, out := &in.AwsS3Region, &out.AwsS3Region
		*out = new(string)
		**out = **in
	}
	if in.AwsS3ServerSideEncryption != nil {
		in, out := &in.AwsS3ServerSideEncryption, &out.AwsS3ServerSideEncryption
		*out = new(bool)
		**out = **in
	}
	if in.AwsSecretAccessKey != nil {
		in, out := &in.AwsSecretAccessKey, &out.AwsSecretAccessKey
		*out = new(string)
		**out = **in
	}
	if in.AwsSessionToken != nil {
		in, out := &in.AwsSessionToken, &out.AwsSessionToken
		*out = new(string)
		**out = **in
	}
	if in.AzureAccountKey != nil {
		in, out := &in.AzureAccountKey, &out.AzureAccountKey
		*out = new(string)
		**out = **in
	}
	if in.AzureAccountName != nil {
		in, out := &in.AzureAccountName, &out.AzureAccountName
		*out = new(string)
		**out = **in
	}
	if in.AzureBlobEnvironment != nil {
		in, out := &in.AzureBlobEnvironment, &out.AzureBlobEnvironment
		*out = new(string)
		**out = **in
	}
	if in.AzureContainerName != nil {
		in, out := &in.AzureContainerName, &out.AzureContainerName
		*out = new(string)
		**out = **in
	}
	if in.AzureEndpoint != nil {
		in, out := &in.AzureEndpoint, &out.AzureEndpoint
		*out = new(string)
		**out = **in
	}
	if in.FilePrefix != nil {
		in, out := &in.FilePrefix, &out.FilePrefix
		*out = new(string)
		**out = **in
	}
	if in.GoogleDisableTLS != nil {
		in, out := &in.GoogleDisableTLS, &out.GoogleDisableTLS
		*out = new(bool)
		**out = **in
	}
	if in.GoogleEndpoint != nil {
		in, out := &in.GoogleEndpoint, &out.GoogleEndpoint
		*out = new(string)
		**out = **in
	}
	if in.GoogleGcsBucket != nil {
		in, out := &in.GoogleGcsBucket, &out.GoogleGcsBucket
		*out = new(string)
		**out = **in
	}
	if in.GoogleServiceAccountKey != nil {
		in, out := &in.GoogleServiceAccountKey, &out.GoogleServiceAccountKey
		*out = new(string)
		**out = **in
	}
	if in.IntervalSeconds != nil {
		in, out := &in.IntervalSeconds, &out.IntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.LocalMaxSpace != nil {
		in, out := &in.LocalMaxSpace, &out.LocalMaxSpace
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.PathPrefix != nil {
		in, out := &in.PathPrefix, &out.PathPrefix
		*out = new(string)
		**out = **in
	}
	if in.Retain != nil {
		in, out := &in.Retain, &out.Retain
		*out = new(float64)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotAgentConfigInitParameters.
func (in *SnapshotAgentConfigInitParameters) DeepCopy() *SnapshotAgentConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotAgentConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotAgentConfigList) DeepCopyInto(out *SnapshotAgentConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SnapshotAgentConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotAgentConfigList.
func (in *SnapshotAgentConfigList) DeepCopy() *SnapshotAgentConfigList {
	if in == nil {
		return nil
	}
	out := new(SnapshotAgentConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SnapshotAgentConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotAgentConfigObservation) DeepCopyInto(out *SnapshotAgentConfigObservation) {
	*out = *in
	if in.AwsAccessKeyID != nil {
		in, out := &in.AwsAccessKeyID, &out.AwsAccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AwsS3Bucket != nil {
		in, out := &in.AwsS3Bucket, &out.AwsS3Bucket
		*out = new(string)
		**out = **in
	}
	if in.AwsS3DisableTLS != nil {
		in, out := &in.AwsS3DisableTLS, &out.AwsS3DisableTLS
		*out = new(bool)
		**out = **in
	}
	if in.AwsS3EnableKMS != nil {
		in, out := &in.AwsS3EnableKMS, &out.AwsS3EnableKMS
		*out = new(bool)
		**out = **in
	}
	if in.AwsS3Endpoint != nil {
		in, out := &in.AwsS3Endpoint, &out.AwsS3Endpoint
		*out = new(string)
		**out = **in
	}
	if in.AwsS3ForcePathStyle != nil {
		in, out := &in.AwsS3ForcePathStyle, &out.AwsS3ForcePathStyle
		*out = new(bool)
		**out = **in
	}
	if in.AwsS3KMSKey != nil {
		in, out := &in.AwsS3KMSKey, &out.AwsS3KMSKey
		*out = new(string)
		**out = **in
	}
	if in.AwsS3Region != nil {
		in, out := &in.AwsS3Region, &out.AwsS3Region
		*out = new(string)
		**out = **in
	}
	if in.AwsS3ServerSideEncryption != nil {
		in, out := &in.AwsS3ServerSideEncryption, &out.AwsS3ServerSideEncryption
		*out = new(bool)
		**out = **in
	}
	if in.AwsSecretAccessKey != nil {
		in, out := &in.AwsSecretAccessKey, &out.AwsSecretAccessKey
		*out = new(string)
		**out = **in
	}
	if in.AwsSessionToken != nil {
		in, out := &in.AwsSessionToken, &out.AwsSessionToken
		*out = new(string)
		**out = **in
	}
	if in.AzureAccountKey != nil {
		in, out := &in.AzureAccountKey, &out.AzureAccountKey
		*out = new(string)
		**out = **in
	}
	if in.AzureAccountName != nil {
		in, out := &in.AzureAccountName, &out.AzureAccountName
		*out = new(string)
		**out = **in
	}
	if in.AzureBlobEnvironment != nil {
		in, out := &in.AzureBlobEnvironment, &out.AzureBlobEnvironment
		*out = new(string)
		**out = **in
	}
	if in.AzureContainerName != nil {
		in, out := &in.AzureContainerName, &out.AzureContainerName
		*out = new(string)
		**out = **in
	}
	if in.AzureEndpoint != nil {
		in, out := &in.AzureEndpoint, &out.AzureEndpoint
		*out = new(string)
		**out = **in
	}
	if in.FilePrefix != nil {
		in, out := &in.FilePrefix, &out.FilePrefix
		*out = new(string)
		**out = **in
	}
	if in.GoogleDisableTLS != nil {
		in, out := &in.GoogleDisableTLS, &out.GoogleDisableTLS
		*out = new(bool)
		**out = **in
	}
	if in.GoogleEndpoint != nil {
		in, out := &in.GoogleEndpoint, &out.GoogleEndpoint
		*out = new(string)
		**out = **in
	}
	if in.GoogleGcsBucket != nil {
		in, out := &in.GoogleGcsBucket, &out.GoogleGcsBucket
		*out = new(string)
		**out = **in
	}
	if in.GoogleServiceAccountKey != nil {
		in, out := &in.GoogleServiceAccountKey, &out.GoogleServiceAccountKey
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IntervalSeconds != nil {
		in, out := &in.IntervalSeconds, &out.IntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.LocalMaxSpace != nil {
		in, out := &in.LocalMaxSpace, &out.LocalMaxSpace
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.PathPrefix != nil {
		in, out := &in.PathPrefix, &out.PathPrefix
		*out = new(string)
		**out = **in
	}
	if in.Retain != nil {
		in, out := &in.Retain, &out.Retain
		*out = new(float64)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotAgentConfigObservation.
func (in *SnapshotAgentConfigObservation) DeepCopy() *SnapshotAgentConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SnapshotAgentConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotAgentConfigParameters) DeepCopyInto(out *SnapshotAgentConfigParameters) {
	*out = *in
	if in.AwsAccessKeyID != nil {
		in, out := &in.AwsAccessKeyID, &out.AwsAccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AwsS3Bucket != nil {
		in, out := &in.AwsS3Bucket, &out.AwsS3Bucket
		*out = new(string)
		**out = **in
	}
	if in.AwsS3DisableTLS != nil {
		in, out := &in.AwsS3DisableTLS, &out.AwsS3DisableTLS
		*out = new(bool)
		**out = **in
	}
	if in.AwsS3EnableKMS != nil {
		in, out := &in.AwsS3EnableKMS, &out.AwsS3EnableKMS
		*out = new(bool)
		**out = **in
	}
	if in.AwsS3Endpoint != nil {
		in, out := &in.AwsS3Endpoint, &out.AwsS3Endpoint
		*out = new(string)
		**out = **in
	}
	if in.AwsS3ForcePathStyle != nil {
		in, out := &in.AwsS3ForcePathStyle, &out.AwsS3ForcePathStyle
		*out = new(bool)
		**out = **in
	}
	if in.AwsS3KMSKey != nil {
		in, out := &in.AwsS3KMSKey, &out.AwsS3KMSKey
		*out = new(string)
		**out = **in
	}
	if in.AwsS3Region != nil {
		in, out := &in.AwsS3Region, &out.AwsS3Region
		*out = new(string)
		**out = **in
	}
	if in.AwsS3ServerSideEncryption != nil {
		in, out := &in.AwsS3ServerSideEncryption, &out.AwsS3ServerSideEncryption
		*out = new(bool)
		**out = **in
	}
	if in.AwsSecretAccessKey != nil {
		in, out := &in.AwsSecretAccessKey, &out.AwsSecretAccessKey
		*out = new(string)
		**out = **in
	}
	if in.AwsSessionToken != nil {
		in, out := &in.AwsSessionToken, &out.AwsSessionToken
		*out = new(string)
		**out = **in
	}
	if in.AzureAccountKey != nil {
		in, out := &in.AzureAccountKey, &out.AzureAccountKey
		*out = new(string)
		**out = **in
	}
	if in.AzureAccountName != nil {
		in, out := &in.AzureAccountName, &out.AzureAccountName
		*out = new(string)
		**out = **in
	}
	if in.AzureBlobEnvironment != nil {
		in, out := &in.AzureBlobEnvironment, &out.AzureBlobEnvironment
		*out = new(string)
		**out = **in
	}
	if in.AzureContainerName != nil {
		in, out := &in.AzureContainerName, &out.AzureContainerName
		*out = new(string)
		**out = **in
	}
	if in.AzureEndpoint != nil {
		in, out := &in.AzureEndpoint, &out.AzureEndpoint
		*out = new(string)
		**out = **in
	}
	if in.FilePrefix != nil {
		in, out := &in.FilePrefix, &out.FilePrefix
		*out = new(string)
		**out = **in
	}
	if in.GoogleDisableTLS != nil {
		in, out := &in.GoogleDisableTLS, &out.GoogleDisableTLS
		*out = new(bool)
		**out = **in
	}
	if in.GoogleEndpoint != nil {
		in, out := &in.GoogleEndpoint, &out.GoogleEndpoint
		*out = new(string)
		**out = **in
	}
	if in.GoogleGcsBucket != nil {
		in, out := &in.GoogleGcsBucket, &out.GoogleGcsBucket
		*out = new(string)
		**out = **in
	}
	if in.GoogleServiceAccountKey != nil {
		in, out := &in.GoogleServiceAccountKey, &out.GoogleServiceAccountKey
		*out = new(string)
		**out = **in
	}
	if in.IntervalSeconds != nil {
		in, out := &in.IntervalSeconds, &out.IntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.LocalMaxSpace != nil {
		in, out := &in.LocalMaxSpace, &out.LocalMaxSpace
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.PathPrefix != nil {
		in, out := &in.PathPrefix, &out.PathPrefix
		*out = new(string)
		**out = **in
	}
	if in.Retain != nil {
		in, out := &in.Retain, &out.Retain
		*out = new(float64)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotAgentConfigParameters.
func (in *SnapshotAgentConfigParameters) DeepCopy() *SnapshotAgentConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotAgentConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotAgentConfigSpec) DeepCopyInto(out *SnapshotAgentConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotAgentConfigSpec.
func (in *SnapshotAgentConfigSpec) DeepCopy() *SnapshotAgentConfigSpec {
	if in == nil {
		return nil
	}
	out := new(SnapshotAgentConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotAgentConfigStatus) DeepCopyInto(out *SnapshotAgentConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotAgentConfigStatus.
func (in *SnapshotAgentConfigStatus) DeepCopy() *SnapshotAgentConfigStatus {
	if in == nil {
		return nil
	}
	out := new(SnapshotAgentConfigStatus)
	in.DeepCopyInto(out)
	return out
}
