/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type OidcKeyAllowedClientIDInitParameters struct {

	// Client ID to allow usage with the OIDC named key
	// Role Client ID allowed to use the key for signing.
	// +crossplane:generate:reference:type=github.com/upbound/provider-vault/v2/apis/identity/v1alpha1.OidcRole
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("client_id",false)
	AllowedClientID *string `json:"allowedClientId,omitempty" tf:"allowed_client_id,omitempty"`

	// Reference to a OidcRole in identity to populate allowedClientId.
	// +kubebuilder:validation:Optional
	AllowedClientIDRef *v1.Reference `json:"allowedClientIdRef,omitempty" tf:"-"`

	// Selector for a OidcRole in identity to populate allowedClientId.
	// +kubebuilder:validation:Optional
	AllowedClientIDSelector *v1.Selector `json:"allowedClientIdSelector,omitempty" tf:"-"`

	// Name of the OIDC Key allow the Client ID.
	// Name of the key.
	// +crossplane:generate:reference:type=github.com/upbound/provider-vault/v2/apis/identity/v1alpha1.OidcKey
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("name",false)
	KeyName *string `json:"keyName,omitempty" tf:"key_name,omitempty"`

	// Reference to a OidcKey in identity to populate keyName.
	// +kubebuilder:validation:Optional
	KeyNameRef *v1.Reference `json:"keyNameRef,omitempty" tf:"-"`

	// Selector for a OidcKey in identity to populate keyName.
	// +kubebuilder:validation:Optional
	KeyNameSelector *v1.Selector `json:"keyNameSelector,omitempty" tf:"-"`

	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The namespace is always relative to the provider's configured namespace.
	// Available only for Vault Enterprise.
	// Target namespace. (requires Enterprise)
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`
}

type OidcKeyAllowedClientIDObservation struct {

	// Client ID to allow usage with the OIDC named key
	// Role Client ID allowed to use the key for signing.
	AllowedClientID *string `json:"allowedClientId,omitempty" tf:"allowed_client_id,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Name of the OIDC Key allow the Client ID.
	// Name of the key.
	KeyName *string `json:"keyName,omitempty" tf:"key_name,omitempty"`

	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The namespace is always relative to the provider's configured namespace.
	// Available only for Vault Enterprise.
	// Target namespace. (requires Enterprise)
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`
}

type OidcKeyAllowedClientIDParameters struct {

	// Client ID to allow usage with the OIDC named key
	// Role Client ID allowed to use the key for signing.
	// +crossplane:generate:reference:type=github.com/upbound/provider-vault/v2/apis/identity/v1alpha1.OidcRole
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("client_id",false)
	// +kubebuilder:validation:Optional
	AllowedClientID *string `json:"allowedClientId,omitempty" tf:"allowed_client_id,omitempty"`

	// Reference to a OidcRole in identity to populate allowedClientId.
	// +kubebuilder:validation:Optional
	AllowedClientIDRef *v1.Reference `json:"allowedClientIdRef,omitempty" tf:"-"`

	// Selector for a OidcRole in identity to populate allowedClientId.
	// +kubebuilder:validation:Optional
	AllowedClientIDSelector *v1.Selector `json:"allowedClientIdSelector,omitempty" tf:"-"`

	// Name of the OIDC Key allow the Client ID.
	// Name of the key.
	// +crossplane:generate:reference:type=github.com/upbound/provider-vault/v2/apis/identity/v1alpha1.OidcKey
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("name",false)
	// +kubebuilder:validation:Optional
	KeyName *string `json:"keyName,omitempty" tf:"key_name,omitempty"`

	// Reference to a OidcKey in identity to populate keyName.
	// +kubebuilder:validation:Optional
	KeyNameRef *v1.Reference `json:"keyNameRef,omitempty" tf:"-"`

	// Selector for a OidcKey in identity to populate keyName.
	// +kubebuilder:validation:Optional
	KeyNameSelector *v1.Selector `json:"keyNameSelector,omitempty" tf:"-"`

	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The namespace is always relative to the provider's configured namespace.
	// Available only for Vault Enterprise.
	// Target namespace. (requires Enterprise)
	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`
}

// OidcKeyAllowedClientIDSpec defines the desired state of OidcKeyAllowedClientID
type OidcKeyAllowedClientIDSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     OidcKeyAllowedClientIDParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider OidcKeyAllowedClientIDInitParameters `json:"initProvider,omitempty"`
}

// OidcKeyAllowedClientIDStatus defines the observed state of OidcKeyAllowedClientID.
type OidcKeyAllowedClientIDStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        OidcKeyAllowedClientIDObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// OidcKeyAllowedClientID is the Schema for the OidcKeyAllowedClientIDs API. Allows an Identity OIDC Role to use an OIDC Named key.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vault}
type OidcKeyAllowedClientID struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              OidcKeyAllowedClientIDSpec   `json:"spec"`
	Status            OidcKeyAllowedClientIDStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// OidcKeyAllowedClientIDList contains a list of OidcKeyAllowedClientIDs
type OidcKeyAllowedClientIDList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []OidcKeyAllowedClientID `json:"items"`
}

// Repository type metadata.
var (
	OidcKeyAllowedClientID_Kind             = "OidcKeyAllowedClientID"
	OidcKeyAllowedClientID_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: OidcKeyAllowedClientID_Kind}.String()
	OidcKeyAllowedClientID_KindAPIVersion   = OidcKeyAllowedClientID_Kind + "." + CRDGroupVersion.String()
	OidcKeyAllowedClientID_GroupVersionKind = CRDGroupVersion.WithKind(OidcKeyAllowedClientID_Kind)
)

func init() {
	SchemeBuilder.Register(&OidcKeyAllowedClientID{}, &OidcKeyAllowedClientIDList{})
}
