/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AuthBackendInitParameters struct {
	Binddn *string `json:"binddn,omitempty" tf:"binddn,omitempty"`

	CaseSensitiveNames *bool `json:"caseSensitiveNames,omitempty" tf:"case_sensitive_names,omitempty"`

	Certificate *string `json:"certificate,omitempty" tf:"certificate,omitempty"`

	ClientTLSCert *string `json:"clientTlsCert,omitempty" tf:"client_tls_cert,omitempty"`

	DenyNullBind *bool `json:"denyNullBind,omitempty" tf:"deny_null_bind,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// If set, opts out of mount migration on path updates.
	DisableRemount *bool `json:"disableRemount,omitempty" tf:"disable_remount,omitempty"`

	Discoverdn *bool `json:"discoverdn,omitempty" tf:"discoverdn,omitempty"`

	Groupattr *string `json:"groupattr,omitempty" tf:"groupattr,omitempty"`

	Groupdn *string `json:"groupdn,omitempty" tf:"groupdn,omitempty"`

	Groupfilter *string `json:"groupfilter,omitempty" tf:"groupfilter,omitempty"`

	InsecureTLS *bool `json:"insecureTls,omitempty" tf:"insecure_tls,omitempty"`

	// Specifies if the auth method is local only
	Local *bool `json:"local,omitempty" tf:"local,omitempty"`

	MaxPageSize *float64 `json:"maxPageSize,omitempty" tf:"max_page_size,omitempty"`

	// Target namespace. (requires Enterprise)
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	Starttls *bool `json:"starttls,omitempty" tf:"starttls,omitempty"`

	TLSMaxVersion *string `json:"tlsMaxVersion,omitempty" tf:"tls_max_version,omitempty"`

	TLSMinVersion *string `json:"tlsMinVersion,omitempty" tf:"tls_min_version,omitempty"`

	// Specifies the blocks of IP addresses which are allowed to use the generated token
	TokenBoundCidrs []*string `json:"tokenBoundCidrs,omitempty" tf:"token_bound_cidrs,omitempty"`

	// Generated Token's Explicit Maximum TTL in seconds
	TokenExplicitMaxTTL *float64 `json:"tokenExplicitMaxTtl,omitempty" tf:"token_explicit_max_ttl,omitempty"`

	// The maximum lifetime of the generated token
	TokenMaxTTL *float64 `json:"tokenMaxTtl,omitempty" tf:"token_max_ttl,omitempty"`

	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"tokenNoDefaultPolicy,omitempty" tf:"token_no_default_policy,omitempty"`

	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *float64 `json:"tokenNumUses,omitempty" tf:"token_num_uses,omitempty"`

	// Generated Token's Period
	TokenPeriod *float64 `json:"tokenPeriod,omitempty" tf:"token_period,omitempty"`

	// Generated Token's Policies
	TokenPolicies []*string `json:"tokenPolicies,omitempty" tf:"token_policies,omitempty"`

	// The initial ttl of the token to generate in seconds
	TokenTTL *float64 `json:"tokenTtl,omitempty" tf:"token_ttl,omitempty"`

	// The type of token to generate, service or batch
	TokenType *string `json:"tokenType,omitempty" tf:"token_type,omitempty"`

	URL *string `json:"url,omitempty" tf:"url,omitempty"`

	Upndomain *string `json:"upndomain,omitempty" tf:"upndomain,omitempty"`

	UseTokenGroups *bool `json:"useTokenGroups,omitempty" tf:"use_token_groups,omitempty"`

	Userattr *string `json:"userattr,omitempty" tf:"userattr,omitempty"`

	Userdn *string `json:"userdn,omitempty" tf:"userdn,omitempty"`

	Userfilter *string `json:"userfilter,omitempty" tf:"userfilter,omitempty"`

	// Force the auth method to use the username passed by the user as the alias name.
	UsernameAsAlias *bool `json:"usernameAsAlias,omitempty" tf:"username_as_alias,omitempty"`
}

type AuthBackendObservation struct {

	// The accessor of the LDAP auth backend
	Accessor *string `json:"accessor,omitempty" tf:"accessor,omitempty"`

	Binddn *string `json:"binddn,omitempty" tf:"binddn,omitempty"`

	CaseSensitiveNames *bool `json:"caseSensitiveNames,omitempty" tf:"case_sensitive_names,omitempty"`

	Certificate *string `json:"certificate,omitempty" tf:"certificate,omitempty"`

	ClientTLSCert *string `json:"clientTlsCert,omitempty" tf:"client_tls_cert,omitempty"`

	DenyNullBind *bool `json:"denyNullBind,omitempty" tf:"deny_null_bind,omitempty"`

	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// If set, opts out of mount migration on path updates.
	DisableRemount *bool `json:"disableRemount,omitempty" tf:"disable_remount,omitempty"`

	Discoverdn *bool `json:"discoverdn,omitempty" tf:"discoverdn,omitempty"`

	Groupattr *string `json:"groupattr,omitempty" tf:"groupattr,omitempty"`

	Groupdn *string `json:"groupdn,omitempty" tf:"groupdn,omitempty"`

	Groupfilter *string `json:"groupfilter,omitempty" tf:"groupfilter,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	InsecureTLS *bool `json:"insecureTls,omitempty" tf:"insecure_tls,omitempty"`

	// Specifies if the auth method is local only
	Local *bool `json:"local,omitempty" tf:"local,omitempty"`

	MaxPageSize *float64 `json:"maxPageSize,omitempty" tf:"max_page_size,omitempty"`

	// Target namespace. (requires Enterprise)
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	Starttls *bool `json:"starttls,omitempty" tf:"starttls,omitempty"`

	TLSMaxVersion *string `json:"tlsMaxVersion,omitempty" tf:"tls_max_version,omitempty"`

	TLSMinVersion *string `json:"tlsMinVersion,omitempty" tf:"tls_min_version,omitempty"`

	// Specifies the blocks of IP addresses which are allowed to use the generated token
	TokenBoundCidrs []*string `json:"tokenBoundCidrs,omitempty" tf:"token_bound_cidrs,omitempty"`

	// Generated Token's Explicit Maximum TTL in seconds
	TokenExplicitMaxTTL *float64 `json:"tokenExplicitMaxTtl,omitempty" tf:"token_explicit_max_ttl,omitempty"`

	// The maximum lifetime of the generated token
	TokenMaxTTL *float64 `json:"tokenMaxTtl,omitempty" tf:"token_max_ttl,omitempty"`

	// If true, the 'default' policy will not automatically be added to generated tokens
	TokenNoDefaultPolicy *bool `json:"tokenNoDefaultPolicy,omitempty" tf:"token_no_default_policy,omitempty"`

	// The maximum number of times a token may be used, a value of zero means unlimited
	TokenNumUses *float64 `json:"tokenNumUses,omitempty" tf:"token_num_uses,omitempty"`

	// Generated Token's Period
	TokenPeriod *float64 `json:"tokenPeriod,omitempty" tf:"token_period,omitempty"`

	// Generated Token's Policies
	TokenPolicies []*string `json:"tokenPolicies,omitempty" tf:"token_policies,omitempty"`

	// The initial ttl of the token to generate in seconds
	TokenTTL *float64 `json:"tokenTtl,omitempty" tf:"token_ttl,omitempty"`

	// The type of token to generate, service or batch
	TokenType *string `json:"tokenType,omitempty" tf:"token_type,omitempty"`

	URL *string `json:"url,omitempty" tf:"url,omitempty"`

	Upndomain *string `json:"upndomain,omitempty" tf:"upndomain,omitempty"`

	UseTokenGroups *bool `json:"useTokenGroups,omitempty" tf:"use_token_groups,omitempty"`

	Userattr *string `json:"userattr,omitempty" tf:"userattr,omitempty"`

	Userdn *string `json:"userdn,omitempty" tf:"userdn,omitempty"`

	Userfilter *string `json:"userfilter,omitempty" tf:"userfilter,omitempty"`

	// Force the auth method to use the username passed by the user as the alias name.
	UsernameAsAlias *bool `json:"usernameAsAlias,omitempty" tf:"username_as_alias,omitempty"`
}

type AuthBackendParameters struct {

	// +kubebuilder:validation:Optional
	Binddn *string `json:"binddn,omitempty" tf:"binddn,omitempty"`

	// +kubebuilder:validation:Optional
	BindpassSecretRef *v1.SecretKeySelector `json:"bindpassSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	CaseSensitiveNames *bool `json:"caseSensitiveNames,omitempty" tf:"case_sensitive_names,omitempty"`

	// +kubebuilder:validation:Optional
	Certificate *string `json:"certificate,omitempty" tf:"certificate,omitempty"`

	// +kubebuilder:validation:Optional
	ClientTLSCert *string `json:"clientTlsCert,omitempty" tf:"client_tls_cert,omitempty"`

	// +kubebuilder:validation:Optional
	ClientTLSKeySecretRef *v1.SecretKeySelector `json:"clientTlsKeySecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	DenyNullBind *bool `json:"denyNullBind,omitempty" tf:"deny_null_bind,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// If set, opts out of mount migration on path updates.
	// +kubebuilder:validation:Optional
	DisableRemount *bool `json:"disableRemount,omitempty" tf:"disable_remount,omitempty"`

	// +kubebuilder:validation:Optional
	Discoverdn *bool `json:"discoverdn,omitempty" tf:"discoverdn,omitempty"`

	// +kubebuilder:validation:Optional
	Groupattr *string `json:"groupattr,omitempty" tf:"groupattr,omitempty"`

	// +kubebuilder:validation:Optional
	Groupdn *string `json:"groupdn,omitempty" tf:"groupdn,omitempty"`

	// +kubebuilder:validation:Optional
	Groupfilter *string `json:"groupfilter,omitempty" tf:"groupfilter,omitempty"`

	// +kubebuilder:validation:Optional
	InsecureTLS *bool `json:"insecureTls,omitempty" tf:"insecure_tls,omitempty"`

	// Specifies if the auth method is local only
	// +kubebuilder:validation:Optional
	Local *bool `json:"local,omitempty" tf:"local,omitempty"`

	// +kubebuilder:validation:Optional
	MaxPageSize *float64 `json:"maxPageSize,omitempty" tf:"max_page_size,omitempty"`

	// Target namespace. (requires Enterprise)
	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Starttls *bool `json:"starttls,omitempty" tf:"starttls,omitempty"`

	// +kubebuilder:validation:Optional
	TLSMaxVersion *string `json:"tlsMaxVersion,omitempty" tf:"tls_max_version,omitempty"`

	// +kubebuilder:validation:Optional
	TLSMinVersion *string `json:"tlsMinVersion,omitempty" tf:"tls_min_version,omitempty"`

	// Specifies the blocks of IP addresses which are allowed to use the generated token
	// +kubebuilder:validation:Optional
	TokenBoundCidrs []*string `json:"tokenBoundCidrs,omitempty" tf:"token_bound_cidrs,omitempty"`

	// Generated Token's Explicit Maximum TTL in seconds
	// +kubebuilder:validation:Optional
	TokenExplicitMaxTTL *float64 `json:"tokenExplicitMaxTtl,omitempty" tf:"token_explicit_max_ttl,omitempty"`

	// The maximum lifetime of the generated token
	// +kubebuilder:validation:Optional
	TokenMaxTTL *float64 `json:"tokenMaxTtl,omitempty" tf:"token_max_ttl,omitempty"`

	// If true, the 'default' policy will not automatically be added to generated tokens
	// +kubebuilder:validation:Optional
	TokenNoDefaultPolicy *bool `json:"tokenNoDefaultPolicy,omitempty" tf:"token_no_default_policy,omitempty"`

	// The maximum number of times a token may be used, a value of zero means unlimited
	// +kubebuilder:validation:Optional
	TokenNumUses *float64 `json:"tokenNumUses,omitempty" tf:"token_num_uses,omitempty"`

	// Generated Token's Period
	// +kubebuilder:validation:Optional
	TokenPeriod *float64 `json:"tokenPeriod,omitempty" tf:"token_period,omitempty"`

	// Generated Token's Policies
	// +kubebuilder:validation:Optional
	TokenPolicies []*string `json:"tokenPolicies,omitempty" tf:"token_policies,omitempty"`

	// The initial ttl of the token to generate in seconds
	// +kubebuilder:validation:Optional
	TokenTTL *float64 `json:"tokenTtl,omitempty" tf:"token_ttl,omitempty"`

	// The type of token to generate, service or batch
	// +kubebuilder:validation:Optional
	TokenType *string `json:"tokenType,omitempty" tf:"token_type,omitempty"`

	// +kubebuilder:validation:Optional
	URL *string `json:"url,omitempty" tf:"url,omitempty"`

	// +kubebuilder:validation:Optional
	Upndomain *string `json:"upndomain,omitempty" tf:"upndomain,omitempty"`

	// +kubebuilder:validation:Optional
	UseTokenGroups *bool `json:"useTokenGroups,omitempty" tf:"use_token_groups,omitempty"`

	// +kubebuilder:validation:Optional
	Userattr *string `json:"userattr,omitempty" tf:"userattr,omitempty"`

	// +kubebuilder:validation:Optional
	Userdn *string `json:"userdn,omitempty" tf:"userdn,omitempty"`

	// +kubebuilder:validation:Optional
	Userfilter *string `json:"userfilter,omitempty" tf:"userfilter,omitempty"`

	// Force the auth method to use the username passed by the user as the alias name.
	// +kubebuilder:validation:Optional
	UsernameAsAlias *bool `json:"usernameAsAlias,omitempty" tf:"username_as_alias,omitempty"`
}

// AuthBackendSpec defines the desired state of AuthBackend
type AuthBackendSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AuthBackendParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AuthBackendInitParameters `json:"initProvider,omitempty"`
}

// AuthBackendStatus defines the observed state of AuthBackend.
type AuthBackendStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AuthBackendObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AuthBackend is the Schema for the AuthBackends API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vault}
type AuthBackend struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.url) || has(self.initProvider.url)",message="url is a required parameter"
	Spec   AuthBackendSpec   `json:"spec"`
	Status AuthBackendStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AuthBackendList contains a list of AuthBackends
type AuthBackendList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AuthBackend `json:"items"`
}

// Repository type metadata.
var (
	AuthBackend_Kind             = "AuthBackend"
	AuthBackend_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AuthBackend_Kind}.String()
	AuthBackend_KindAPIVersion   = AuthBackend_Kind + "." + CRDGroupVersion.String()
	AuthBackend_GroupVersionKind = CRDGroupVersion.WithKind(AuthBackend_Kind)
)

func init() {
	SchemeBuilder.Register(&AuthBackend{}, &AuthBackendList{})
}
