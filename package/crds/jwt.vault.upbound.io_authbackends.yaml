---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: authbackends.jwt.vault.upbound.io
spec:
  group: jwt.vault.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - vault
    kind: AuthBackend
    listKind: AuthBackendList
    plural: authbackends
    singular: authbackend
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AuthBackend is the Schema for the AuthBackends API. Managing
          JWT/OIDC auth backends in Vault
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AuthBackendSpec defines the desired state of AuthBackend
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  boundIssuer:
                    description: |-
                      The value against which to match the iss claim in a JWT
                      The value against which to match the iss claim in a JWT
                    type: string
                  defaultRole:
                    description: |-
                      The default role to use if none is provided during login
                      The default role to use if none is provided during login
                    type: string
                  description:
                    description: |-
                      The description of the auth backend
                      The description of the auth backend
                    type: string
                  disableRemount:
                    description: |-
                      If set, opts out of mount migration on path updates.
                      See here for more info on Mount Migration
                      If set, opts out of mount migration on path updates.
                    type: boolean
                  jwksCaPem:
                    description: |-
                      The CA certificate or chain of certificates, in PEM format, to use to validate connections to the JWKS URL. If not set, system certificates are used.
                      The CA certificate or chain of certificates, in PEM format, to use to validate connections to the JWKS URL. If not set, system certificates are used.
                    type: string
                  jwksUrl:
                    description: |-
                      JWKS URL to use to authenticate signatures. Cannot be used with "oidc_discovery_url" or "jwt_validation_pubkeys".
                      JWKS URL to use to authenticate signatures. Cannot be used with 'oidc_discovery_url' or 'jwt_validation_pubkeys'.
                    type: string
                  jwtSupportedAlgs:
                    description: |-
                      A list of supported signing algorithms. Vault 1.1.0 defaults to [RS256] but future or past versions of Vault may differ
                      A list of supported signing algorithms. Defaults to [RS256]
                    items:
                      type: string
                    type: array
                  jwtValidationPubkeys:
                    description: |-
                      A list of PEM-encoded public keys to use to authenticate signatures locally. Cannot be used in combination with oidc_discovery_url
                      A list of PEM-encoded public keys to use to authenticate signatures locally. Cannot be used with 'jwks_url' or 'oidc_discovery_url'.
                    items:
                      type: string
                    type: array
                  local:
                    description: |-
                      Specifies if the auth method is local only.
                      Specifies if the auth method is local only
                    type: boolean
                  namespace:
                    description: |-
                      The namespace to provision the resource in.
                      The value should not contain leading or trailing forward slashes.
                      The namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise.
                      Target namespace. (requires Enterprise)
                    type: string
                  namespaceInState:
                    description: |-
                      Pass namespace in the OIDC state parameter instead of as a separate query parameter. With this setting, the allowed redirect URL(s) in Vault and on the provider side should not contain a namespace query parameter. This means only one redirect URL entry needs to be maintained on the OIDC provider side for all vault namespaces that will be authenticating against it. Defaults to true for new configs
                      Pass namespace in the OIDC state parameter instead of as a separate query parameter. With this setting, the allowed redirect URL(s) in Vault and on the provider side should not contain a namespace query parameter. This means only one redirect URL entry needs to be maintained on the OIDC provider side for all vault namespaces that will be authenticating against it. Defaults to true for new configs.
                    type: boolean
                  oidcClientId:
                    description: |-
                      Client ID used for OIDC backends
                      Client ID used for OIDC
                    type: string
                  oidcClientSecretSecretRef:
                    description: |-
                      Client Secret used for OIDC backends
                      Client Secret used for OIDC
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  oidcDiscoveryCaPem:
                    description: |-
                      The CA certificate or chain of certificates, in PEM format, to use to validate connections to the OIDC Discovery URL. If not set, system certificates are used
                      The CA certificate or chain of certificates, in PEM format, to use to validate connections to the OIDC Discovery URL. If not set, system certificates are used
                    type: string
                  oidcDiscoveryUrl:
                    description: |-
                      The OIDC Discovery URL, without any .well-known component (base path). Cannot be used in combination with jwt_validation_pubkeys
                      The OIDC Discovery URL, without any .well-known component (base path). Cannot be used with 'jwks_url' or 'jwt_validation_pubkeys'.
                    type: string
                  oidcResponseMode:
                    description: |-
                      The response mode to be used in the OAuth2 request. Allowed values are query and form_post. Defaults to query. If using Vault namespaces, and oidc_response_mode is form_post, then namespace_in_state should be set to false.
                      The response mode to be used in the OAuth2 request. Allowed values are 'query' and 'form_post'. Defaults to 'query'. If using Vault namespaces, and oidc_response_mode is 'form_post', then 'namespace_in_state' should be set to false.
                    type: string
                  oidcResponseTypes:
                    description: |-
                      List of response types to request. Allowed values are 'code' and 'id_token'. Defaults to ["code"]. Note: id_token may only be used if oidc_response_mode is set to form_post.
                      The response types to request. Allowed values are 'code' and 'id_token'. Defaults to 'code'. Note: 'id_token' may only be used if 'oidc_response_mode' is set to 'form_post'.
                    items:
                      type: string
                    type: array
                  path:
                    description: |-
                      Path to mount the JWT/OIDC auth backend
                      path to mount the backend
                    type: string
                  providerConfig:
                    additionalProperties:
                      type: string
                    description: |-
                      Provider specific handling configuration. All values may be strings, and the provider will convert to the appropriate type when configuring Vault.
                      Provider specific handling configuration
                    type: object
                    x-kubernetes-map-type: granular
                  tune:
                    items:
                      properties:
                        allowedResponseHeaders:
                          description: |-
                            List of headers to whitelist and allowing
                            a plugin to include them in the response.
                          items:
                            type: string
                          type: array
                        auditNonHmacRequestKeys:
                          description: |-
                            Specifies the list of keys that will
                            not be HMAC'd by audit devices in the request data object.
                          items:
                            type: string
                          type: array
                        auditNonHmacResponseKeys:
                          description: |-
                            Specifies the list of keys that will
                            not be HMAC'd by audit devices in the response data object.
                          items:
                            type: string
                          type: array
                        defaultLeaseTtl:
                          description: |-
                            Specifies the default time-to-live.
                            If set, this overrides the global default.
                            Must be a valid duration string
                          type: string
                        listingVisibility:
                          description: |-
                            Specifies whether to show this mount in
                            the UI-specific listing endpoint. Valid values are "unauth" or "hidden".
                          type: string
                        maxLeaseTtl:
                          description: |-
                            Specifies the maximum time-to-live.
                            If set, this overrides the global default.
                            Must be a valid duration string
                          type: string
                        passthroughRequestHeaders:
                          description: |-
                            List of headers to whitelist and
                            pass from the request to the backend.
                          items:
                            type: string
                          type: array
                        tokenType:
                          description: |-
                            Specifies the type of tokens that should be returned by
                            the mount. Valid values are "default-service", "default-batch", "service", "batch".
                          type: string
                      type: object
                    type: array
                  type:
                    description: |-
                      Type of auth backend. Should be one of jwt or oidc. Default - jwt
                      Type of backend. Can be either 'jwt' or 'oidc'
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  boundIssuer:
                    description: |-
                      The value against which to match the iss claim in a JWT
                      The value against which to match the iss claim in a JWT
                    type: string
                  defaultRole:
                    description: |-
                      The default role to use if none is provided during login
                      The default role to use if none is provided during login
                    type: string
                  description:
                    description: |-
                      The description of the auth backend
                      The description of the auth backend
                    type: string
                  disableRemount:
                    description: |-
                      If set, opts out of mount migration on path updates.
                      See here for more info on Mount Migration
                      If set, opts out of mount migration on path updates.
                    type: boolean
                  jwksCaPem:
                    description: |-
                      The CA certificate or chain of certificates, in PEM format, to use to validate connections to the JWKS URL. If not set, system certificates are used.
                      The CA certificate or chain of certificates, in PEM format, to use to validate connections to the JWKS URL. If not set, system certificates are used.
                    type: string
                  jwksUrl:
                    description: |-
                      JWKS URL to use to authenticate signatures. Cannot be used with "oidc_discovery_url" or "jwt_validation_pubkeys".
                      JWKS URL to use to authenticate signatures. Cannot be used with 'oidc_discovery_url' or 'jwt_validation_pubkeys'.
                    type: string
                  jwtSupportedAlgs:
                    description: |-
                      A list of supported signing algorithms. Vault 1.1.0 defaults to [RS256] but future or past versions of Vault may differ
                      A list of supported signing algorithms. Defaults to [RS256]
                    items:
                      type: string
                    type: array
                  jwtValidationPubkeys:
                    description: |-
                      A list of PEM-encoded public keys to use to authenticate signatures locally. Cannot be used in combination with oidc_discovery_url
                      A list of PEM-encoded public keys to use to authenticate signatures locally. Cannot be used with 'jwks_url' or 'oidc_discovery_url'.
                    items:
                      type: string
                    type: array
                  local:
                    description: |-
                      Specifies if the auth method is local only.
                      Specifies if the auth method is local only
                    type: boolean
                  namespace:
                    description: |-
                      The namespace to provision the resource in.
                      The value should not contain leading or trailing forward slashes.
                      The namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise.
                      Target namespace. (requires Enterprise)
                    type: string
                  namespaceInState:
                    description: |-
                      Pass namespace in the OIDC state parameter instead of as a separate query parameter. With this setting, the allowed redirect URL(s) in Vault and on the provider side should not contain a namespace query parameter. This means only one redirect URL entry needs to be maintained on the OIDC provider side for all vault namespaces that will be authenticating against it. Defaults to true for new configs
                      Pass namespace in the OIDC state parameter instead of as a separate query parameter. With this setting, the allowed redirect URL(s) in Vault and on the provider side should not contain a namespace query parameter. This means only one redirect URL entry needs to be maintained on the OIDC provider side for all vault namespaces that will be authenticating against it. Defaults to true for new configs.
                    type: boolean
                  oidcClientId:
                    description: |-
                      Client ID used for OIDC backends
                      Client ID used for OIDC
                    type: string
                  oidcClientSecretSecretRef:
                    description: |-
                      Client Secret used for OIDC backends
                      Client Secret used for OIDC
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  oidcDiscoveryCaPem:
                    description: |-
                      The CA certificate or chain of certificates, in PEM format, to use to validate connections to the OIDC Discovery URL. If not set, system certificates are used
                      The CA certificate or chain of certificates, in PEM format, to use to validate connections to the OIDC Discovery URL. If not set, system certificates are used
                    type: string
                  oidcDiscoveryUrl:
                    description: |-
                      The OIDC Discovery URL, without any .well-known component (base path). Cannot be used in combination with jwt_validation_pubkeys
                      The OIDC Discovery URL, without any .well-known component (base path). Cannot be used with 'jwks_url' or 'jwt_validation_pubkeys'.
                    type: string
                  oidcResponseMode:
                    description: |-
                      The response mode to be used in the OAuth2 request. Allowed values are query and form_post. Defaults to query. If using Vault namespaces, and oidc_response_mode is form_post, then namespace_in_state should be set to false.
                      The response mode to be used in the OAuth2 request. Allowed values are 'query' and 'form_post'. Defaults to 'query'. If using Vault namespaces, and oidc_response_mode is 'form_post', then 'namespace_in_state' should be set to false.
                    type: string
                  oidcResponseTypes:
                    description: |-
                      List of response types to request. Allowed values are 'code' and 'id_token'. Defaults to ["code"]. Note: id_token may only be used if oidc_response_mode is set to form_post.
                      The response types to request. Allowed values are 'code' and 'id_token'. Defaults to 'code'. Note: 'id_token' may only be used if 'oidc_response_mode' is set to 'form_post'.
                    items:
                      type: string
                    type: array
                  path:
                    description: |-
                      Path to mount the JWT/OIDC auth backend
                      path to mount the backend
                    type: string
                  providerConfig:
                    additionalProperties:
                      type: string
                    description: |-
                      Provider specific handling configuration. All values may be strings, and the provider will convert to the appropriate type when configuring Vault.
                      Provider specific handling configuration
                    type: object
                    x-kubernetes-map-type: granular
                  tune:
                    items:
                      properties:
                        allowedResponseHeaders:
                          description: |-
                            List of headers to whitelist and allowing
                            a plugin to include them in the response.
                          items:
                            type: string
                          type: array
                        auditNonHmacRequestKeys:
                          description: |-
                            Specifies the list of keys that will
                            not be HMAC'd by audit devices in the request data object.
                          items:
                            type: string
                          type: array
                        auditNonHmacResponseKeys:
                          description: |-
                            Specifies the list of keys that will
                            not be HMAC'd by audit devices in the response data object.
                          items:
                            type: string
                          type: array
                        defaultLeaseTtl:
                          description: |-
                            Specifies the default time-to-live.
                            If set, this overrides the global default.
                            Must be a valid duration string
                          type: string
                        listingVisibility:
                          description: |-
                            Specifies whether to show this mount in
                            the UI-specific listing endpoint. Valid values are "unauth" or "hidden".
                          type: string
                        maxLeaseTtl:
                          description: |-
                            Specifies the maximum time-to-live.
                            If set, this overrides the global default.
                            Must be a valid duration string
                          type: string
                        passthroughRequestHeaders:
                          description: |-
                            List of headers to whitelist and
                            pass from the request to the backend.
                          items:
                            type: string
                          type: array
                        tokenType:
                          description: |-
                            Specifies the type of tokens that should be returned by
                            the mount. Valid values are "default-service", "default-batch", "service", "batch".
                          type: string
                      type: object
                    type: array
                  type:
                    description: |-
                      Type of auth backend. Should be one of jwt or oidc. Default - jwt
                      Type of backend. Can be either 'jwt' or 'oidc'
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: AuthBackendStatus defines the observed state of AuthBackend.
            properties:
              atProvider:
                properties:
                  accessor:
                    description: |-
                      The accessor for this auth method
                      The accessor of the JWT auth backend
                    type: string
                  boundIssuer:
                    description: |-
                      The value against which to match the iss claim in a JWT
                      The value against which to match the iss claim in a JWT
                    type: string
                  defaultRole:
                    description: |-
                      The default role to use if none is provided during login
                      The default role to use if none is provided during login
                    type: string
                  description:
                    description: |-
                      The description of the auth backend
                      The description of the auth backend
                    type: string
                  disableRemount:
                    description: |-
                      If set, opts out of mount migration on path updates.
                      See here for more info on Mount Migration
                      If set, opts out of mount migration on path updates.
                    type: boolean
                  id:
                    type: string
                  jwksCaPem:
                    description: |-
                      The CA certificate or chain of certificates, in PEM format, to use to validate connections to the JWKS URL. If not set, system certificates are used.
                      The CA certificate or chain of certificates, in PEM format, to use to validate connections to the JWKS URL. If not set, system certificates are used.
                    type: string
                  jwksUrl:
                    description: |-
                      JWKS URL to use to authenticate signatures. Cannot be used with "oidc_discovery_url" or "jwt_validation_pubkeys".
                      JWKS URL to use to authenticate signatures. Cannot be used with 'oidc_discovery_url' or 'jwt_validation_pubkeys'.
                    type: string
                  jwtSupportedAlgs:
                    description: |-
                      A list of supported signing algorithms. Vault 1.1.0 defaults to [RS256] but future or past versions of Vault may differ
                      A list of supported signing algorithms. Defaults to [RS256]
                    items:
                      type: string
                    type: array
                  jwtValidationPubkeys:
                    description: |-
                      A list of PEM-encoded public keys to use to authenticate signatures locally. Cannot be used in combination with oidc_discovery_url
                      A list of PEM-encoded public keys to use to authenticate signatures locally. Cannot be used with 'jwks_url' or 'oidc_discovery_url'.
                    items:
                      type: string
                    type: array
                  local:
                    description: |-
                      Specifies if the auth method is local only.
                      Specifies if the auth method is local only
                    type: boolean
                  namespace:
                    description: |-
                      The namespace to provision the resource in.
                      The value should not contain leading or trailing forward slashes.
                      The namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise.
                      Target namespace. (requires Enterprise)
                    type: string
                  namespaceInState:
                    description: |-
                      Pass namespace in the OIDC state parameter instead of as a separate query parameter. With this setting, the allowed redirect URL(s) in Vault and on the provider side should not contain a namespace query parameter. This means only one redirect URL entry needs to be maintained on the OIDC provider side for all vault namespaces that will be authenticating against it. Defaults to true for new configs
                      Pass namespace in the OIDC state parameter instead of as a separate query parameter. With this setting, the allowed redirect URL(s) in Vault and on the provider side should not contain a namespace query parameter. This means only one redirect URL entry needs to be maintained on the OIDC provider side for all vault namespaces that will be authenticating against it. Defaults to true for new configs.
                    type: boolean
                  oidcClientId:
                    description: |-
                      Client ID used for OIDC backends
                      Client ID used for OIDC
                    type: string
                  oidcDiscoveryCaPem:
                    description: |-
                      The CA certificate or chain of certificates, in PEM format, to use to validate connections to the OIDC Discovery URL. If not set, system certificates are used
                      The CA certificate or chain of certificates, in PEM format, to use to validate connections to the OIDC Discovery URL. If not set, system certificates are used
                    type: string
                  oidcDiscoveryUrl:
                    description: |-
                      The OIDC Discovery URL, without any .well-known component (base path). Cannot be used in combination with jwt_validation_pubkeys
                      The OIDC Discovery URL, without any .well-known component (base path). Cannot be used with 'jwks_url' or 'jwt_validation_pubkeys'.
                    type: string
                  oidcResponseMode:
                    description: |-
                      The response mode to be used in the OAuth2 request. Allowed values are query and form_post. Defaults to query. If using Vault namespaces, and oidc_response_mode is form_post, then namespace_in_state should be set to false.
                      The response mode to be used in the OAuth2 request. Allowed values are 'query' and 'form_post'. Defaults to 'query'. If using Vault namespaces, and oidc_response_mode is 'form_post', then 'namespace_in_state' should be set to false.
                    type: string
                  oidcResponseTypes:
                    description: |-
                      List of response types to request. Allowed values are 'code' and 'id_token'. Defaults to ["code"]. Note: id_token may only be used if oidc_response_mode is set to form_post.
                      The response types to request. Allowed values are 'code' and 'id_token'. Defaults to 'code'. Note: 'id_token' may only be used if 'oidc_response_mode' is set to 'form_post'.
                    items:
                      type: string
                    type: array
                  path:
                    description: |-
                      Path to mount the JWT/OIDC auth backend
                      path to mount the backend
                    type: string
                  providerConfig:
                    additionalProperties:
                      type: string
                    description: |-
                      Provider specific handling configuration. All values may be strings, and the provider will convert to the appropriate type when configuring Vault.
                      Provider specific handling configuration
                    type: object
                    x-kubernetes-map-type: granular
                  tune:
                    items:
                      properties:
                        allowedResponseHeaders:
                          description: |-
                            List of headers to whitelist and allowing
                            a plugin to include them in the response.
                          items:
                            type: string
                          type: array
                        auditNonHmacRequestKeys:
                          description: |-
                            Specifies the list of keys that will
                            not be HMAC'd by audit devices in the request data object.
                          items:
                            type: string
                          type: array
                        auditNonHmacResponseKeys:
                          description: |-
                            Specifies the list of keys that will
                            not be HMAC'd by audit devices in the response data object.
                          items:
                            type: string
                          type: array
                        defaultLeaseTtl:
                          description: |-
                            Specifies the default time-to-live.
                            If set, this overrides the global default.
                            Must be a valid duration string
                          type: string
                        listingVisibility:
                          description: |-
                            Specifies whether to show this mount in
                            the UI-specific listing endpoint. Valid values are "unauth" or "hidden".
                          type: string
                        maxLeaseTtl:
                          description: |-
                            Specifies the maximum time-to-live.
                            If set, this overrides the global default.
                            Must be a valid duration string
                          type: string
                        passthroughRequestHeaders:
                          description: |-
                            List of headers to whitelist and
                            pass from the request to the backend.
                          items:
                            type: string
                          type: array
                        tokenType:
                          description: |-
                            Specifies the type of tokens that should be returned by
                            the mount. Valid values are "default-service", "default-batch", "service", "batch".
                          type: string
                      type: object
                    type: array
                  type:
                    description: |-
                      Type of auth backend. Should be one of jwt or oidc. Default - jwt
                      Type of backend. Can be either 'jwt' or 'oidc'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
