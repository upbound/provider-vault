---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  name: secretbackendsigns.pki.vault.upbound.io
spec:
  group: pki.vault.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - vault
    kind: SecretBackendSign
    listKind: SecretBackendSignList
    plural: secretbackendsigns
    singular: secretbackendsign
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SecretBackendSign is the Schema for the SecretBackendSigns API.
          Sign a new certificate based on the CSR by the PKI.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SecretBackendSignSpec defines the desired state of SecretBackendSign
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  altNames:
                    description: List of alternative names List of alternative names.
                    items:
                      type: string
                    type: array
                  autoRenew:
                    description: If set to true, certs will be renewed if the expiration
                      is within min_seconds_remaining. Default false If enabled, a
                      new certificate will be generated if the expiration is within
                      min_seconds_remaining
                    type: boolean
                  backend:
                    description: The PKI secret backend the resource belongs to. The
                      PKI secret backend the resource belongs to.
                    type: string
                  commonName:
                    description: CN of certificate to create CN of intermediate to
                      create.
                    type: string
                  csr:
                    description: The CSR The CSR.
                    type: string
                  excludeCnFromSans:
                    description: Flag to exclude CN from SANs Flag to exclude CN from
                      SANs.
                    type: boolean
                  format:
                    description: The format of data The format of data.
                    type: string
                  ipSans:
                    description: List of alternative IPs List of alternative IPs.
                    items:
                      type: string
                    type: array
                  issuerRef:
                    description: Specifies the default issuer of this request. Can
                      be the value default, a name, or an issuer ID. Use ACLs to prevent
                      access to the /pki/issuer/:issuer_ref/{issue,sign}/:name paths
                      to prevent users overriding the role's issuer_ref value. Specifies
                      the default issuer of this request.
                    type: string
                  minSecondsRemaining:
                    description: Generate a new certificate when the expiration is
                      within this number of seconds, default is 604800 (7 days) Generate
                      a new certificate when the expiration is within this number
                      of seconds
                    type: number
                  name:
                    description: Name of the role to create the certificate against
                      Name of the role to create the certificate against.
                    type: string
                  namespace:
                    description: The namespace to provision the resource in. The value
                      should not contain leading or trailing forward slashes. The
                      namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise. Target namespace. (requires
                      Enterprise)
                    type: string
                  otherSans:
                    description: List of other SANs List of other SANs.
                    items:
                      type: string
                    type: array
                  ttl:
                    description: Time to live Time to live.
                    type: string
                  uriSans:
                    description: List of alternative URIs List of alternative URIs.
                    items:
                      type: string
                    type: array
                type: object
              initProvider:
                description: THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. InitProvider
                  holds the same fields as ForProvider, with the exception of Identifier
                  and other resource reference fields. The fields that are in InitProvider
                  are merged into ForProvider when the resource is created. The same
                  fields are also added to the terraform ignore_changes hook, to avoid
                  updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after
                  creation, for example because of an external controller is managing
                  them, like an autoscaler.
                properties:
                  altNames:
                    description: List of alternative names List of alternative names.
                    items:
                      type: string
                    type: array
                  autoRenew:
                    description: If set to true, certs will be renewed if the expiration
                      is within min_seconds_remaining. Default false If enabled, a
                      new certificate will be generated if the expiration is within
                      min_seconds_remaining
                    type: boolean
                  backend:
                    description: The PKI secret backend the resource belongs to. The
                      PKI secret backend the resource belongs to.
                    type: string
                  commonName:
                    description: CN of certificate to create CN of intermediate to
                      create.
                    type: string
                  csr:
                    description: The CSR The CSR.
                    type: string
                  excludeCnFromSans:
                    description: Flag to exclude CN from SANs Flag to exclude CN from
                      SANs.
                    type: boolean
                  format:
                    description: The format of data The format of data.
                    type: string
                  ipSans:
                    description: List of alternative IPs List of alternative IPs.
                    items:
                      type: string
                    type: array
                  issuerRef:
                    description: Specifies the default issuer of this request. Can
                      be the value default, a name, or an issuer ID. Use ACLs to prevent
                      access to the /pki/issuer/:issuer_ref/{issue,sign}/:name paths
                      to prevent users overriding the role's issuer_ref value. Specifies
                      the default issuer of this request.
                    type: string
                  minSecondsRemaining:
                    description: Generate a new certificate when the expiration is
                      within this number of seconds, default is 604800 (7 days) Generate
                      a new certificate when the expiration is within this number
                      of seconds
                    type: number
                  name:
                    description: Name of the role to create the certificate against
                      Name of the role to create the certificate against.
                    type: string
                  namespace:
                    description: The namespace to provision the resource in. The value
                      should not contain leading or trailing forward slashes. The
                      namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise. Target namespace. (requires
                      Enterprise)
                    type: string
                  otherSans:
                    description: List of other SANs List of other SANs.
                    items:
                      type: string
                    type: array
                  ttl:
                    description: Time to live Time to live.
                    type: string
                  uriSans:
                    description: List of alternative URIs List of alternative URIs.
                    items:
                      type: string
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: backend is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.backend)
                || has(self.initProvider.backend)'
            - message: commonName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.commonName)
                || has(self.initProvider.commonName)'
            - message: csr is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.csr)
                || has(self.initProvider.csr)'
            - message: name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || has(self.initProvider.name)'
          status:
            description: SecretBackendSignStatus defines the observed state of SecretBackendSign.
            properties:
              atProvider:
                properties:
                  altNames:
                    description: List of alternative names List of alternative names.
                    items:
                      type: string
                    type: array
                  autoRenew:
                    description: If set to true, certs will be renewed if the expiration
                      is within min_seconds_remaining. Default false If enabled, a
                      new certificate will be generated if the expiration is within
                      min_seconds_remaining
                    type: boolean
                  backend:
                    description: The PKI secret backend the resource belongs to. The
                      PKI secret backend the resource belongs to.
                    type: string
                  caChain:
                    description: The CA chain The CA chain.
                    items:
                      type: string
                    type: array
                  certificate:
                    description: The certificate The certicate.
                    type: string
                  commonName:
                    description: CN of certificate to create CN of intermediate to
                      create.
                    type: string
                  csr:
                    description: The CSR The CSR.
                    type: string
                  excludeCnFromSans:
                    description: Flag to exclude CN from SANs Flag to exclude CN from
                      SANs.
                    type: boolean
                  expiration:
                    description: The expiration date of the certificate in unix epoch
                      format The certificate expiration as a Unix-style timestamp.
                    type: number
                  format:
                    description: The format of data The format of data.
                    type: string
                  id:
                    type: string
                  ipSans:
                    description: List of alternative IPs List of alternative IPs.
                    items:
                      type: string
                    type: array
                  issuerRef:
                    description: Specifies the default issuer of this request. Can
                      be the value default, a name, or an issuer ID. Use ACLs to prevent
                      access to the /pki/issuer/:issuer_ref/{issue,sign}/:name paths
                      to prevent users overriding the role's issuer_ref value. Specifies
                      the default issuer of this request.
                    type: string
                  issuingCa:
                    description: The issuing CA The issuing CA.
                    type: string
                  minSecondsRemaining:
                    description: Generate a new certificate when the expiration is
                      within this number of seconds, default is 604800 (7 days) Generate
                      a new certificate when the expiration is within this number
                      of seconds
                    type: number
                  name:
                    description: Name of the role to create the certificate against
                      Name of the role to create the certificate against.
                    type: string
                  namespace:
                    description: The namespace to provision the resource in. The value
                      should not contain leading or trailing forward slashes. The
                      namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise. Target namespace. (requires
                      Enterprise)
                    type: string
                  otherSans:
                    description: List of other SANs List of other SANs.
                    items:
                      type: string
                    type: array
                  renewPending:
                    description: true if the current time (during refresh) is after
                      the start of the early renewal window declared by min_seconds_remaining,
                      and false otherwise; if auto_renew is set to true then the provider
                      will plan to replace the certificate once renewal is pending.
                      Initially false, and then set to true during refresh once the
                      expiration is less than min_seconds_remaining in the future.
                    type: boolean
                  serial:
                    description: Use serial_number instead. The serial number.
                    type: string
                  serialNumber:
                    description: The certificate's serial number, hex formatted. The
                      certificate's serial number, hex formatted.
                    type: string
                  ttl:
                    description: Time to live Time to live.
                    type: string
                  uriSans:
                    description: List of alternative URIs List of alternative URIs.
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
