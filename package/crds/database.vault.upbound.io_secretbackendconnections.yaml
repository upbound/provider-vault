---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  name: secretbackendconnections.database.vault.upbound.io
spec:
  group: database.vault.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - vault
    kind: SecretBackendConnection
    listKind: SecretBackendConnectionList
    plural: secretbackendconnections
    singular: secretbackendconnection
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SecretBackendConnection is the Schema for the SecretBackendConnections
          API. Configures a database secret backend connection for Vault.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SecretBackendConnectionSpec defines the desired state of
              SecretBackendConnection
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  allowedRoles:
                    description: A list of roles that are allowed to use this connection.
                      A list of roles that are allowed to use this connection.
                    items:
                      type: string
                    type: array
                  backend:
                    description: The unique name of the Vault mount to configure.
                      Unique name of the Vault mount to configure.
                    type: string
                  cassandra:
                    description: A nested block containing configuration options for
                      Cassandra connections. Connection parameters for the cassandra-database-plugin
                      plugin.
                    items:
                      properties:
                        connectTimeout:
                          description: The number of seconds to use as a connection
                            timeout. The number of seconds to use as a connection
                            timeout.
                          type: number
                        hosts:
                          description: The hosts to connect to. Cassandra hosts to
                            connect to.
                          items:
                            type: string
                          type: array
                        insecureTls:
                          description: Whether to skip verification of the server
                            certificate when using TLS. Whether to skip verification
                            of the server certificate when using TLS.
                          type: boolean
                        passwordSecretRef:
                          description: The password to authenticate with. The password
                            to use when authenticating with Cassandra.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        pemBundleSecretRef:
                          description: Concatenated PEM blocks configuring the certificate
                            chain. Concatenated PEM blocks containing a certificate
                            and private key; a certificate, private key, and issuing
                            CA certificate; or just a CA certificate.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        pemJsonSecretRef:
                          description: A JSON structure configuring the certificate
                            chain. Specifies JSON containing a certificate and private
                            key; a certificate, private key, and issuing CA certificate;
                            or just a CA certificate.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        port:
                          description: The default port to connect to if no port is
                            specified as part of the host. The transport port to use
                            to connect to Cassandra.
                          type: number
                        protocolVersion:
                          description: The CQL protocol version to use. The CQL protocol
                            version to use.
                          type: number
                        tls:
                          description: Whether to use TLS when connecting to Cassandra.
                            Whether to use TLS when connecting to Cassandra.
                          type: boolean
                        username:
                          description: The username to authenticate with. The username
                            to use when authenticating with Cassandra.
                          type: string
                      type: object
                    type: array
                  couchbase:
                    description: A nested block containing configuration options for
                      Couchbase connections. Connection parameters for the couchbase-database-plugin
                      plugin.
                    items:
                      properties:
                        base64PemSecretRef:
                          description: Required if tls is true. Specifies the certificate
                            authority of the Couchbase server, as a PEM certificate
                            that has been base64 encoded. Required if `tls` is `true`.
                            Specifies the certificate authority of the Couchbase server,
                            as a PEM certificate that has been base64 encoded.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        bucketName:
                          description: Required for Couchbase versions prior to 6.5.0.
                            This is only used to verify vault's connection to the
                            server. Required for Couchbase versions prior to 6.5.0.
                            This is only used to verify vault's connection to the
                            server.
                          type: string
                        hosts:
                          description: The hosts to connect to. A set of Couchbase
                            URIs to connect to. Must use `couchbases://` scheme if
                            `tls` is `true`.
                          items:
                            type: string
                          type: array
                        insecureTls:
                          description: Whether to skip verification of the server
                            certificate when using TLS. Specifies whether to skip
                            verification of the server certificate when using TLS.
                          type: boolean
                        passwordSecretRef:
                          description: The password to authenticate with. Specifies
                            the password corresponding to the given username.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        tls:
                          description: Whether to use TLS when connecting to Cassandra.
                            Specifies whether to use TLS when connecting to Couchbase.
                          type: boolean
                        username:
                          description: The username to authenticate with. Specifies
                            the username for Vault to use.
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Template describing how dynamic usernames are
                            generated.
                          type: string
                      required:
                      - passwordSecretRef
                      type: object
                    type: array
                  data:
                    additionalProperties:
                      type: string
                    description: A map of sensitive data to pass to the endpoint.
                      Useful for templated connection strings. A map of sensitive
                      data to pass to the endpoint. Useful for templated connection
                      strings.
                    type: object
                  elasticsearch:
                    description: A nested block containing configuration options for
                      Elasticsearch connections. Connection parameters for the elasticsearch-database-plugin.
                    items:
                      properties:
                        caCert:
                          description: The contents of a PEM-encoded CA cert file
                            to use to verify the Redis server's identity. The path
                            to a PEM-encoded CA cert file to use to verify the Elasticsearch
                            server's identity
                          type: string
                        caPath:
                          description: The path to a directory of PEM-encoded CA cert
                            files to use to verify the Elasticsearch server's identity.
                            The path to a directory of PEM-encoded CA cert files to
                            use to verify the Elasticsearch server's identity
                          type: string
                        clientCert:
                          description: The path to the certificate for the Elasticsearch
                            client to present for communication. The path to the certificate
                            for the Elasticsearch client to present for communication
                          type: string
                        clientKey:
                          description: The path to the key for the Elasticsearch client
                            to use for communication. The path to the key for the
                            Elasticsearch client to use for communication
                          type: string
                        insecure:
                          description: Whether to disable certificate verification.
                            Whether to disable certificate verification
                          type: boolean
                        passwordSecretRef:
                          description: The password to authenticate with. The password
                            to be used in the connection URL
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        tlsServerName:
                          description: This, if set, is used to set the SNI host when
                            connecting via TLS. This, if set, is used to set the SNI
                            host when connecting via TLS
                          type: string
                        url:
                          description: The url to connect to including the port; e.g.
                            master.my-cluster.xxxxxx.use1.cache.amazonaws.com:6379.
                            The URL for Elasticsearch's API
                          type: string
                        username:
                          description: The username to authenticate with. The username
                            to be used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Template describing how dynamic usernames are
                            generated.
                          type: string
                      required:
                      - passwordSecretRef
                      type: object
                    type: array
                  hana:
                    description: A nested block containing configuration options for
                      SAP HanaDB connections. Connection parameters for the hana-database-plugin
                      plugin.
                    items:
                      properties:
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        disableEscaping:
                          description: Disable special character escaping in username
                            and password. Disable special character escaping in username
                            and password
                          type: boolean
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        passwordSecretRef:
                          description: The password to authenticate with. The root
                            credential password used in the connection URL
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                      type: object
                    type: array
                  influxdb:
                    description: A nested block containing configuration options for
                      InfluxDB connections. Connection parameters for the influxdb-database-plugin
                      plugin.
                    items:
                      properties:
                        connectTimeout:
                          description: The number of seconds to use as a connection
                            timeout. The number of seconds to use as a connection
                            timeout.
                          type: number
                        host:
                          description: The host to connect to. Influxdb host to connect
                            to.
                          type: string
                        insecureTls:
                          description: Whether to skip verification of the server
                            certificate when using TLS. Whether to skip verification
                            of the server certificate when using TLS.
                          type: boolean
                        passwordSecretRef:
                          description: The password to authenticate with. Specifies
                            the password corresponding to the given username.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        pemBundleSecretRef:
                          description: Concatenated PEM blocks configuring the certificate
                            chain. Concatenated PEM blocks containing a certificate
                            and private key; a certificate, private key, and issuing
                            CA certificate; or just a CA certificate.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        pemJsonSecretRef:
                          description: A JSON structure configuring the certificate
                            chain. Specifies JSON containing a certificate and private
                            key; a certificate, private key, and issuing CA certificate;
                            or just a CA certificate.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        port:
                          description: The default port to connect to if no port is
                            specified as part of the host. The transport port to use
                            to connect to Influxdb.
                          type: number
                        tls:
                          description: Whether to use TLS when connecting to Cassandra.
                            Whether to use TLS when connecting to Influxdb.
                          type: boolean
                        username:
                          description: The username to authenticate with. Specifies
                            the username to use for superuser access.
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Template describing how dynamic usernames are
                            generated.
                          type: string
                      required:
                      - passwordSecretRef
                      type: object
                    type: array
                  mongodb:
                    description: A nested block containing configuration options for
                      MongoDB connections. Connection parameters for the mongodb-database-plugin
                      plugin.
                    items:
                      properties:
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        passwordSecretRef:
                          description: The password to authenticate with. The root
                            credential password used in the connection URL
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  mongodbatlas:
                    description: A nested block containing configuration options for
                      MongoDB Atlas connections. Connection parameters for the mongodbatlas-database-plugin
                      plugin.
                    items:
                      properties:
                        privateKeySecretRef:
                          description: The Private Programmatic API Key used to connect
                            with MongoDB Atlas API. The Private Programmatic API Key
                            used to connect with MongoDB Atlas API.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        projectId:
                          description: The Project ID the Database User should be
                            created within. The Project ID the Database User should
                            be created within.
                          type: string
                        publicKey:
                          description: The Public Programmatic API Key used to authenticate
                            with the MongoDB Atlas API. The Public Programmatic API
                            Key used to authenticate with the MongoDB Atlas API.
                          type: string
                      required:
                      - privateKeySecretRef
                      type: object
                    type: array
                  mssql:
                    description: A nested block containing configuration options for
                      MSSQL connections. Connection parameters for the mssql-database-plugin
                      plugin.
                    items:
                      properties:
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        containedDb:
                          description: For Vault v1.9+. Set to true when the target
                            is a Contained Database, e.g. AzureSQL. See the Vault
                            docs Set to true when the target is a Contained Database,
                            e.g. AzureSQL.
                          type: boolean
                        disableEscaping:
                          description: Disable special character escaping in username
                            and password. Disable special character escaping in username
                            and password
                          type: boolean
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        passwordSecretRef:
                          description: The password to authenticate with. The root
                            credential password used in the connection URL
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  mysql:
                    description: A nested block containing configuration options for
                      MySQL connections. Connection parameters for the mysql-database-plugin
                      plugin.
                    items:
                      properties:
                        authType:
                          description: Enable IAM authentication to a Google Cloud
                            instance when set to gcp_iam Specify alternative authorization
                            type. (Only 'gcp_iam' is valid currently)
                          type: string
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        passwordSecretRef:
                          description: The password to authenticate with. The root
                            credential password used in the connection URL
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        serviceAccountJsonSecretRef:
                          description: JSON encoding of an IAM access key. Requires
                            auth_type to be gcp_iam. A JSON encoded credential for
                            use with IAM authorization
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        tlsCa:
                          description: x509 CA file for validating the certificate
                            presented by the MySQL server. Must be PEM encoded. x509
                            CA file for validating the certificate presented by the
                            MySQL server. Must be PEM encoded.
                          type: string
                        tlsCertificateKeySecretRef:
                          description: x509 certificate for connecting to the database.
                            This must be a PEM encoded version of the private key
                            and the certificate combined. x509 certificate for connecting
                            to the database. This must be a PEM encoded version of
                            the private key and the certificate combined.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  mysqlAurora:
                    description: A nested block containing configuration options for
                      Aurora MySQL connections. Connection parameters for the mysql-aurora-database-plugin
                      plugin.
                    items:
                      properties:
                        authType:
                          description: Enable IAM authentication to a Google Cloud
                            instance when set to gcp_iam Specify alternative authorization
                            type. (Only 'gcp_iam' is valid currently)
                          type: string
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        passwordSecretRef:
                          description: The password to authenticate with. The root
                            credential password used in the connection URL
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        serviceAccountJsonSecretRef:
                          description: JSON encoding of an IAM access key. Requires
                            auth_type to be gcp_iam. A JSON encoded credential for
                            use with IAM authorization
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        tlsCa:
                          description: x509 CA file for validating the certificate
                            presented by the MySQL server. Must be PEM encoded. x509
                            CA file for validating the certificate presented by the
                            MySQL server. Must be PEM encoded.
                          type: string
                        tlsCertificateKeySecretRef:
                          description: x509 certificate for connecting to the database.
                            This must be a PEM encoded version of the private key
                            and the certificate combined. x509 certificate for connecting
                            to the database. This must be a PEM encoded version of
                            the private key and the certificate combined.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  mysqlLegacy:
                    description: A nested block containing configuration options for
                      legacy MySQL connections. Connection parameters for the mysql-legacy-database-plugin
                      plugin.
                    items:
                      properties:
                        authType:
                          description: Enable IAM authentication to a Google Cloud
                            instance when set to gcp_iam Specify alternative authorization
                            type. (Only 'gcp_iam' is valid currently)
                          type: string
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        passwordSecretRef:
                          description: The password to authenticate with. The root
                            credential password used in the connection URL
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        serviceAccountJsonSecretRef:
                          description: JSON encoding of an IAM access key. Requires
                            auth_type to be gcp_iam. A JSON encoded credential for
                            use with IAM authorization
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        tlsCa:
                          description: x509 CA file for validating the certificate
                            presented by the MySQL server. Must be PEM encoded. x509
                            CA file for validating the certificate presented by the
                            MySQL server. Must be PEM encoded.
                          type: string
                        tlsCertificateKeySecretRef:
                          description: x509 certificate for connecting to the database.
                            This must be a PEM encoded version of the private key
                            and the certificate combined. x509 certificate for connecting
                            to the database. This must be a PEM encoded version of
                            the private key and the certificate combined.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  mysqlRds:
                    description: A nested block containing configuration options for
                      RDS MySQL connections. Connection parameters for the mysql-rds-database-plugin
                      plugin.
                    items:
                      properties:
                        authType:
                          description: Enable IAM authentication to a Google Cloud
                            instance when set to gcp_iam Specify alternative authorization
                            type. (Only 'gcp_iam' is valid currently)
                          type: string
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        passwordSecretRef:
                          description: The password to authenticate with. The root
                            credential password used in the connection URL
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        serviceAccountJsonSecretRef:
                          description: JSON encoding of an IAM access key. Requires
                            auth_type to be gcp_iam. A JSON encoded credential for
                            use with IAM authorization
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        tlsCa:
                          description: x509 CA file for validating the certificate
                            presented by the MySQL server. Must be PEM encoded. x509
                            CA file for validating the certificate presented by the
                            MySQL server. Must be PEM encoded.
                          type: string
                        tlsCertificateKeySecretRef:
                          description: x509 certificate for connecting to the database.
                            This must be a PEM encoded version of the private key
                            and the certificate combined. x509 certificate for connecting
                            to the database. This must be a PEM encoded version of
                            the private key and the certificate combined.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  name:
                    description: A unique name to give the database connection. Name
                      of the database connection.
                    type: string
                  namespace:
                    description: The namespace to provision the resource in. The value
                      should not contain leading or trailing forward slashes. The
                      namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise. Target namespace. (requires
                      Enterprise)
                    type: string
                  oracle:
                    description: A nested block containing configuration options for
                      Oracle connections. Connection parameters for the oracle-database-plugin
                      plugin.
                    items:
                      properties:
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        disconnectSessions:
                          description: Enable the built-in session disconnect mechanism.
                            Set to true to disconnect any open sessions prior to running
                            the revocation statements.
                          type: boolean
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        passwordSecretRef:
                          description: The password to authenticate with. The root
                            credential password used in the connection URL
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        splitStatements:
                          description: Enable spliting statements after semi-colons.
                            Set to true in order to split statements after semi-colons.
                          type: boolean
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  pluginName:
                    description: Specifies the name of the plugin to use. Specifies
                      the name of the plugin to use for this connection. Must be prefixed
                      with the name of one of the supported database engine types.
                    type: string
                  postgresql:
                    description: A nested block containing configuration options for
                      PostgreSQL connections. Connection parameters for the postgresql-database-plugin
                      plugin.
                    items:
                      properties:
                        authType:
                          description: Enable IAM authentication to a Google Cloud
                            instance when set to gcp_iam Specify alternative authorization
                            type. (Only 'gcp_iam' is valid currently)
                          type: string
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        disableEscaping:
                          description: Disable special character escaping in username
                            and password. Disable special character escaping in username
                            and password
                          type: boolean
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        passwordSecretRef:
                          description: The password to authenticate with. The root
                            credential password used in the connection URL
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        serviceAccountJsonSecretRef:
                          description: JSON encoding of an IAM access key. Requires
                            auth_type to be gcp_iam. A JSON encoded credential for
                            use with IAM authorization
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  redis:
                    description: A nested block containing configuration options for
                      Redis connections. Connection parameters for the redis-database-plugin
                      plugin.
                    items:
                      properties:
                        caCert:
                          description: The contents of a PEM-encoded CA cert file
                            to use to verify the Redis server's identity. The contents
                            of a PEM-encoded CA cert file to use to verify the Redis
                            server's identity.
                          type: string
                        host:
                          description: The host to connect to. Specifies the host
                            to connect to
                          type: string
                        insecureTls:
                          description: Whether to skip verification of the server
                            certificate when using TLS. Specifies whether to skip
                            verification of the server certificate when using TLS.
                          type: boolean
                        passwordSecretRef:
                          description: The password to authenticate with. Specifies
                            the password corresponding to the given username.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        port:
                          description: The default port to connect to if no port is
                            specified as part of the host. The transport port to use
                            to connect to Redis.
                          type: number
                        tls:
                          description: Whether to use TLS when connecting to Cassandra.
                            Specifies whether to use TLS when connecting to Redis.
                          type: boolean
                        username:
                          description: The username to authenticate with. Specifies
                            the username for Vault to use.
                          type: string
                      required:
                      - passwordSecretRef
                      type: object
                    type: array
                  redisElasticache:
                    description: A nested block containing configuration options for
                      Redis ElastiCache connections. Connection parameters for the
                      redis-elasticache-database-plugin plugin.
                    items:
                      properties:
                        passwordSecretRef:
                          description: The password to authenticate with. The AWS
                            secret key id to use to talk to ElastiCache. If omitted
                            the credentials chain provider is used instead.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        region:
                          description: The region where the ElastiCache cluster is
                            hosted. If omitted Vault tries to infer from the environment
                            instead. The AWS region where the ElastiCache cluster
                            is hosted. If omitted the plugin tries to infer the region
                            from the environment.
                          type: string
                        url:
                          description: The url to connect to including the port; e.g.
                            master.my-cluster.xxxxxx.use1.cache.amazonaws.com:6379.
                            The configuration endpoint for the ElastiCache cluster
                            to connect to.
                          type: string
                        usernameSecretRef:
                          description: The username to authenticate with. The AWS
                            access key id to use to talk to ElastiCache. If omitted
                            the credentials chain provider is used instead.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                  redshift:
                    description: Connection parameters for the redshift-database-plugin
                      plugin.
                    items:
                      properties:
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        disableEscaping:
                          description: Disable special character escaping in username
                            and password. Disable special character escaping in username
                            and password
                          type: boolean
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        passwordSecretRef:
                          description: The password to authenticate with. The root
                            credential password used in the connection URL
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  rootRotationStatements:
                    description: A list of database statements to be executed to rotate
                      the root user's credentials. A list of database statements to
                      be executed to rotate the root user's credentials.
                    items:
                      type: string
                    type: array
                  snowflake:
                    description: A nested block containing configuration options for
                      Snowflake connections. Connection parameters for the snowflake-database-plugin
                      plugin.
                    items:
                      properties:
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        passwordSecretRef:
                          description: The password to authenticate with. The root
                            credential password used in the connection URL
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  verifyConnection:
                    description: Whether the connection should be verified on initial
                      configuration or not. Specifies if the connection is verified
                      during initial configuration.
                    type: boolean
                type: object
              initProvider:
                description: THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. InitProvider
                  holds the same fields as ForProvider, with the exception of Identifier
                  and other resource reference fields. The fields that are in InitProvider
                  are merged into ForProvider when the resource is created. The same
                  fields are also added to the terraform ignore_changes hook, to avoid
                  updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after
                  creation, for example because of an external controller is managing
                  them, like an autoscaler.
                properties:
                  allowedRoles:
                    description: A list of roles that are allowed to use this connection.
                      A list of roles that are allowed to use this connection.
                    items:
                      type: string
                    type: array
                  backend:
                    description: The unique name of the Vault mount to configure.
                      Unique name of the Vault mount to configure.
                    type: string
                  cassandra:
                    description: A nested block containing configuration options for
                      Cassandra connections. Connection parameters for the cassandra-database-plugin
                      plugin.
                    items:
                      properties:
                        connectTimeout:
                          description: The number of seconds to use as a connection
                            timeout. The number of seconds to use as a connection
                            timeout.
                          type: number
                        hosts:
                          description: The hosts to connect to. Cassandra hosts to
                            connect to.
                          items:
                            type: string
                          type: array
                        insecureTls:
                          description: Whether to skip verification of the server
                            certificate when using TLS. Whether to skip verification
                            of the server certificate when using TLS.
                          type: boolean
                        port:
                          description: The default port to connect to if no port is
                            specified as part of the host. The transport port to use
                            to connect to Cassandra.
                          type: number
                        protocolVersion:
                          description: The CQL protocol version to use. The CQL protocol
                            version to use.
                          type: number
                        tls:
                          description: Whether to use TLS when connecting to Cassandra.
                            Whether to use TLS when connecting to Cassandra.
                          type: boolean
                        username:
                          description: The username to authenticate with. The username
                            to use when authenticating with Cassandra.
                          type: string
                      type: object
                    type: array
                  couchbase:
                    description: A nested block containing configuration options for
                      Couchbase connections. Connection parameters for the couchbase-database-plugin
                      plugin.
                    items:
                      properties:
                        bucketName:
                          description: Required for Couchbase versions prior to 6.5.0.
                            This is only used to verify vault's connection to the
                            server. Required for Couchbase versions prior to 6.5.0.
                            This is only used to verify vault's connection to the
                            server.
                          type: string
                        hosts:
                          description: The hosts to connect to. A set of Couchbase
                            URIs to connect to. Must use `couchbases://` scheme if
                            `tls` is `true`.
                          items:
                            type: string
                          type: array
                        insecureTls:
                          description: Whether to skip verification of the server
                            certificate when using TLS. Specifies whether to skip
                            verification of the server certificate when using TLS.
                          type: boolean
                        tls:
                          description: Whether to use TLS when connecting to Cassandra.
                            Specifies whether to use TLS when connecting to Couchbase.
                          type: boolean
                        username:
                          description: The username to authenticate with. Specifies
                            the username for Vault to use.
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Template describing how dynamic usernames are
                            generated.
                          type: string
                      type: object
                    type: array
                  data:
                    additionalProperties:
                      type: string
                    description: A map of sensitive data to pass to the endpoint.
                      Useful for templated connection strings. A map of sensitive
                      data to pass to the endpoint. Useful for templated connection
                      strings.
                    type: object
                  elasticsearch:
                    description: A nested block containing configuration options for
                      Elasticsearch connections. Connection parameters for the elasticsearch-database-plugin.
                    items:
                      properties:
                        caCert:
                          description: The contents of a PEM-encoded CA cert file
                            to use to verify the Redis server's identity. The path
                            to a PEM-encoded CA cert file to use to verify the Elasticsearch
                            server's identity
                          type: string
                        caPath:
                          description: The path to a directory of PEM-encoded CA cert
                            files to use to verify the Elasticsearch server's identity.
                            The path to a directory of PEM-encoded CA cert files to
                            use to verify the Elasticsearch server's identity
                          type: string
                        clientCert:
                          description: The path to the certificate for the Elasticsearch
                            client to present for communication. The path to the certificate
                            for the Elasticsearch client to present for communication
                          type: string
                        clientKey:
                          description: The path to the key for the Elasticsearch client
                            to use for communication. The path to the key for the
                            Elasticsearch client to use for communication
                          type: string
                        insecure:
                          description: Whether to disable certificate verification.
                            Whether to disable certificate verification
                          type: boolean
                        tlsServerName:
                          description: This, if set, is used to set the SNI host when
                            connecting via TLS. This, if set, is used to set the SNI
                            host when connecting via TLS
                          type: string
                        url:
                          description: The url to connect to including the port; e.g.
                            master.my-cluster.xxxxxx.use1.cache.amazonaws.com:6379.
                            The URL for Elasticsearch's API
                          type: string
                        username:
                          description: The username to authenticate with. The username
                            to be used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Template describing how dynamic usernames are
                            generated.
                          type: string
                      type: object
                    type: array
                  hana:
                    description: A nested block containing configuration options for
                      SAP HanaDB connections. Connection parameters for the hana-database-plugin
                      plugin.
                    items:
                      properties:
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        disableEscaping:
                          description: Disable special character escaping in username
                            and password. Disable special character escaping in username
                            and password
                          type: boolean
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                      type: object
                    type: array
                  influxdb:
                    description: A nested block containing configuration options for
                      InfluxDB connections. Connection parameters for the influxdb-database-plugin
                      plugin.
                    items:
                      properties:
                        connectTimeout:
                          description: The number of seconds to use as a connection
                            timeout. The number of seconds to use as a connection
                            timeout.
                          type: number
                        host:
                          description: The host to connect to. Influxdb host to connect
                            to.
                          type: string
                        insecureTls:
                          description: Whether to skip verification of the server
                            certificate when using TLS. Whether to skip verification
                            of the server certificate when using TLS.
                          type: boolean
                        port:
                          description: The default port to connect to if no port is
                            specified as part of the host. The transport port to use
                            to connect to Influxdb.
                          type: number
                        tls:
                          description: Whether to use TLS when connecting to Cassandra.
                            Whether to use TLS when connecting to Influxdb.
                          type: boolean
                        username:
                          description: The username to authenticate with. Specifies
                            the username to use for superuser access.
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Template describing how dynamic usernames are
                            generated.
                          type: string
                      type: object
                    type: array
                  mongodb:
                    description: A nested block containing configuration options for
                      MongoDB connections. Connection parameters for the mongodb-database-plugin
                      plugin.
                    items:
                      properties:
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  mongodbatlas:
                    description: A nested block containing configuration options for
                      MongoDB Atlas connections. Connection parameters for the mongodbatlas-database-plugin
                      plugin.
                    items:
                      properties:
                        projectId:
                          description: The Project ID the Database User should be
                            created within. The Project ID the Database User should
                            be created within.
                          type: string
                        publicKey:
                          description: The Public Programmatic API Key used to authenticate
                            with the MongoDB Atlas API. The Public Programmatic API
                            Key used to authenticate with the MongoDB Atlas API.
                          type: string
                      type: object
                    type: array
                  mssql:
                    description: A nested block containing configuration options for
                      MSSQL connections. Connection parameters for the mssql-database-plugin
                      plugin.
                    items:
                      properties:
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        containedDb:
                          description: For Vault v1.9+. Set to true when the target
                            is a Contained Database, e.g. AzureSQL. See the Vault
                            docs Set to true when the target is a Contained Database,
                            e.g. AzureSQL.
                          type: boolean
                        disableEscaping:
                          description: Disable special character escaping in username
                            and password. Disable special character escaping in username
                            and password
                          type: boolean
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  mysql:
                    description: A nested block containing configuration options for
                      MySQL connections. Connection parameters for the mysql-database-plugin
                      plugin.
                    items:
                      properties:
                        authType:
                          description: Enable IAM authentication to a Google Cloud
                            instance when set to gcp_iam Specify alternative authorization
                            type. (Only 'gcp_iam' is valid currently)
                          type: string
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        tlsCa:
                          description: x509 CA file for validating the certificate
                            presented by the MySQL server. Must be PEM encoded. x509
                            CA file for validating the certificate presented by the
                            MySQL server. Must be PEM encoded.
                          type: string
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  mysqlAurora:
                    description: A nested block containing configuration options for
                      Aurora MySQL connections. Connection parameters for the mysql-aurora-database-plugin
                      plugin.
                    items:
                      properties:
                        authType:
                          description: Enable IAM authentication to a Google Cloud
                            instance when set to gcp_iam Specify alternative authorization
                            type. (Only 'gcp_iam' is valid currently)
                          type: string
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        tlsCa:
                          description: x509 CA file for validating the certificate
                            presented by the MySQL server. Must be PEM encoded. x509
                            CA file for validating the certificate presented by the
                            MySQL server. Must be PEM encoded.
                          type: string
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  mysqlLegacy:
                    description: A nested block containing configuration options for
                      legacy MySQL connections. Connection parameters for the mysql-legacy-database-plugin
                      plugin.
                    items:
                      properties:
                        authType:
                          description: Enable IAM authentication to a Google Cloud
                            instance when set to gcp_iam Specify alternative authorization
                            type. (Only 'gcp_iam' is valid currently)
                          type: string
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        tlsCa:
                          description: x509 CA file for validating the certificate
                            presented by the MySQL server. Must be PEM encoded. x509
                            CA file for validating the certificate presented by the
                            MySQL server. Must be PEM encoded.
                          type: string
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  mysqlRds:
                    description: A nested block containing configuration options for
                      RDS MySQL connections. Connection parameters for the mysql-rds-database-plugin
                      plugin.
                    items:
                      properties:
                        authType:
                          description: Enable IAM authentication to a Google Cloud
                            instance when set to gcp_iam Specify alternative authorization
                            type. (Only 'gcp_iam' is valid currently)
                          type: string
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        tlsCa:
                          description: x509 CA file for validating the certificate
                            presented by the MySQL server. Must be PEM encoded. x509
                            CA file for validating the certificate presented by the
                            MySQL server. Must be PEM encoded.
                          type: string
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  name:
                    description: A unique name to give the database connection. Name
                      of the database connection.
                    type: string
                  namespace:
                    description: The namespace to provision the resource in. The value
                      should not contain leading or trailing forward slashes. The
                      namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise. Target namespace. (requires
                      Enterprise)
                    type: string
                  oracle:
                    description: A nested block containing configuration options for
                      Oracle connections. Connection parameters for the oracle-database-plugin
                      plugin.
                    items:
                      properties:
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        disconnectSessions:
                          description: Enable the built-in session disconnect mechanism.
                            Set to true to disconnect any open sessions prior to running
                            the revocation statements.
                          type: boolean
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        splitStatements:
                          description: Enable spliting statements after semi-colons.
                            Set to true in order to split statements after semi-colons.
                          type: boolean
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  pluginName:
                    description: Specifies the name of the plugin to use. Specifies
                      the name of the plugin to use for this connection. Must be prefixed
                      with the name of one of the supported database engine types.
                    type: string
                  postgresql:
                    description: A nested block containing configuration options for
                      PostgreSQL connections. Connection parameters for the postgresql-database-plugin
                      plugin.
                    items:
                      properties:
                        authType:
                          description: Enable IAM authentication to a Google Cloud
                            instance when set to gcp_iam Specify alternative authorization
                            type. (Only 'gcp_iam' is valid currently)
                          type: string
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        disableEscaping:
                          description: Disable special character escaping in username
                            and password. Disable special character escaping in username
                            and password
                          type: boolean
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  redis:
                    description: A nested block containing configuration options for
                      Redis connections. Connection parameters for the redis-database-plugin
                      plugin.
                    items:
                      properties:
                        caCert:
                          description: The contents of a PEM-encoded CA cert file
                            to use to verify the Redis server's identity. The contents
                            of a PEM-encoded CA cert file to use to verify the Redis
                            server's identity.
                          type: string
                        host:
                          description: The host to connect to. Specifies the host
                            to connect to
                          type: string
                        insecureTls:
                          description: Whether to skip verification of the server
                            certificate when using TLS. Specifies whether to skip
                            verification of the server certificate when using TLS.
                          type: boolean
                        port:
                          description: The default port to connect to if no port is
                            specified as part of the host. The transport port to use
                            to connect to Redis.
                          type: number
                        tls:
                          description: Whether to use TLS when connecting to Cassandra.
                            Specifies whether to use TLS when connecting to Redis.
                          type: boolean
                        username:
                          description: The username to authenticate with. Specifies
                            the username for Vault to use.
                          type: string
                      type: object
                    type: array
                  redisElasticache:
                    description: A nested block containing configuration options for
                      Redis ElastiCache connections. Connection parameters for the
                      redis-elasticache-database-plugin plugin.
                    items:
                      properties:
                        region:
                          description: The region where the ElastiCache cluster is
                            hosted. If omitted Vault tries to infer from the environment
                            instead. The AWS region where the ElastiCache cluster
                            is hosted. If omitted the plugin tries to infer the region
                            from the environment.
                          type: string
                        url:
                          description: The url to connect to including the port; e.g.
                            master.my-cluster.xxxxxx.use1.cache.amazonaws.com:6379.
                            The configuration endpoint for the ElastiCache cluster
                            to connect to.
                          type: string
                      type: object
                    type: array
                  redshift:
                    description: Connection parameters for the redshift-database-plugin
                      plugin.
                    items:
                      properties:
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        disableEscaping:
                          description: Disable special character escaping in username
                            and password. Disable special character escaping in username
                            and password
                          type: boolean
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  rootRotationStatements:
                    description: A list of database statements to be executed to rotate
                      the root user's credentials. A list of database statements to
                      be executed to rotate the root user's credentials.
                    items:
                      type: string
                    type: array
                  snowflake:
                    description: A nested block containing configuration options for
                      Snowflake connections. Connection parameters for the snowflake-database-plugin
                      plugin.
                    items:
                      properties:
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  verifyConnection:
                    description: Whether the connection should be verified on initial
                      configuration or not. Specifies if the connection is verified
                      during initial configuration.
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: backend is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.backend)
                || has(self.initProvider.backend)'
            - message: name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || has(self.initProvider.name)'
          status:
            description: SecretBackendConnectionStatus defines the observed state
              of SecretBackendConnection.
            properties:
              atProvider:
                properties:
                  allowedRoles:
                    description: A list of roles that are allowed to use this connection.
                      A list of roles that are allowed to use this connection.
                    items:
                      type: string
                    type: array
                  backend:
                    description: The unique name of the Vault mount to configure.
                      Unique name of the Vault mount to configure.
                    type: string
                  cassandra:
                    description: A nested block containing configuration options for
                      Cassandra connections. Connection parameters for the cassandra-database-plugin
                      plugin.
                    items:
                      properties:
                        connectTimeout:
                          description: The number of seconds to use as a connection
                            timeout. The number of seconds to use as a connection
                            timeout.
                          type: number
                        hosts:
                          description: The hosts to connect to. Cassandra hosts to
                            connect to.
                          items:
                            type: string
                          type: array
                        insecureTls:
                          description: Whether to skip verification of the server
                            certificate when using TLS. Whether to skip verification
                            of the server certificate when using TLS.
                          type: boolean
                        port:
                          description: The default port to connect to if no port is
                            specified as part of the host. The transport port to use
                            to connect to Cassandra.
                          type: number
                        protocolVersion:
                          description: The CQL protocol version to use. The CQL protocol
                            version to use.
                          type: number
                        tls:
                          description: Whether to use TLS when connecting to Cassandra.
                            Whether to use TLS when connecting to Cassandra.
                          type: boolean
                        username:
                          description: The username to authenticate with. The username
                            to use when authenticating with Cassandra.
                          type: string
                      type: object
                    type: array
                  couchbase:
                    description: A nested block containing configuration options for
                      Couchbase connections. Connection parameters for the couchbase-database-plugin
                      plugin.
                    items:
                      properties:
                        bucketName:
                          description: Required for Couchbase versions prior to 6.5.0.
                            This is only used to verify vault's connection to the
                            server. Required for Couchbase versions prior to 6.5.0.
                            This is only used to verify vault's connection to the
                            server.
                          type: string
                        hosts:
                          description: The hosts to connect to. A set of Couchbase
                            URIs to connect to. Must use `couchbases://` scheme if
                            `tls` is `true`.
                          items:
                            type: string
                          type: array
                        insecureTls:
                          description: Whether to skip verification of the server
                            certificate when using TLS. Specifies whether to skip
                            verification of the server certificate when using TLS.
                          type: boolean
                        tls:
                          description: Whether to use TLS when connecting to Cassandra.
                            Specifies whether to use TLS when connecting to Couchbase.
                          type: boolean
                        username:
                          description: The username to authenticate with. Specifies
                            the username for Vault to use.
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Template describing how dynamic usernames are
                            generated.
                          type: string
                      type: object
                    type: array
                  data:
                    additionalProperties:
                      type: string
                    description: A map of sensitive data to pass to the endpoint.
                      Useful for templated connection strings. A map of sensitive
                      data to pass to the endpoint. Useful for templated connection
                      strings.
                    type: object
                  elasticsearch:
                    description: A nested block containing configuration options for
                      Elasticsearch connections. Connection parameters for the elasticsearch-database-plugin.
                    items:
                      properties:
                        caCert:
                          description: The contents of a PEM-encoded CA cert file
                            to use to verify the Redis server's identity. The path
                            to a PEM-encoded CA cert file to use to verify the Elasticsearch
                            server's identity
                          type: string
                        caPath:
                          description: The path to a directory of PEM-encoded CA cert
                            files to use to verify the Elasticsearch server's identity.
                            The path to a directory of PEM-encoded CA cert files to
                            use to verify the Elasticsearch server's identity
                          type: string
                        clientCert:
                          description: The path to the certificate for the Elasticsearch
                            client to present for communication. The path to the certificate
                            for the Elasticsearch client to present for communication
                          type: string
                        clientKey:
                          description: The path to the key for the Elasticsearch client
                            to use for communication. The path to the key for the
                            Elasticsearch client to use for communication
                          type: string
                        insecure:
                          description: Whether to disable certificate verification.
                            Whether to disable certificate verification
                          type: boolean
                        tlsServerName:
                          description: This, if set, is used to set the SNI host when
                            connecting via TLS. This, if set, is used to set the SNI
                            host when connecting via TLS
                          type: string
                        url:
                          description: The url to connect to including the port; e.g.
                            master.my-cluster.xxxxxx.use1.cache.amazonaws.com:6379.
                            The URL for Elasticsearch's API
                          type: string
                        username:
                          description: The username to authenticate with. The username
                            to be used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Template describing how dynamic usernames are
                            generated.
                          type: string
                      type: object
                    type: array
                  hana:
                    description: A nested block containing configuration options for
                      SAP HanaDB connections. Connection parameters for the hana-database-plugin
                      plugin.
                    items:
                      properties:
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        disableEscaping:
                          description: Disable special character escaping in username
                            and password. Disable special character escaping in username
                            and password
                          type: boolean
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                      type: object
                    type: array
                  id:
                    type: string
                  influxdb:
                    description: A nested block containing configuration options for
                      InfluxDB connections. Connection parameters for the influxdb-database-plugin
                      plugin.
                    items:
                      properties:
                        connectTimeout:
                          description: The number of seconds to use as a connection
                            timeout. The number of seconds to use as a connection
                            timeout.
                          type: number
                        host:
                          description: The host to connect to. Influxdb host to connect
                            to.
                          type: string
                        insecureTls:
                          description: Whether to skip verification of the server
                            certificate when using TLS. Whether to skip verification
                            of the server certificate when using TLS.
                          type: boolean
                        port:
                          description: The default port to connect to if no port is
                            specified as part of the host. The transport port to use
                            to connect to Influxdb.
                          type: number
                        tls:
                          description: Whether to use TLS when connecting to Cassandra.
                            Whether to use TLS when connecting to Influxdb.
                          type: boolean
                        username:
                          description: The username to authenticate with. Specifies
                            the username to use for superuser access.
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Template describing how dynamic usernames are
                            generated.
                          type: string
                      type: object
                    type: array
                  mongodb:
                    description: A nested block containing configuration options for
                      MongoDB connections. Connection parameters for the mongodb-database-plugin
                      plugin.
                    items:
                      properties:
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  mongodbatlas:
                    description: A nested block containing configuration options for
                      MongoDB Atlas connections. Connection parameters for the mongodbatlas-database-plugin
                      plugin.
                    items:
                      properties:
                        projectId:
                          description: The Project ID the Database User should be
                            created within. The Project ID the Database User should
                            be created within.
                          type: string
                        publicKey:
                          description: The Public Programmatic API Key used to authenticate
                            with the MongoDB Atlas API. The Public Programmatic API
                            Key used to authenticate with the MongoDB Atlas API.
                          type: string
                      type: object
                    type: array
                  mssql:
                    description: A nested block containing configuration options for
                      MSSQL connections. Connection parameters for the mssql-database-plugin
                      plugin.
                    items:
                      properties:
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        containedDb:
                          description: For Vault v1.9+. Set to true when the target
                            is a Contained Database, e.g. AzureSQL. See the Vault
                            docs Set to true when the target is a Contained Database,
                            e.g. AzureSQL.
                          type: boolean
                        disableEscaping:
                          description: Disable special character escaping in username
                            and password. Disable special character escaping in username
                            and password
                          type: boolean
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  mysql:
                    description: A nested block containing configuration options for
                      MySQL connections. Connection parameters for the mysql-database-plugin
                      plugin.
                    items:
                      properties:
                        authType:
                          description: Enable IAM authentication to a Google Cloud
                            instance when set to gcp_iam Specify alternative authorization
                            type. (Only 'gcp_iam' is valid currently)
                          type: string
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        tlsCa:
                          description: x509 CA file for validating the certificate
                            presented by the MySQL server. Must be PEM encoded. x509
                            CA file for validating the certificate presented by the
                            MySQL server. Must be PEM encoded.
                          type: string
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  mysqlAurora:
                    description: A nested block containing configuration options for
                      Aurora MySQL connections. Connection parameters for the mysql-aurora-database-plugin
                      plugin.
                    items:
                      properties:
                        authType:
                          description: Enable IAM authentication to a Google Cloud
                            instance when set to gcp_iam Specify alternative authorization
                            type. (Only 'gcp_iam' is valid currently)
                          type: string
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        tlsCa:
                          description: x509 CA file for validating the certificate
                            presented by the MySQL server. Must be PEM encoded. x509
                            CA file for validating the certificate presented by the
                            MySQL server. Must be PEM encoded.
                          type: string
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  mysqlLegacy:
                    description: A nested block containing configuration options for
                      legacy MySQL connections. Connection parameters for the mysql-legacy-database-plugin
                      plugin.
                    items:
                      properties:
                        authType:
                          description: Enable IAM authentication to a Google Cloud
                            instance when set to gcp_iam Specify alternative authorization
                            type. (Only 'gcp_iam' is valid currently)
                          type: string
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        tlsCa:
                          description: x509 CA file for validating the certificate
                            presented by the MySQL server. Must be PEM encoded. x509
                            CA file for validating the certificate presented by the
                            MySQL server. Must be PEM encoded.
                          type: string
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  mysqlRds:
                    description: A nested block containing configuration options for
                      RDS MySQL connections. Connection parameters for the mysql-rds-database-plugin
                      plugin.
                    items:
                      properties:
                        authType:
                          description: Enable IAM authentication to a Google Cloud
                            instance when set to gcp_iam Specify alternative authorization
                            type. (Only 'gcp_iam' is valid currently)
                          type: string
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        tlsCa:
                          description: x509 CA file for validating the certificate
                            presented by the MySQL server. Must be PEM encoded. x509
                            CA file for validating the certificate presented by the
                            MySQL server. Must be PEM encoded.
                          type: string
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  name:
                    description: A unique name to give the database connection. Name
                      of the database connection.
                    type: string
                  namespace:
                    description: The namespace to provision the resource in. The value
                      should not contain leading or trailing forward slashes. The
                      namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise. Target namespace. (requires
                      Enterprise)
                    type: string
                  oracle:
                    description: A nested block containing configuration options for
                      Oracle connections. Connection parameters for the oracle-database-plugin
                      plugin.
                    items:
                      properties:
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        disconnectSessions:
                          description: Enable the built-in session disconnect mechanism.
                            Set to true to disconnect any open sessions prior to running
                            the revocation statements.
                          type: boolean
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        splitStatements:
                          description: Enable spliting statements after semi-colons.
                            Set to true in order to split statements after semi-colons.
                          type: boolean
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  pluginName:
                    description: Specifies the name of the plugin to use. Specifies
                      the name of the plugin to use for this connection. Must be prefixed
                      with the name of one of the supported database engine types.
                    type: string
                  postgresql:
                    description: A nested block containing configuration options for
                      PostgreSQL connections. Connection parameters for the postgresql-database-plugin
                      plugin.
                    items:
                      properties:
                        authType:
                          description: Enable IAM authentication to a Google Cloud
                            instance when set to gcp_iam Specify alternative authorization
                            type. (Only 'gcp_iam' is valid currently)
                          type: string
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        disableEscaping:
                          description: Disable special character escaping in username
                            and password. Disable special character escaping in username
                            and password
                          type: boolean
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  redis:
                    description: A nested block containing configuration options for
                      Redis connections. Connection parameters for the redis-database-plugin
                      plugin.
                    items:
                      properties:
                        caCert:
                          description: The contents of a PEM-encoded CA cert file
                            to use to verify the Redis server's identity. The contents
                            of a PEM-encoded CA cert file to use to verify the Redis
                            server's identity.
                          type: string
                        host:
                          description: The host to connect to. Specifies the host
                            to connect to
                          type: string
                        insecureTls:
                          description: Whether to skip verification of the server
                            certificate when using TLS. Specifies whether to skip
                            verification of the server certificate when using TLS.
                          type: boolean
                        port:
                          description: The default port to connect to if no port is
                            specified as part of the host. The transport port to use
                            to connect to Redis.
                          type: number
                        tls:
                          description: Whether to use TLS when connecting to Cassandra.
                            Specifies whether to use TLS when connecting to Redis.
                          type: boolean
                        username:
                          description: The username to authenticate with. Specifies
                            the username for Vault to use.
                          type: string
                      type: object
                    type: array
                  redisElasticache:
                    description: A nested block containing configuration options for
                      Redis ElastiCache connections. Connection parameters for the
                      redis-elasticache-database-plugin plugin.
                    items:
                      properties:
                        region:
                          description: The region where the ElastiCache cluster is
                            hosted. If omitted Vault tries to infer from the environment
                            instead. The AWS region where the ElastiCache cluster
                            is hosted. If omitted the plugin tries to infer the region
                            from the environment.
                          type: string
                        url:
                          description: The url to connect to including the port; e.g.
                            master.my-cluster.xxxxxx.use1.cache.amazonaws.com:6379.
                            The configuration endpoint for the ElastiCache cluster
                            to connect to.
                          type: string
                      type: object
                    type: array
                  redshift:
                    description: Connection parameters for the redshift-database-plugin
                      plugin.
                    items:
                      properties:
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        disableEscaping:
                          description: Disable special character escaping in username
                            and password. Disable special character escaping in username
                            and password
                          type: boolean
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  rootRotationStatements:
                    description: A list of database statements to be executed to rotate
                      the root user's credentials. A list of database statements to
                      be executed to rotate the root user's credentials.
                    items:
                      type: string
                    type: array
                  snowflake:
                    description: A nested block containing configuration options for
                      Snowflake connections. Connection parameters for the snowflake-database-plugin
                      plugin.
                    items:
                      properties:
                        connectionUrl:
                          description: A URL containing connection information. See
                            the Vault docs for an example. Connection string to use
                            to connect to the database.
                          type: string
                        maxConnectionLifetime:
                          description: The maximum number of seconds to keep a connection
                            alive for. Maximum number of seconds a connection may
                            be reused.
                          type: number
                        maxIdleConnections:
                          description: The maximum number of idle connections to maintain.
                            Maximum number of idle connections to the database.
                          type: number
                        maxOpenConnections:
                          description: The maximum number of open connections to use.
                            Maximum number of open connections to the database.
                          type: number
                        username:
                          description: The username to authenticate with. The root
                            credential username used in the connection URL
                          type: string
                        usernameTemplate:
                          description: Template describing how dynamic usernames are
                            generated. Username generation template.
                          type: string
                      type: object
                    type: array
                  verifyConnection:
                    description: Whether the connection should be verified on initial
                      configuration or not. Specifies if the connection is verified
                      during initial configuration.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
