---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: secretbackendroles.aws.vault.upbound.io
spec:
  group: aws.vault.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - vault
    kind: SecretBackendRole
    listKind: SecretBackendRoleList
    plural: secretbackendroles
    singular: secretbackendrole
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: SecretBackendRole is the Schema for the SecretBackendRoles API.
          Creates a role on an AWS Secret Backend for Vault.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SecretBackendRoleSpec defines the desired state of SecretBackendRole
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  backend:
                    description: |-
                      The path the AWS secret backend is mounted at,
                      with no leading or trailing /s.
                      The path of the AWS Secret Backend the role belongs to.
                    type: string
                  backendRef:
                    description: Reference to a SecretBackend in aws to populate backend.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  backendSelector:
                    description: Selector for a SecretBackend in aws to populate backend.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  credentialType:
                    description: |-
                      Specifies the type of credential to be used when
                      retrieving credentials from the role. Must be one of iam_user, assumed_role, or
                      federation_token.
                      Role credential type.
                    type: string
                  defaultStsTtl:
                    description: |-
                      The default TTL in seconds for STS credentials.
                      When a TTL is not specified when STS credentials are requested,
                      and a default TTL is specified on the role,
                      then this default TTL will be used. Valid only when credential_type is one of
                      assumed_role or federation_token.
                      The default TTL in seconds for STS credentials. When a TTL is not specified when STS credentials are requested, and a default TTL is specified on the role, then this default TTL will be used. Valid only when credential_type is one of assumed_role or federation_token.
                    type: number
                  externalId:
                    description: |-
                      External ID to set for assume role creds.
                      Valid only when credential_type is set to assumed_role.
                      External ID to set for assume role creds.
                    type: string
                  iamGroups:
                    description: |-
                      A list of IAM group names. IAM users generated
                      against this vault role will be added to these IAM Groups. For a credential
                      type of assumed_role or federation_token, the policies sent to the
                      corresponding AWS call (sts:AssumeRole or sts:GetFederation) will be the
                      policies from each group in iam_groups combined with the policy_document
                      and policy_arns parameters.
                      A list of IAM group names. IAM users generated against this vault role will be added to these IAM Groups. For a credential type of assumed_role or federation_token, the policies sent to the corresponding AWS call (sts:AssumeRole or sts:GetFederation) will be the policies from each group in iam_groups combined with the policy_document and policy_arns parameters.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  iamTags:
                    additionalProperties:
                      type: string
                    description: |-
                      A map of strings representing key/value pairs
                      to be used as tags for any IAM user that is created by this role.
                      A map of strings representing key/value pairs used as tags for any IAM user created by this role.
                    type: object
                    x-kubernetes-map-type: granular
                  maxStsTtl:
                    description: |-
                      The max allowed TTL in seconds for STS credentials
                      (credentials TTL are capped to max_sts_ttl). Valid only when credential_type is
                      one of assumed_role or federation_token.
                      The max allowed TTL in seconds for STS credentials (credentials TTL are capped to max_sts_ttl). Valid only when credential_type is one of assumed_role or federation_token.
                    type: number
                  name:
                    description: |-
                      The name to identify this role within the backend.
                      Must be unique within the backend.
                      Unique name for the role.
                    type: string
                  namespace:
                    description: |-
                      The namespace to provision the resource in.
                      The value should not contain leading or trailing forward slashes.
                      The namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise.
                      Target namespace. (requires Enterprise)
                    type: string
                  permissionsBoundaryArn:
                    description: |-
                      The ARN of the AWS Permissions
                      Boundary to attach to IAM users created in the role. Valid only when
                      credential_type is iam_user. If not specified, then no permissions boundary
                      policy will be attached.
                      The ARN of the AWS Permissions Boundary to attach to IAM users created in the role. Valid only when credential_type is iam_user. If not specified, then no permissions boundary policy will be attached.
                    type: string
                  policyArns:
                    description: |-
                      Specifies a list of AWS managed policy ARNs. The
                      behavior depends on the credential type. With iam_user, the policies will be
                      attached to IAM users when they are requested. With assumed_role and
                      federation_token, the policy ARNs will act as a filter on what the credentials
                      can do, similar to policy_document. When credential_type is iam_user or
                      federation_token, at least one of policy_document or policy_arns must
                      be specified.
                      ARN for an existing IAM policy the role should use.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  policyDocument:
                    description: |-
                      The IAM policy document for the role. The
                      behavior depends on the credential type. With iam_user, the policy document
                      will be attached to the IAM user generated and augment the permissions the IAM
                      user has. With assumed_role and federation_token, the policy document will
                      act as a filter on what the credentials can do, similar to policy_arns.
                      IAM policy the role should use in JSON format.
                    type: string
                  roleArns:
                    description: |-
                      Specifies the ARNs of the AWS roles this Vault role
                      is allowed to assume. Required when credential_type is assumed_role and
                      prohibited otherwise.
                      ARNs of AWS roles allowed to be assumed. Only valid when credential_type is 'assumed_role'
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  sessionTags:
                    additionalProperties:
                      type: string
                    description: |-
                      A map of strings representing key/value pairs to be set
                      during assume role creds creation. Valid only when credential_type is set to
                      assumed_role.
                      Session tags to be set for assume role creds created.
                    type: object
                    x-kubernetes-map-type: granular
                  userPath:
                    description: |-
                      The path for the user name. Valid only when
                      credential_type is iam_user. Default is /.
                      The path for the user name. Valid only when credential_type is iam_user. Default is /
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  backend:
                    description: |-
                      The path the AWS secret backend is mounted at,
                      with no leading or trailing /s.
                      The path of the AWS Secret Backend the role belongs to.
                    type: string
                  backendRef:
                    description: Reference to a SecretBackend in aws to populate backend.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  backendSelector:
                    description: Selector for a SecretBackend in aws to populate backend.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  credentialType:
                    description: |-
                      Specifies the type of credential to be used when
                      retrieving credentials from the role. Must be one of iam_user, assumed_role, or
                      federation_token.
                      Role credential type.
                    type: string
                  defaultStsTtl:
                    description: |-
                      The default TTL in seconds for STS credentials.
                      When a TTL is not specified when STS credentials are requested,
                      and a default TTL is specified on the role,
                      then this default TTL will be used. Valid only when credential_type is one of
                      assumed_role or federation_token.
                      The default TTL in seconds for STS credentials. When a TTL is not specified when STS credentials are requested, and a default TTL is specified on the role, then this default TTL will be used. Valid only when credential_type is one of assumed_role or federation_token.
                    type: number
                  externalId:
                    description: |-
                      External ID to set for assume role creds.
                      Valid only when credential_type is set to assumed_role.
                      External ID to set for assume role creds.
                    type: string
                  iamGroups:
                    description: |-
                      A list of IAM group names. IAM users generated
                      against this vault role will be added to these IAM Groups. For a credential
                      type of assumed_role or federation_token, the policies sent to the
                      corresponding AWS call (sts:AssumeRole or sts:GetFederation) will be the
                      policies from each group in iam_groups combined with the policy_document
                      and policy_arns parameters.
                      A list of IAM group names. IAM users generated against this vault role will be added to these IAM Groups. For a credential type of assumed_role or federation_token, the policies sent to the corresponding AWS call (sts:AssumeRole or sts:GetFederation) will be the policies from each group in iam_groups combined with the policy_document and policy_arns parameters.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  iamTags:
                    additionalProperties:
                      type: string
                    description: |-
                      A map of strings representing key/value pairs
                      to be used as tags for any IAM user that is created by this role.
                      A map of strings representing key/value pairs used as tags for any IAM user created by this role.
                    type: object
                    x-kubernetes-map-type: granular
                  maxStsTtl:
                    description: |-
                      The max allowed TTL in seconds for STS credentials
                      (credentials TTL are capped to max_sts_ttl). Valid only when credential_type is
                      one of assumed_role or federation_token.
                      The max allowed TTL in seconds for STS credentials (credentials TTL are capped to max_sts_ttl). Valid only when credential_type is one of assumed_role or federation_token.
                    type: number
                  name:
                    description: |-
                      The name to identify this role within the backend.
                      Must be unique within the backend.
                      Unique name for the role.
                    type: string
                  namespace:
                    description: |-
                      The namespace to provision the resource in.
                      The value should not contain leading or trailing forward slashes.
                      The namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise.
                      Target namespace. (requires Enterprise)
                    type: string
                  permissionsBoundaryArn:
                    description: |-
                      The ARN of the AWS Permissions
                      Boundary to attach to IAM users created in the role. Valid only when
                      credential_type is iam_user. If not specified, then no permissions boundary
                      policy will be attached.
                      The ARN of the AWS Permissions Boundary to attach to IAM users created in the role. Valid only when credential_type is iam_user. If not specified, then no permissions boundary policy will be attached.
                    type: string
                  policyArns:
                    description: |-
                      Specifies a list of AWS managed policy ARNs. The
                      behavior depends on the credential type. With iam_user, the policies will be
                      attached to IAM users when they are requested. With assumed_role and
                      federation_token, the policy ARNs will act as a filter on what the credentials
                      can do, similar to policy_document. When credential_type is iam_user or
                      federation_token, at least one of policy_document or policy_arns must
                      be specified.
                      ARN for an existing IAM policy the role should use.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  policyDocument:
                    description: |-
                      The IAM policy document for the role. The
                      behavior depends on the credential type. With iam_user, the policy document
                      will be attached to the IAM user generated and augment the permissions the IAM
                      user has. With assumed_role and federation_token, the policy document will
                      act as a filter on what the credentials can do, similar to policy_arns.
                      IAM policy the role should use in JSON format.
                    type: string
                  roleArns:
                    description: |-
                      Specifies the ARNs of the AWS roles this Vault role
                      is allowed to assume. Required when credential_type is assumed_role and
                      prohibited otherwise.
                      ARNs of AWS roles allowed to be assumed. Only valid when credential_type is 'assumed_role'
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  sessionTags:
                    additionalProperties:
                      type: string
                    description: |-
                      A map of strings representing key/value pairs to be set
                      during assume role creds creation. Valid only when credential_type is set to
                      assumed_role.
                      Session tags to be set for assume role creds created.
                    type: object
                    x-kubernetes-map-type: granular
                  userPath:
                    description: |-
                      The path for the user name. Valid only when
                      credential_type is iam_user. Default is /.
                      The path for the user name. Valid only when credential_type is iam_user. Default is /
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.credentialType is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.credentialType)
                || (has(self.initProvider) && has(self.initProvider.credentialType))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: SecretBackendRoleStatus defines the observed state of SecretBackendRole.
            properties:
              atProvider:
                properties:
                  backend:
                    description: |-
                      The path the AWS secret backend is mounted at,
                      with no leading or trailing /s.
                      The path of the AWS Secret Backend the role belongs to.
                    type: string
                  credentialType:
                    description: |-
                      Specifies the type of credential to be used when
                      retrieving credentials from the role. Must be one of iam_user, assumed_role, or
                      federation_token.
                      Role credential type.
                    type: string
                  defaultStsTtl:
                    description: |-
                      The default TTL in seconds for STS credentials.
                      When a TTL is not specified when STS credentials are requested,
                      and a default TTL is specified on the role,
                      then this default TTL will be used. Valid only when credential_type is one of
                      assumed_role or federation_token.
                      The default TTL in seconds for STS credentials. When a TTL is not specified when STS credentials are requested, and a default TTL is specified on the role, then this default TTL will be used. Valid only when credential_type is one of assumed_role or federation_token.
                    type: number
                  externalId:
                    description: |-
                      External ID to set for assume role creds.
                      Valid only when credential_type is set to assumed_role.
                      External ID to set for assume role creds.
                    type: string
                  iamGroups:
                    description: |-
                      A list of IAM group names. IAM users generated
                      against this vault role will be added to these IAM Groups. For a credential
                      type of assumed_role or federation_token, the policies sent to the
                      corresponding AWS call (sts:AssumeRole or sts:GetFederation) will be the
                      policies from each group in iam_groups combined with the policy_document
                      and policy_arns parameters.
                      A list of IAM group names. IAM users generated against this vault role will be added to these IAM Groups. For a credential type of assumed_role or federation_token, the policies sent to the corresponding AWS call (sts:AssumeRole or sts:GetFederation) will be the policies from each group in iam_groups combined with the policy_document and policy_arns parameters.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  iamTags:
                    additionalProperties:
                      type: string
                    description: |-
                      A map of strings representing key/value pairs
                      to be used as tags for any IAM user that is created by this role.
                      A map of strings representing key/value pairs used as tags for any IAM user created by this role.
                    type: object
                    x-kubernetes-map-type: granular
                  id:
                    type: string
                  maxStsTtl:
                    description: |-
                      The max allowed TTL in seconds for STS credentials
                      (credentials TTL are capped to max_sts_ttl). Valid only when credential_type is
                      one of assumed_role or federation_token.
                      The max allowed TTL in seconds for STS credentials (credentials TTL are capped to max_sts_ttl). Valid only when credential_type is one of assumed_role or federation_token.
                    type: number
                  name:
                    description: |-
                      The name to identify this role within the backend.
                      Must be unique within the backend.
                      Unique name for the role.
                    type: string
                  namespace:
                    description: |-
                      The namespace to provision the resource in.
                      The value should not contain leading or trailing forward slashes.
                      The namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise.
                      Target namespace. (requires Enterprise)
                    type: string
                  permissionsBoundaryArn:
                    description: |-
                      The ARN of the AWS Permissions
                      Boundary to attach to IAM users created in the role. Valid only when
                      credential_type is iam_user. If not specified, then no permissions boundary
                      policy will be attached.
                      The ARN of the AWS Permissions Boundary to attach to IAM users created in the role. Valid only when credential_type is iam_user. If not specified, then no permissions boundary policy will be attached.
                    type: string
                  policyArns:
                    description: |-
                      Specifies a list of AWS managed policy ARNs. The
                      behavior depends on the credential type. With iam_user, the policies will be
                      attached to IAM users when they are requested. With assumed_role and
                      federation_token, the policy ARNs will act as a filter on what the credentials
                      can do, similar to policy_document. When credential_type is iam_user or
                      federation_token, at least one of policy_document or policy_arns must
                      be specified.
                      ARN for an existing IAM policy the role should use.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  policyDocument:
                    description: |-
                      The IAM policy document for the role. The
                      behavior depends on the credential type. With iam_user, the policy document
                      will be attached to the IAM user generated and augment the permissions the IAM
                      user has. With assumed_role and federation_token, the policy document will
                      act as a filter on what the credentials can do, similar to policy_arns.
                      IAM policy the role should use in JSON format.
                    type: string
                  roleArns:
                    description: |-
                      Specifies the ARNs of the AWS roles this Vault role
                      is allowed to assume. Required when credential_type is assumed_role and
                      prohibited otherwise.
                      ARNs of AWS roles allowed to be assumed. Only valid when credential_type is 'assumed_role'
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  sessionTags:
                    additionalProperties:
                      type: string
                    description: |-
                      A map of strings representing key/value pairs to be set
                      during assume role creds creation. Valid only when credential_type is set to
                      assumed_role.
                      Session tags to be set for assume role creds created.
                    type: object
                    x-kubernetes-map-type: granular
                  userPath:
                    description: |-
                      The path for the user name. Valid only when
                      credential_type is iam_user. Default is /.
                      The path for the user name. Valid only when credential_type is iam_user. Default is /
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
