---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: secretbackends.ad.vault.upbound.io
spec:
  group: ad.vault.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - vault
    kind: SecretBackend
    listKind: SecretBackendList
    plural: secretbackends
    singular: secretbackend
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: SecretBackend is the Schema for the SecretBackends API. Creates
          an Active Directory secret backend for Vault.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SecretBackendSpec defines the desired state of SecretBackend
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  anonymousGroupSearch:
                    description: |-
                      Use anonymous binds when performing LDAP group searches
                      (if true the initial credentials will still be used for the initial connection test).
                      Use anonymous binds when performing LDAP group searches (if true the initial credentials will still be used for the initial connection test).
                    type: boolean
                  backend:
                    description: |-
                      The unique path this backend should be mounted at. Must
                      not begin or end with a /. Defaults to ad.
                      The mount path for a backend, for example, the path given in "$ vault auth enable -path=my-ad ad".
                    type: string
                  binddn:
                    description: |-
                      Distinguished name of object to bind when performing user and group search.
                      Distinguished name of object to bind when performing user and group search.
                    type: string
                  bindpassSecretRef:
                    description: |-
                      Password to use along with binddn when performing user search.
                      LDAP password for searching for the user DN.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  caseSensitiveNames:
                    description: |-
                      If set, user and group names assigned to policies within the
                      backend will be case sensitive. Otherwise, names will be normalized to lower case.
                      If true, case sensitivity will be used when comparing usernames and groups for matching policies.
                    type: boolean
                  certificate:
                    description: |-
                      CA certificate to use when verifying LDAP server certificate, must be
                      x509 PEM encoded.
                      CA certificate to use when verifying LDAP server certificate, must be x509 PEM encoded.
                    type: string
                  clientTlsCertSecretRef:
                    description: |-
                      Client certificate to provide to the LDAP server, must be x509 PEM encoded.
                      Client certificate to provide to the LDAP server, must be x509 PEM encoded.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  clientTlsKeySecretRef:
                    description: |-
                      Client certificate key to provide to the LDAP server, must be x509 PEM encoded.
                      Client certificate key to provide to the LDAP server, must be x509 PEM encoded.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  defaultLeaseTtlSeconds:
                    description: |-
                      Default lease duration for secrets in seconds.
                      Default lease duration for secrets in seconds
                    type: number
                  denyNullBind:
                    description: |-
                      Denies an unauthenticated LDAP bind request if the user's password is empty;
                      defaults to true.
                      Denies an unauthenticated LDAP bind request if the user's password is empty; defaults to true
                    type: boolean
                  description:
                    description: |-
                      Human-friendly description of the mount for the Active Directory backend.
                      Human-friendly description of the mount for the backend.
                    type: string
                  disableRemount:
                    description: |-
                      If set, opts out of mount migration on path updates.
                      See here for more info on Mount Migration
                      If set, opts out of mount migration on path updates.
                    type: boolean
                  discoverdn:
                    description: |-
                      Use anonymous bind to discover the bind Distinguished Name of a user.
                      Use anonymous bind to discover the bind DN of a user.
                    type: boolean
                  groupattr:
                    description: |-
                      LDAP attribute to follow on objects returned by  in order to enumerate
                      user group membership. Examples: cn or memberOf, etc. Defaults to cn.
                      LDAP attribute to follow on objects returned by <groupfilter> in order to enumerate user group membership. Examples: "cn" or "memberOf", etc. Default: cn
                    type: string
                  groupdn:
                    description: |-
                      LDAP search base to use for group membership search (eg: ou=Groups,dc=example,dc=org).
                      LDAP search base to use for group membership search (eg: ou=Groups,dc=example,dc=org)
                    type: string
                  groupfilter:
                    description: |-
                      Go template for querying group membership of user  The template can access
                      the following context variables: UserDN, Username. Defaults to (|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))
                      Go template for querying group membership of user. The template can access the following context variables: UserDN, Username Example: (&(objectClass=group)(member:1.2.840.113556.1.4.1941:={{.UserDN}})) Default: (|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))
                    type: string
                  insecureTls:
                    description: |-
                      Skip LDAP server SSL Certificate verification. This is not recommended for production.
                      Defaults to false.
                      Skip LDAP server SSL Certificate verification - insecure and not recommended for production use.
                    type: boolean
                  lastRotationTolerance:
                    description: |-
                      The number of seconds after a Vault rotation where, if Active Directory
                      shows a later rotation, it should be considered out-of-band
                      The number of seconds after a Vault rotation where, if Active Directory shows a later rotation, it should be considered out-of-band.
                    type: number
                  local:
                    description: |-
                      Mark the secrets engine as local-only. Local engines are not replicated or removed by
                      replication.Tolerance duration to use when checking the last rotation time.
                      Mark the secrets engine as local-only. Local engines are not replicated or removed by replication.Tolerance duration to use when checking the last rotation time.
                    type: boolean
                  maxLeaseTtlSeconds:
                    description: |-
                      Maximum possible lease duration for secrets in seconds.
                      Maximum possible lease duration for secrets in seconds.
                    type: number
                  maxTtl:
                    description: |-
                      In seconds, the maximum password time-to-live.
                      In seconds, the maximum password time-to-live.
                    type: number
                  namespace:
                    description: |-
                      The namespace to provision the resource in.
                      The value should not contain leading or trailing forward slashes.
                      The namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise.
                      Target namespace. (requires Enterprise)
                    type: string
                  passwordPolicy:
                    description: |-
                      Name of the password policy to use to generate passwords.
                      Name of the password policy to use to generate passwords.
                    type: string
                  requestTimeout:
                    description: |-
                      Timeout, in seconds, for the connection when making requests against the server
                      before returning back an error.
                      Timeout, in seconds, for the connection when making requests against the server before returning back an error.
                    type: number
                  starttls:
                    description: |-
                      Issue a StartTLS command after establishing unencrypted connection.
                      Issue a StartTLS command after establishing unencrypted connection.
                    type: boolean
                  tlsMaxVersion:
                    description: |-
                      Maximum TLS version to use. Accepted values are tls10, tls11,
                      tls12 or tls13. Defaults to tls12.
                      Maximum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
                    type: string
                  tlsMinVersion:
                    description: |-
                      Minimum TLS version to use. Accepted values are tls10, tls11,
                      tls12 or tls13. Defaults to tls12.
                      Minimum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
                    type: string
                  ttl:
                    description: |-
                      In seconds, the default password time-to-live.
                      In seconds, the default password time-to-live.
                    type: number
                  upndomain:
                    description: |-
                      Enables userPrincipalDomain login with [username]@UPNDomain.
                      Enables userPrincipalDomain login with [username]@UPNDomain.
                    type: string
                  url:
                    description: |-
                      LDAP URL to connect to. Multiple URLs can be specified by concatenating
                      them with commas; they will be tried in-order. Defaults to ldap://127.0.0.1.
                      LDAP URL to connect to (default: ldap://127.0.0.1). Multiple URLs can be specified by concatenating them with commas; they will be tried in-order.
                    type: string
                  usePre111GroupCnBehavior:
                    description: |-
                      In Vault 1.1.1 a fix for handling group CN values of
                      different cases unfortunately introduced a regression that could cause previously defined groups
                      to not be found due to a change in the resulting name. If set true, the pre-1.1.1 behavior for
                      matching group CNs will be used. This is only needed in some upgrade scenarios for backwards
                      compatibility. It is enabled by default if the config is upgraded but disabled by default on
                      new configurations.
                      In Vault 1.1.1 a fix for handling group CN values of different cases unfortunately introduced a regression that could cause previously defined groups to not be found due to a change in the resulting name. If set true, the pre-1.1.1 behavior for matching group CNs will be used. This is only needed in some upgrade scenarios for backwards compatibility. It is enabled by default if the config is upgraded but disabled by default on new configurations.
                    type: boolean
                  useTokenGroups:
                    description: |-
                      If true, use the Active Directory tokenGroups constructed attribute of the
                      user to find the group memberships. This will find all security groups including nested ones.
                      If true, use the Active Directory tokenGroups constructed attribute of the user to find the group memberships. This will find all security groups including nested ones.
                    type: boolean
                  userattr:
                    description: |-
                      Attribute used when searching users. Defaults to cn.
                      Attribute used for users (default: cn)
                    type: string
                  userdn:
                    description: |-
                      LDAP domain to use for users (eg: ou=People,dc=example,dc=org)`.
                      LDAP domain to use for users (eg: ou=People,dc=example,dc=org)
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  anonymousGroupSearch:
                    description: |-
                      Use anonymous binds when performing LDAP group searches
                      (if true the initial credentials will still be used for the initial connection test).
                      Use anonymous binds when performing LDAP group searches (if true the initial credentials will still be used for the initial connection test).
                    type: boolean
                  backend:
                    description: |-
                      The unique path this backend should be mounted at. Must
                      not begin or end with a /. Defaults to ad.
                      The mount path for a backend, for example, the path given in "$ vault auth enable -path=my-ad ad".
                    type: string
                  binddn:
                    description: |-
                      Distinguished name of object to bind when performing user and group search.
                      Distinguished name of object to bind when performing user and group search.
                    type: string
                  bindpassSecretRef:
                    description: |-
                      Password to use along with binddn when performing user search.
                      LDAP password for searching for the user DN.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  caseSensitiveNames:
                    description: |-
                      If set, user and group names assigned to policies within the
                      backend will be case sensitive. Otherwise, names will be normalized to lower case.
                      If true, case sensitivity will be used when comparing usernames and groups for matching policies.
                    type: boolean
                  certificate:
                    description: |-
                      CA certificate to use when verifying LDAP server certificate, must be
                      x509 PEM encoded.
                      CA certificate to use when verifying LDAP server certificate, must be x509 PEM encoded.
                    type: string
                  clientTlsCertSecretRef:
                    description: |-
                      Client certificate to provide to the LDAP server, must be x509 PEM encoded.
                      Client certificate to provide to the LDAP server, must be x509 PEM encoded.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  clientTlsKeySecretRef:
                    description: |-
                      Client certificate key to provide to the LDAP server, must be x509 PEM encoded.
                      Client certificate key to provide to the LDAP server, must be x509 PEM encoded.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  defaultLeaseTtlSeconds:
                    description: |-
                      Default lease duration for secrets in seconds.
                      Default lease duration for secrets in seconds
                    type: number
                  denyNullBind:
                    description: |-
                      Denies an unauthenticated LDAP bind request if the user's password is empty;
                      defaults to true.
                      Denies an unauthenticated LDAP bind request if the user's password is empty; defaults to true
                    type: boolean
                  description:
                    description: |-
                      Human-friendly description of the mount for the Active Directory backend.
                      Human-friendly description of the mount for the backend.
                    type: string
                  disableRemount:
                    description: |-
                      If set, opts out of mount migration on path updates.
                      See here for more info on Mount Migration
                      If set, opts out of mount migration on path updates.
                    type: boolean
                  discoverdn:
                    description: |-
                      Use anonymous bind to discover the bind Distinguished Name of a user.
                      Use anonymous bind to discover the bind DN of a user.
                    type: boolean
                  groupattr:
                    description: |-
                      LDAP attribute to follow on objects returned by  in order to enumerate
                      user group membership. Examples: cn or memberOf, etc. Defaults to cn.
                      LDAP attribute to follow on objects returned by <groupfilter> in order to enumerate user group membership. Examples: "cn" or "memberOf", etc. Default: cn
                    type: string
                  groupdn:
                    description: |-
                      LDAP search base to use for group membership search (eg: ou=Groups,dc=example,dc=org).
                      LDAP search base to use for group membership search (eg: ou=Groups,dc=example,dc=org)
                    type: string
                  groupfilter:
                    description: |-
                      Go template for querying group membership of user  The template can access
                      the following context variables: UserDN, Username. Defaults to (|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))
                      Go template for querying group membership of user. The template can access the following context variables: UserDN, Username Example: (&(objectClass=group)(member:1.2.840.113556.1.4.1941:={{.UserDN}})) Default: (|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))
                    type: string
                  insecureTls:
                    description: |-
                      Skip LDAP server SSL Certificate verification. This is not recommended for production.
                      Defaults to false.
                      Skip LDAP server SSL Certificate verification - insecure and not recommended for production use.
                    type: boolean
                  lastRotationTolerance:
                    description: |-
                      The number of seconds after a Vault rotation where, if Active Directory
                      shows a later rotation, it should be considered out-of-band
                      The number of seconds after a Vault rotation where, if Active Directory shows a later rotation, it should be considered out-of-band.
                    type: number
                  local:
                    description: |-
                      Mark the secrets engine as local-only. Local engines are not replicated or removed by
                      replication.Tolerance duration to use when checking the last rotation time.
                      Mark the secrets engine as local-only. Local engines are not replicated or removed by replication.Tolerance duration to use when checking the last rotation time.
                    type: boolean
                  maxLeaseTtlSeconds:
                    description: |-
                      Maximum possible lease duration for secrets in seconds.
                      Maximum possible lease duration for secrets in seconds.
                    type: number
                  maxTtl:
                    description: |-
                      In seconds, the maximum password time-to-live.
                      In seconds, the maximum password time-to-live.
                    type: number
                  namespace:
                    description: |-
                      The namespace to provision the resource in.
                      The value should not contain leading or trailing forward slashes.
                      The namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise.
                      Target namespace. (requires Enterprise)
                    type: string
                  passwordPolicy:
                    description: |-
                      Name of the password policy to use to generate passwords.
                      Name of the password policy to use to generate passwords.
                    type: string
                  requestTimeout:
                    description: |-
                      Timeout, in seconds, for the connection when making requests against the server
                      before returning back an error.
                      Timeout, in seconds, for the connection when making requests against the server before returning back an error.
                    type: number
                  starttls:
                    description: |-
                      Issue a StartTLS command after establishing unencrypted connection.
                      Issue a StartTLS command after establishing unencrypted connection.
                    type: boolean
                  tlsMaxVersion:
                    description: |-
                      Maximum TLS version to use. Accepted values are tls10, tls11,
                      tls12 or tls13. Defaults to tls12.
                      Maximum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
                    type: string
                  tlsMinVersion:
                    description: |-
                      Minimum TLS version to use. Accepted values are tls10, tls11,
                      tls12 or tls13. Defaults to tls12.
                      Minimum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
                    type: string
                  ttl:
                    description: |-
                      In seconds, the default password time-to-live.
                      In seconds, the default password time-to-live.
                    type: number
                  upndomain:
                    description: |-
                      Enables userPrincipalDomain login with [username]@UPNDomain.
                      Enables userPrincipalDomain login with [username]@UPNDomain.
                    type: string
                  url:
                    description: |-
                      LDAP URL to connect to. Multiple URLs can be specified by concatenating
                      them with commas; they will be tried in-order. Defaults to ldap://127.0.0.1.
                      LDAP URL to connect to (default: ldap://127.0.0.1). Multiple URLs can be specified by concatenating them with commas; they will be tried in-order.
                    type: string
                  usePre111GroupCnBehavior:
                    description: |-
                      In Vault 1.1.1 a fix for handling group CN values of
                      different cases unfortunately introduced a regression that could cause previously defined groups
                      to not be found due to a change in the resulting name. If set true, the pre-1.1.1 behavior for
                      matching group CNs will be used. This is only needed in some upgrade scenarios for backwards
                      compatibility. It is enabled by default if the config is upgraded but disabled by default on
                      new configurations.
                      In Vault 1.1.1 a fix for handling group CN values of different cases unfortunately introduced a regression that could cause previously defined groups to not be found due to a change in the resulting name. If set true, the pre-1.1.1 behavior for matching group CNs will be used. This is only needed in some upgrade scenarios for backwards compatibility. It is enabled by default if the config is upgraded but disabled by default on new configurations.
                    type: boolean
                  useTokenGroups:
                    description: |-
                      If true, use the Active Directory tokenGroups constructed attribute of the
                      user to find the group memberships. This will find all security groups including nested ones.
                      If true, use the Active Directory tokenGroups constructed attribute of the user to find the group memberships. This will find all security groups including nested ones.
                    type: boolean
                  userattr:
                    description: |-
                      Attribute used when searching users. Defaults to cn.
                      Attribute used for users (default: cn)
                    type: string
                  userdn:
                    description: |-
                      LDAP domain to use for users (eg: ou=People,dc=example,dc=org)`.
                      LDAP domain to use for users (eg: ou=People,dc=example,dc=org)
                    type: string
                required:
                - bindpassSecretRef
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.binddn is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.binddn)
                || (has(self.initProvider) && has(self.initProvider.binddn))'
            - message: spec.forProvider.bindpassSecretRef is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.bindpassSecretRef)'
          status:
            description: SecretBackendStatus defines the observed state of SecretBackend.
            properties:
              atProvider:
                properties:
                  anonymousGroupSearch:
                    description: |-
                      Use anonymous binds when performing LDAP group searches
                      (if true the initial credentials will still be used for the initial connection test).
                      Use anonymous binds when performing LDAP group searches (if true the initial credentials will still be used for the initial connection test).
                    type: boolean
                  backend:
                    description: |-
                      The unique path this backend should be mounted at. Must
                      not begin or end with a /. Defaults to ad.
                      The mount path for a backend, for example, the path given in "$ vault auth enable -path=my-ad ad".
                    type: string
                  binddn:
                    description: |-
                      Distinguished name of object to bind when performing user and group search.
                      Distinguished name of object to bind when performing user and group search.
                    type: string
                  caseSensitiveNames:
                    description: |-
                      If set, user and group names assigned to policies within the
                      backend will be case sensitive. Otherwise, names will be normalized to lower case.
                      If true, case sensitivity will be used when comparing usernames and groups for matching policies.
                    type: boolean
                  certificate:
                    description: |-
                      CA certificate to use when verifying LDAP server certificate, must be
                      x509 PEM encoded.
                      CA certificate to use when verifying LDAP server certificate, must be x509 PEM encoded.
                    type: string
                  defaultLeaseTtlSeconds:
                    description: |-
                      Default lease duration for secrets in seconds.
                      Default lease duration for secrets in seconds
                    type: number
                  denyNullBind:
                    description: |-
                      Denies an unauthenticated LDAP bind request if the user's password is empty;
                      defaults to true.
                      Denies an unauthenticated LDAP bind request if the user's password is empty; defaults to true
                    type: boolean
                  description:
                    description: |-
                      Human-friendly description of the mount for the Active Directory backend.
                      Human-friendly description of the mount for the backend.
                    type: string
                  disableRemount:
                    description: |-
                      If set, opts out of mount migration on path updates.
                      See here for more info on Mount Migration
                      If set, opts out of mount migration on path updates.
                    type: boolean
                  discoverdn:
                    description: |-
                      Use anonymous bind to discover the bind Distinguished Name of a user.
                      Use anonymous bind to discover the bind DN of a user.
                    type: boolean
                  groupattr:
                    description: |-
                      LDAP attribute to follow on objects returned by  in order to enumerate
                      user group membership. Examples: cn or memberOf, etc. Defaults to cn.
                      LDAP attribute to follow on objects returned by <groupfilter> in order to enumerate user group membership. Examples: "cn" or "memberOf", etc. Default: cn
                    type: string
                  groupdn:
                    description: |-
                      LDAP search base to use for group membership search (eg: ou=Groups,dc=example,dc=org).
                      LDAP search base to use for group membership search (eg: ou=Groups,dc=example,dc=org)
                    type: string
                  groupfilter:
                    description: |-
                      Go template for querying group membership of user  The template can access
                      the following context variables: UserDN, Username. Defaults to (|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))
                      Go template for querying group membership of user. The template can access the following context variables: UserDN, Username Example: (&(objectClass=group)(member:1.2.840.113556.1.4.1941:={{.UserDN}})) Default: (|(memberUid={{.Username}})(member={{.UserDN}})(uniqueMember={{.UserDN}}))
                    type: string
                  id:
                    type: string
                  insecureTls:
                    description: |-
                      Skip LDAP server SSL Certificate verification. This is not recommended for production.
                      Defaults to false.
                      Skip LDAP server SSL Certificate verification - insecure and not recommended for production use.
                    type: boolean
                  lastRotationTolerance:
                    description: |-
                      The number of seconds after a Vault rotation where, if Active Directory
                      shows a later rotation, it should be considered out-of-band
                      The number of seconds after a Vault rotation where, if Active Directory shows a later rotation, it should be considered out-of-band.
                    type: number
                  local:
                    description: |-
                      Mark the secrets engine as local-only. Local engines are not replicated or removed by
                      replication.Tolerance duration to use when checking the last rotation time.
                      Mark the secrets engine as local-only. Local engines are not replicated or removed by replication.Tolerance duration to use when checking the last rotation time.
                    type: boolean
                  maxLeaseTtlSeconds:
                    description: |-
                      Maximum possible lease duration for secrets in seconds.
                      Maximum possible lease duration for secrets in seconds.
                    type: number
                  maxTtl:
                    description: |-
                      In seconds, the maximum password time-to-live.
                      In seconds, the maximum password time-to-live.
                    type: number
                  namespace:
                    description: |-
                      The namespace to provision the resource in.
                      The value should not contain leading or trailing forward slashes.
                      The namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise.
                      Target namespace. (requires Enterprise)
                    type: string
                  passwordPolicy:
                    description: |-
                      Name of the password policy to use to generate passwords.
                      Name of the password policy to use to generate passwords.
                    type: string
                  requestTimeout:
                    description: |-
                      Timeout, in seconds, for the connection when making requests against the server
                      before returning back an error.
                      Timeout, in seconds, for the connection when making requests against the server before returning back an error.
                    type: number
                  starttls:
                    description: |-
                      Issue a StartTLS command after establishing unencrypted connection.
                      Issue a StartTLS command after establishing unencrypted connection.
                    type: boolean
                  tlsMaxVersion:
                    description: |-
                      Maximum TLS version to use. Accepted values are tls10, tls11,
                      tls12 or tls13. Defaults to tls12.
                      Maximum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
                    type: string
                  tlsMinVersion:
                    description: |-
                      Minimum TLS version to use. Accepted values are tls10, tls11,
                      tls12 or tls13. Defaults to tls12.
                      Minimum TLS version to use. Accepted values are 'tls10', 'tls11', 'tls12' or 'tls13'. Defaults to 'tls12'
                    type: string
                  ttl:
                    description: |-
                      In seconds, the default password time-to-live.
                      In seconds, the default password time-to-live.
                    type: number
                  upndomain:
                    description: |-
                      Enables userPrincipalDomain login with [username]@UPNDomain.
                      Enables userPrincipalDomain login with [username]@UPNDomain.
                    type: string
                  url:
                    description: |-
                      LDAP URL to connect to. Multiple URLs can be specified by concatenating
                      them with commas; they will be tried in-order. Defaults to ldap://127.0.0.1.
                      LDAP URL to connect to (default: ldap://127.0.0.1). Multiple URLs can be specified by concatenating them with commas; they will be tried in-order.
                    type: string
                  usePre111GroupCnBehavior:
                    description: |-
                      In Vault 1.1.1 a fix for handling group CN values of
                      different cases unfortunately introduced a regression that could cause previously defined groups
                      to not be found due to a change in the resulting name. If set true, the pre-1.1.1 behavior for
                      matching group CNs will be used. This is only needed in some upgrade scenarios for backwards
                      compatibility. It is enabled by default if the config is upgraded but disabled by default on
                      new configurations.
                      In Vault 1.1.1 a fix for handling group CN values of different cases unfortunately introduced a regression that could cause previously defined groups to not be found due to a change in the resulting name. If set true, the pre-1.1.1 behavior for matching group CNs will be used. This is only needed in some upgrade scenarios for backwards compatibility. It is enabled by default if the config is upgraded but disabled by default on new configurations.
                    type: boolean
                  useTokenGroups:
                    description: |-
                      If true, use the Active Directory tokenGroups constructed attribute of the
                      user to find the group memberships. This will find all security groups including nested ones.
                      If true, use the Active Directory tokenGroups constructed attribute of the user to find the group memberships. This will find all security groups including nested ones.
                    type: boolean
                  userattr:
                    description: |-
                      Attribute used when searching users. Defaults to cn.
                      Attribute used for users (default: cn)
                    type: string
                  userdn:
                    description: |-
                      LDAP domain to use for users (eg: ou=People,dc=example,dc=org)`.
                      LDAP domain to use for users (eg: ou=People,dc=example,dc=org)
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
