---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: keys.managed.vault.upbound.io
spec:
  group: managed.vault.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - vault
    kind: Keys
    listKind: KeysList
    plural: keys
    singular: keys
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Keys is the Schema for the Keyss API. Configures Managed Keys
          in Vault
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KeysSpec defines the desired state of Keys
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  aws:
                    description: Configuration block for AWS Managed Keys
                    items:
                      properties:
                        accessKey:
                          description: |-
                            The AWS access key to use.
                            The AWS access key to use
                          type: string
                        allowGenerateKey:
                          description: |-
                            If no existing key can be found in
                            the referenced backend, instructs Vault to generate a key within the backend.
                            If no existing key can be found in the referenced backend, instructs Vault to generate a key within the backend
                          type: boolean
                        allowReplaceKey:
                          description: |-
                            Controls the ability for Vault to replace through
                            generation or importing a key into the configured backend even
                            if a key is present, if set to false those operations are forbidden
                            if a key exists.
                            Controls the ability for Vault to replace through generation or importing a key into the configured backend even if a key is present, if set to false those operations are forbidden if a key exists.
                          type: boolean
                        allowStoreKey:
                          description: |-
                            Controls the ability for Vault to import a key to the
                            configured backend, if false, those operations will be forbidden.
                            Controls the ability for Vault to import a key to the configured backend, if 'false', those operations will be forbidden
                          type: boolean
                        anyMount:
                          description: |-
                            If true, allows usage from any mount point within the
                            namespace.
                            Allow usage from any mount point within the namespace if 'true'
                          type: boolean
                        curve:
                          description: |-
                            The curve to use for an ECDSA key. Used when key_type
                            is ECDSA. Required if allow_generate_key is true.
                            The curve to use for an ECDSA key. Used when key_type is 'ECDSA'. Required if 'allow_generate_key' is true
                          type: string
                        endpoint:
                          description: |-
                            Used to specify a custom AWS endpoint.
                            Used to specify a custom AWS endpoint
                          type: string
                        keyBits:
                          description: |-
                            The size in bits for an RSA key.
                            The size in bits for an RSA key. This field is required when 'key_type' is 'RSA'
                          type: string
                        keyType:
                          description: |-
                            The type of key to use.
                            The type of key to use
                          type: string
                        kmsKey:
                          description: |-
                            An identifier for the key.
                            An identifier for the key
                          type: string
                        name:
                          description: |-
                            A unique lowercase name that serves as identifying the key.
                            A unique lowercase name that serves as identifying the key
                          type: string
                        region:
                          description: |-
                            The AWS region where the keys are stored (or will be stored).
                            The AWS region where the keys are stored (or will be stored)
                          type: string
                        secretKey:
                          description: |-
                            The AWS access key to use.
                            The AWS secret key to use
                          type: string
                      type: object
                    type: array
                  azure:
                    description: Configuration block for Azure Managed Keys
                    items:
                      properties:
                        allowGenerateKey:
                          description: |-
                            If no existing key can be found in
                            the referenced backend, instructs Vault to generate a key within the backend.
                            If no existing key can be found in the referenced backend, instructs Vault to generate a key within the backend
                          type: boolean
                        allowReplaceKey:
                          description: |-
                            Controls the ability for Vault to replace through
                            generation or importing a key into the configured backend even
                            if a key is present, if set to false those operations are forbidden
                            if a key exists.
                            Controls the ability for Vault to replace through generation or importing a key into the configured backend even if a key is present, if set to false those operations are forbidden if a key exists.
                          type: boolean
                        allowStoreKey:
                          description: |-
                            Controls the ability for Vault to import a key to the
                            configured backend, if false, those operations will be forbidden.
                            Controls the ability for Vault to import a key to the configured backend, if 'false', those operations will be forbidden
                          type: boolean
                        anyMount:
                          description: |-
                            If true, allows usage from any mount point within the
                            namespace.
                            Allow usage from any mount point within the namespace if 'true'
                          type: boolean
                        clientId:
                          description: |-
                            The client id for credentials to query the Azure APIs.
                            The client id for credentials to query the Azure APIs
                          type: string
                        clientSecret:
                          description: |-
                            The client secret for credentials to query the Azure APIs.
                            The client secret for credentials to query the Azure APIs
                          type: string
                        environment:
                          description: |-
                            The Azure Cloud environment API endpoints to use.
                            The Azure Cloud environment API endpoints to use
                          type: string
                        keyBits:
                          description: |-
                            The size in bits for an RSA key.
                            The size in bits for an RSA key. This field is required when 'key_type' is 'RSA' or when 'allow_generate_key' is true
                          type: string
                        keyName:
                          description: |-
                            The Key Vault key to use for encryption and decryption.
                            The Key Vault key to use for encryption and decryption
                          type: string
                        keyType:
                          description: |-
                            The type of key to use.
                            The type of key to use
                          type: string
                        name:
                          description: |-
                            A unique lowercase name that serves as identifying the key.
                            A unique lowercase name that serves as identifying the key
                          type: string
                        resource:
                          description: |-
                            The Azure Key Vault resource's DNS Suffix to connect to.
                            The Azure Key Vault resource's DNS Suffix to connect to
                          type: string
                        tenantId:
                          description: |-
                            The tenant id for the Azure Active Directory organization.
                            The tenant id for the Azure Active Directory organization
                          type: string
                        vaultName:
                          description: |-
                            The Key Vault vault to use for encryption and decryption.
                            The Key Vault vault to use the encryption keys for encryption and decryption
                          type: string
                      type: object
                    type: array
                  namespace:
                    description: |-
                      The namespace to provision the resource in.
                      The value should not contain leading or trailing forward slashes.
                      The namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise.
                      Target namespace. (requires Enterprise)
                    type: string
                  pkcs:
                    description: Configuration block for PKCS Managed Keys
                    items:
                      properties:
                        allowGenerateKey:
                          description: |-
                            If no existing key can be found in
                            the referenced backend, instructs Vault to generate a key within the backend.
                            If no existing key can be found in the referenced backend, instructs Vault to generate a key within the backend
                          type: boolean
                        allowReplaceKey:
                          description: |-
                            Controls the ability for Vault to replace through
                            generation or importing a key into the configured backend even
                            if a key is present, if set to false those operations are forbidden
                            if a key exists.
                            Controls the ability for Vault to replace through generation or importing a key into the configured backend even if a key is present, if set to false those operations are forbidden if a key exists.
                          type: boolean
                        allowStoreKey:
                          description: |-
                            Controls the ability for Vault to import a key to the
                            configured backend, if false, those operations will be forbidden.
                            Controls the ability for Vault to import a key to the configured backend, if 'false', those operations will be forbidden
                          type: boolean
                        anyMount:
                          description: |-
                            If true, allows usage from any mount point within the
                            namespace.
                            Allow usage from any mount point within the namespace if 'true'
                          type: boolean
                        curve:
                          description: |-
                            The curve to use for an ECDSA key. Used when key_type
                            is ECDSA. Required if allow_generate_key is true.
                            Supplies the curve value when using the 'CKM_ECDSA' mechanism. Required if 'allow_generate_key' is true
                          type: string
                        forceRwSession:
                          description: |-
                            Force all operations to open up a read-write session to
                            the HSM.
                            Force all operations to open up a read-write session to the HSM
                          type: string
                        keyBits:
                          description: |-
                            The size in bits for an RSA key.
                            Supplies the size in bits of the key when using 'CKM_RSA_PKCS_PSS', 'CKM_RSA_PKCS_OAEP' or 'CKM_RSA_PKCS' as a value for 'mechanism'. Required if 'allow_generate_key' is true
                          type: string
                        keyId:
                          description: |-
                            The id of a PKCS#11 key to use.
                            The id of a PKCS#11 key to use
                          type: string
                        keyLabel:
                          description: |-
                            The label of the key to use.
                            The label of the key to use
                          type: string
                        library:
                          description: |-
                            The name of the kms_library stanza to use from Vault's config
                            to lookup the local library path.
                            The name of the kms_library stanza to use from Vault's config to lookup the local library path
                          type: string
                        mechanism:
                          description: |-
                            The encryption/decryption mechanism to use, specified as a
                            hexadecimal (prefixed by 0x) string.
                            The encryption/decryption mechanism to use, specified as a hexadecimal (prefixed by 0x) string.
                          type: string
                        name:
                          description: |-
                            A unique lowercase name that serves as identifying the key.
                            A unique lowercase name that serves as identifying the key
                          type: string
                        pin:
                          description: |-
                            The PIN for login.
                            The PIN for login
                          type: string
                        slot:
                          description: |-
                            The slot number to use, specified as a string in a decimal format
                            (e.g. 2305843009213693953).
                            The slot number to use, specified as a string in a decimal format (e.g. '2305843009213693953')
                          type: string
                        tokenLabel:
                          description: |-
                            The slot token label to use.
                            The slot token label to use
                          type: string
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  aws:
                    description: Configuration block for AWS Managed Keys
                    items:
                      properties:
                        accessKey:
                          description: |-
                            The AWS access key to use.
                            The AWS access key to use
                          type: string
                        allowGenerateKey:
                          description: |-
                            If no existing key can be found in
                            the referenced backend, instructs Vault to generate a key within the backend.
                            If no existing key can be found in the referenced backend, instructs Vault to generate a key within the backend
                          type: boolean
                        allowReplaceKey:
                          description: |-
                            Controls the ability for Vault to replace through
                            generation or importing a key into the configured backend even
                            if a key is present, if set to false those operations are forbidden
                            if a key exists.
                            Controls the ability for Vault to replace through generation or importing a key into the configured backend even if a key is present, if set to false those operations are forbidden if a key exists.
                          type: boolean
                        allowStoreKey:
                          description: |-
                            Controls the ability for Vault to import a key to the
                            configured backend, if false, those operations will be forbidden.
                            Controls the ability for Vault to import a key to the configured backend, if 'false', those operations will be forbidden
                          type: boolean
                        anyMount:
                          description: |-
                            If true, allows usage from any mount point within the
                            namespace.
                            Allow usage from any mount point within the namespace if 'true'
                          type: boolean
                        curve:
                          description: |-
                            The curve to use for an ECDSA key. Used when key_type
                            is ECDSA. Required if allow_generate_key is true.
                            The curve to use for an ECDSA key. Used when key_type is 'ECDSA'. Required if 'allow_generate_key' is true
                          type: string
                        endpoint:
                          description: |-
                            Used to specify a custom AWS endpoint.
                            Used to specify a custom AWS endpoint
                          type: string
                        keyBits:
                          description: |-
                            The size in bits for an RSA key.
                            The size in bits for an RSA key. This field is required when 'key_type' is 'RSA'
                          type: string
                        keyType:
                          description: |-
                            The type of key to use.
                            The type of key to use
                          type: string
                        kmsKey:
                          description: |-
                            An identifier for the key.
                            An identifier for the key
                          type: string
                        name:
                          description: |-
                            A unique lowercase name that serves as identifying the key.
                            A unique lowercase name that serves as identifying the key
                          type: string
                        region:
                          description: |-
                            The AWS region where the keys are stored (or will be stored).
                            The AWS region where the keys are stored (or will be stored)
                          type: string
                        secretKey:
                          description: |-
                            The AWS access key to use.
                            The AWS secret key to use
                          type: string
                      type: object
                    type: array
                  azure:
                    description: Configuration block for Azure Managed Keys
                    items:
                      properties:
                        allowGenerateKey:
                          description: |-
                            If no existing key can be found in
                            the referenced backend, instructs Vault to generate a key within the backend.
                            If no existing key can be found in the referenced backend, instructs Vault to generate a key within the backend
                          type: boolean
                        allowReplaceKey:
                          description: |-
                            Controls the ability for Vault to replace through
                            generation or importing a key into the configured backend even
                            if a key is present, if set to false those operations are forbidden
                            if a key exists.
                            Controls the ability for Vault to replace through generation or importing a key into the configured backend even if a key is present, if set to false those operations are forbidden if a key exists.
                          type: boolean
                        allowStoreKey:
                          description: |-
                            Controls the ability for Vault to import a key to the
                            configured backend, if false, those operations will be forbidden.
                            Controls the ability for Vault to import a key to the configured backend, if 'false', those operations will be forbidden
                          type: boolean
                        anyMount:
                          description: |-
                            If true, allows usage from any mount point within the
                            namespace.
                            Allow usage from any mount point within the namespace if 'true'
                          type: boolean
                        clientId:
                          description: |-
                            The client id for credentials to query the Azure APIs.
                            The client id for credentials to query the Azure APIs
                          type: string
                        clientSecret:
                          description: |-
                            The client secret for credentials to query the Azure APIs.
                            The client secret for credentials to query the Azure APIs
                          type: string
                        environment:
                          description: |-
                            The Azure Cloud environment API endpoints to use.
                            The Azure Cloud environment API endpoints to use
                          type: string
                        keyBits:
                          description: |-
                            The size in bits for an RSA key.
                            The size in bits for an RSA key. This field is required when 'key_type' is 'RSA' or when 'allow_generate_key' is true
                          type: string
                        keyName:
                          description: |-
                            The Key Vault key to use for encryption and decryption.
                            The Key Vault key to use for encryption and decryption
                          type: string
                        keyType:
                          description: |-
                            The type of key to use.
                            The type of key to use
                          type: string
                        name:
                          description: |-
                            A unique lowercase name that serves as identifying the key.
                            A unique lowercase name that serves as identifying the key
                          type: string
                        resource:
                          description: |-
                            The Azure Key Vault resource's DNS Suffix to connect to.
                            The Azure Key Vault resource's DNS Suffix to connect to
                          type: string
                        tenantId:
                          description: |-
                            The tenant id for the Azure Active Directory organization.
                            The tenant id for the Azure Active Directory organization
                          type: string
                        vaultName:
                          description: |-
                            The Key Vault vault to use for encryption and decryption.
                            The Key Vault vault to use the encryption keys for encryption and decryption
                          type: string
                      type: object
                    type: array
                  namespace:
                    description: |-
                      The namespace to provision the resource in.
                      The value should not contain leading or trailing forward slashes.
                      The namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise.
                      Target namespace. (requires Enterprise)
                    type: string
                  pkcs:
                    description: Configuration block for PKCS Managed Keys
                    items:
                      properties:
                        allowGenerateKey:
                          description: |-
                            If no existing key can be found in
                            the referenced backend, instructs Vault to generate a key within the backend.
                            If no existing key can be found in the referenced backend, instructs Vault to generate a key within the backend
                          type: boolean
                        allowReplaceKey:
                          description: |-
                            Controls the ability for Vault to replace through
                            generation or importing a key into the configured backend even
                            if a key is present, if set to false those operations are forbidden
                            if a key exists.
                            Controls the ability for Vault to replace through generation or importing a key into the configured backend even if a key is present, if set to false those operations are forbidden if a key exists.
                          type: boolean
                        allowStoreKey:
                          description: |-
                            Controls the ability for Vault to import a key to the
                            configured backend, if false, those operations will be forbidden.
                            Controls the ability for Vault to import a key to the configured backend, if 'false', those operations will be forbidden
                          type: boolean
                        anyMount:
                          description: |-
                            If true, allows usage from any mount point within the
                            namespace.
                            Allow usage from any mount point within the namespace if 'true'
                          type: boolean
                        curve:
                          description: |-
                            The curve to use for an ECDSA key. Used when key_type
                            is ECDSA. Required if allow_generate_key is true.
                            Supplies the curve value when using the 'CKM_ECDSA' mechanism. Required if 'allow_generate_key' is true
                          type: string
                        forceRwSession:
                          description: |-
                            Force all operations to open up a read-write session to
                            the HSM.
                            Force all operations to open up a read-write session to the HSM
                          type: string
                        keyBits:
                          description: |-
                            The size in bits for an RSA key.
                            Supplies the size in bits of the key when using 'CKM_RSA_PKCS_PSS', 'CKM_RSA_PKCS_OAEP' or 'CKM_RSA_PKCS' as a value for 'mechanism'. Required if 'allow_generate_key' is true
                          type: string
                        keyId:
                          description: |-
                            The id of a PKCS#11 key to use.
                            The id of a PKCS#11 key to use
                          type: string
                        keyLabel:
                          description: |-
                            The label of the key to use.
                            The label of the key to use
                          type: string
                        library:
                          description: |-
                            The name of the kms_library stanza to use from Vault's config
                            to lookup the local library path.
                            The name of the kms_library stanza to use from Vault's config to lookup the local library path
                          type: string
                        mechanism:
                          description: |-
                            The encryption/decryption mechanism to use, specified as a
                            hexadecimal (prefixed by 0x) string.
                            The encryption/decryption mechanism to use, specified as a hexadecimal (prefixed by 0x) string.
                          type: string
                        name:
                          description: |-
                            A unique lowercase name that serves as identifying the key.
                            A unique lowercase name that serves as identifying the key
                          type: string
                        pin:
                          description: |-
                            The PIN for login.
                            The PIN for login
                          type: string
                        slot:
                          description: |-
                            The slot number to use, specified as a string in a decimal format
                            (e.g. 2305843009213693953).
                            The slot number to use, specified as a string in a decimal format (e.g. '2305843009213693953')
                          type: string
                        tokenLabel:
                          description: |-
                            The slot token label to use.
                            The slot token label to use
                          type: string
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: KeysStatus defines the observed state of Keys.
            properties:
              atProvider:
                properties:
                  aws:
                    description: Configuration block for AWS Managed Keys
                    items:
                      properties:
                        accessKey:
                          description: |-
                            The AWS access key to use.
                            The AWS access key to use
                          type: string
                        allowGenerateKey:
                          description: |-
                            If no existing key can be found in
                            the referenced backend, instructs Vault to generate a key within the backend.
                            If no existing key can be found in the referenced backend, instructs Vault to generate a key within the backend
                          type: boolean
                        allowReplaceKey:
                          description: |-
                            Controls the ability for Vault to replace through
                            generation or importing a key into the configured backend even
                            if a key is present, if set to false those operations are forbidden
                            if a key exists.
                            Controls the ability for Vault to replace through generation or importing a key into the configured backend even if a key is present, if set to false those operations are forbidden if a key exists.
                          type: boolean
                        allowStoreKey:
                          description: |-
                            Controls the ability for Vault to import a key to the
                            configured backend, if false, those operations will be forbidden.
                            Controls the ability for Vault to import a key to the configured backend, if 'false', those operations will be forbidden
                          type: boolean
                        anyMount:
                          description: |-
                            If true, allows usage from any mount point within the
                            namespace.
                            Allow usage from any mount point within the namespace if 'true'
                          type: boolean
                        curve:
                          description: |-
                            The curve to use for an ECDSA key. Used when key_type
                            is ECDSA. Required if allow_generate_key is true.
                            The curve to use for an ECDSA key. Used when key_type is 'ECDSA'. Required if 'allow_generate_key' is true
                          type: string
                        endpoint:
                          description: |-
                            Used to specify a custom AWS endpoint.
                            Used to specify a custom AWS endpoint
                          type: string
                        keyBits:
                          description: |-
                            The size in bits for an RSA key.
                            The size in bits for an RSA key. This field is required when 'key_type' is 'RSA'
                          type: string
                        keyType:
                          description: |-
                            The type of key to use.
                            The type of key to use
                          type: string
                        kmsKey:
                          description: |-
                            An identifier for the key.
                            An identifier for the key
                          type: string
                        name:
                          description: |-
                            A unique lowercase name that serves as identifying the key.
                            A unique lowercase name that serves as identifying the key
                          type: string
                        region:
                          description: |-
                            The AWS region where the keys are stored (or will be stored).
                            The AWS region where the keys are stored (or will be stored)
                          type: string
                        secretKey:
                          description: |-
                            The AWS access key to use.
                            The AWS secret key to use
                          type: string
                        uuid:
                          description: ID of the managed key read from Vault
                          type: string
                      type: object
                    type: array
                  azure:
                    description: Configuration block for Azure Managed Keys
                    items:
                      properties:
                        allowGenerateKey:
                          description: |-
                            If no existing key can be found in
                            the referenced backend, instructs Vault to generate a key within the backend.
                            If no existing key can be found in the referenced backend, instructs Vault to generate a key within the backend
                          type: boolean
                        allowReplaceKey:
                          description: |-
                            Controls the ability for Vault to replace through
                            generation or importing a key into the configured backend even
                            if a key is present, if set to false those operations are forbidden
                            if a key exists.
                            Controls the ability for Vault to replace through generation or importing a key into the configured backend even if a key is present, if set to false those operations are forbidden if a key exists.
                          type: boolean
                        allowStoreKey:
                          description: |-
                            Controls the ability for Vault to import a key to the
                            configured backend, if false, those operations will be forbidden.
                            Controls the ability for Vault to import a key to the configured backend, if 'false', those operations will be forbidden
                          type: boolean
                        anyMount:
                          description: |-
                            If true, allows usage from any mount point within the
                            namespace.
                            Allow usage from any mount point within the namespace if 'true'
                          type: boolean
                        clientId:
                          description: |-
                            The client id for credentials to query the Azure APIs.
                            The client id for credentials to query the Azure APIs
                          type: string
                        clientSecret:
                          description: |-
                            The client secret for credentials to query the Azure APIs.
                            The client secret for credentials to query the Azure APIs
                          type: string
                        environment:
                          description: |-
                            The Azure Cloud environment API endpoints to use.
                            The Azure Cloud environment API endpoints to use
                          type: string
                        keyBits:
                          description: |-
                            The size in bits for an RSA key.
                            The size in bits for an RSA key. This field is required when 'key_type' is 'RSA' or when 'allow_generate_key' is true
                          type: string
                        keyName:
                          description: |-
                            The Key Vault key to use for encryption and decryption.
                            The Key Vault key to use for encryption and decryption
                          type: string
                        keyType:
                          description: |-
                            The type of key to use.
                            The type of key to use
                          type: string
                        name:
                          description: |-
                            A unique lowercase name that serves as identifying the key.
                            A unique lowercase name that serves as identifying the key
                          type: string
                        resource:
                          description: |-
                            The Azure Key Vault resource's DNS Suffix to connect to.
                            The Azure Key Vault resource's DNS Suffix to connect to
                          type: string
                        tenantId:
                          description: |-
                            The tenant id for the Azure Active Directory organization.
                            The tenant id for the Azure Active Directory organization
                          type: string
                        uuid:
                          description: ID of the managed key read from Vault
                          type: string
                        vaultName:
                          description: |-
                            The Key Vault vault to use for encryption and decryption.
                            The Key Vault vault to use the encryption keys for encryption and decryption
                          type: string
                      type: object
                    type: array
                  id:
                    type: string
                  namespace:
                    description: |-
                      The namespace to provision the resource in.
                      The value should not contain leading or trailing forward slashes.
                      The namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise.
                      Target namespace. (requires Enterprise)
                    type: string
                  pkcs:
                    description: Configuration block for PKCS Managed Keys
                    items:
                      properties:
                        allowGenerateKey:
                          description: |-
                            If no existing key can be found in
                            the referenced backend, instructs Vault to generate a key within the backend.
                            If no existing key can be found in the referenced backend, instructs Vault to generate a key within the backend
                          type: boolean
                        allowReplaceKey:
                          description: |-
                            Controls the ability for Vault to replace through
                            generation or importing a key into the configured backend even
                            if a key is present, if set to false those operations are forbidden
                            if a key exists.
                            Controls the ability for Vault to replace through generation or importing a key into the configured backend even if a key is present, if set to false those operations are forbidden if a key exists.
                          type: boolean
                        allowStoreKey:
                          description: |-
                            Controls the ability for Vault to import a key to the
                            configured backend, if false, those operations will be forbidden.
                            Controls the ability for Vault to import a key to the configured backend, if 'false', those operations will be forbidden
                          type: boolean
                        anyMount:
                          description: |-
                            If true, allows usage from any mount point within the
                            namespace.
                            Allow usage from any mount point within the namespace if 'true'
                          type: boolean
                        curve:
                          description: |-
                            The curve to use for an ECDSA key. Used when key_type
                            is ECDSA. Required if allow_generate_key is true.
                            Supplies the curve value when using the 'CKM_ECDSA' mechanism. Required if 'allow_generate_key' is true
                          type: string
                        forceRwSession:
                          description: |-
                            Force all operations to open up a read-write session to
                            the HSM.
                            Force all operations to open up a read-write session to the HSM
                          type: string
                        keyBits:
                          description: |-
                            The size in bits for an RSA key.
                            Supplies the size in bits of the key when using 'CKM_RSA_PKCS_PSS', 'CKM_RSA_PKCS_OAEP' or 'CKM_RSA_PKCS' as a value for 'mechanism'. Required if 'allow_generate_key' is true
                          type: string
                        keyId:
                          description: |-
                            The id of a PKCS#11 key to use.
                            The id of a PKCS#11 key to use
                          type: string
                        keyLabel:
                          description: |-
                            The label of the key to use.
                            The label of the key to use
                          type: string
                        library:
                          description: |-
                            The name of the kms_library stanza to use from Vault's config
                            to lookup the local library path.
                            The name of the kms_library stanza to use from Vault's config to lookup the local library path
                          type: string
                        mechanism:
                          description: |-
                            The encryption/decryption mechanism to use, specified as a
                            hexadecimal (prefixed by 0x) string.
                            The encryption/decryption mechanism to use, specified as a hexadecimal (prefixed by 0x) string.
                          type: string
                        name:
                          description: |-
                            A unique lowercase name that serves as identifying the key.
                            A unique lowercase name that serves as identifying the key
                          type: string
                        pin:
                          description: |-
                            The PIN for login.
                            The PIN for login
                          type: string
                        slot:
                          description: |-
                            The slot number to use, specified as a string in a decimal format
                            (e.g. 2305843009213693953).
                            The slot number to use, specified as a string in a decimal format (e.g. '2305843009213693953')
                          type: string
                        tokenLabel:
                          description: |-
                            The slot token label to use.
                            The slot token label to use
                          type: string
                        uuid:
                          description: ID of the managed key read from Vault
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
