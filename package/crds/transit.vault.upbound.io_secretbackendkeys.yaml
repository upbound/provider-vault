---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  name: secretbackendkeys.transit.vault.upbound.io
spec:
  group: transit.vault.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - vault
    kind: SecretBackendKey
    listKind: SecretBackendKeyList
    plural: secretbackendkeys
    singular: secretbackendkey
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SecretBackendKey is the Schema for the SecretBackendKeys API.
          Create an Encryption Keyring on a Transit Secret Backend for Vault.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SecretBackendKeySpec defines the desired state of SecretBackendKey
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  allowPlaintextBackup:
                    description: Enables taking backup of entire keyring in the plaintext
                      format. Once set, this cannot be disabled. If set, enables taking
                      backup of named key in the plaintext format. Once set, this
                      cannot be disabled.
                    type: boolean
                  autoRotateInterval:
                    description: Replaced by auto_rotate_period. Amount of time the
                      key should live before being automatically rotated. A value
                      of 0 disables automatic rotation for the key.
                    type: number
                  autoRotatePeriod:
                    description: Amount of seconds the key should live before being
                      automatically rotated. A value of 0 disables automatic rotation
                      for the key. Amount of seconds the key should live before being
                      automatically rotated. A value of 0 disables automatic rotation
                      for the key.
                    type: number
                  backend:
                    description: The path the transit secret backend is mounted at,
                      with no leading or trailing /s. The Transit secret backend the
                      resource belongs to.
                    type: string
                  convergentEncryption:
                    description: Whether or not to support convergent encryption,
                      where the same plaintext creates the same ciphertext. This requires
                      derived to be set to true. Whether or not to support convergent
                      encryption, where the same plaintext creates the same ciphertext.
                      This requires derived to be set to true.
                    type: boolean
                  deletionAllowed:
                    description: Specifies if the keyring is allowed to be deleted.
                      Specifies if the key is allowed to be deleted.
                    type: boolean
                  derived:
                    description: Specifies if key derivation is to be used. If enabled,
                      all encrypt/decrypt requests to this key must provide a context
                      which is used for key derivation. Specifies if key derivation
                      is to be used. If enabled, all encrypt/decrypt requests to this
                      key must provide a context which is used for key derivation.
                    type: boolean
                  exportable:
                    description: Enables keys to be exportable. This allows for all
                      valid private keys in the keyring to be exported. Once set,
                      this cannot be disabled. Enables keys to be exportable. This
                      allows for all the valid keys in the key ring to be exported.
                      Once set, this cannot be disabled.
                    type: boolean
                  keySize:
                    description: The key size in bytes for algorithms that allow variable
                      key sizes. Currently only applicable to HMAC, where it must
                      be between 32 and 512 bytes. The key size in bytes for algorithms
                      that allow variable key sizes. Currently only applicable to
                      HMAC; this value must be between 32 and 512.
                    type: number
                  minDecryptionVersion:
                    description: Minimum key version to use for decryption. Minimum
                      key version to use for decryption.
                    type: number
                  minEncryptionVersion:
                    description: Minimum key version to use for encryption Minimum
                      key version to use for encryption
                    type: number
                  name:
                    description: The name to identify this key within the backend.
                      Must be unique within the backend. Name of the encryption key
                      to create.
                    type: string
                  namespace:
                    description: The namespace to provision the resource in. The value
                      should not contain leading or trailing forward slashes. The
                      namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise. Target namespace. (requires
                      Enterprise)
                    type: string
                  type:
                    description: 'Specifies the type of key to create. The currently-supported
                      types are: aes128-gcm96, aes256-gcm96 (default), chacha20-poly1305,
                      ed25519, ecdsa-p256, ecdsa-p384, ecdsa-p521, hmac, rsa-2048,
                      rsa-3072 and rsa-4096. Specifies the type of key to create.
                      The currently-supported types are: aes128-gcm96, aes256-gcm96,
                      chacha20-poly1305, ed25519, ecdsa-p256, ecdsa-p384, ecdsa-p521,
                      hmac, rsa-2048, rsa-3072, rsa-4096'
                    type: string
                type: object
              initProvider:
                description: THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. InitProvider
                  holds the same fields as ForProvider, with the exception of Identifier
                  and other resource reference fields. The fields that are in InitProvider
                  are merged into ForProvider when the resource is created. The same
                  fields are also added to the terraform ignore_changes hook, to avoid
                  updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after
                  creation, for example because of an external controller is managing
                  them, like an autoscaler.
                properties:
                  allowPlaintextBackup:
                    description: Enables taking backup of entire keyring in the plaintext
                      format. Once set, this cannot be disabled. If set, enables taking
                      backup of named key in the plaintext format. Once set, this
                      cannot be disabled.
                    type: boolean
                  autoRotateInterval:
                    description: Replaced by auto_rotate_period. Amount of time the
                      key should live before being automatically rotated. A value
                      of 0 disables automatic rotation for the key.
                    type: number
                  autoRotatePeriod:
                    description: Amount of seconds the key should live before being
                      automatically rotated. A value of 0 disables automatic rotation
                      for the key. Amount of seconds the key should live before being
                      automatically rotated. A value of 0 disables automatic rotation
                      for the key.
                    type: number
                  backend:
                    description: The path the transit secret backend is mounted at,
                      with no leading or trailing /s. The Transit secret backend the
                      resource belongs to.
                    type: string
                  convergentEncryption:
                    description: Whether or not to support convergent encryption,
                      where the same plaintext creates the same ciphertext. This requires
                      derived to be set to true. Whether or not to support convergent
                      encryption, where the same plaintext creates the same ciphertext.
                      This requires derived to be set to true.
                    type: boolean
                  deletionAllowed:
                    description: Specifies if the keyring is allowed to be deleted.
                      Specifies if the key is allowed to be deleted.
                    type: boolean
                  derived:
                    description: Specifies if key derivation is to be used. If enabled,
                      all encrypt/decrypt requests to this key must provide a context
                      which is used for key derivation. Specifies if key derivation
                      is to be used. If enabled, all encrypt/decrypt requests to this
                      key must provide a context which is used for key derivation.
                    type: boolean
                  exportable:
                    description: Enables keys to be exportable. This allows for all
                      valid private keys in the keyring to be exported. Once set,
                      this cannot be disabled. Enables keys to be exportable. This
                      allows for all the valid keys in the key ring to be exported.
                      Once set, this cannot be disabled.
                    type: boolean
                  keySize:
                    description: The key size in bytes for algorithms that allow variable
                      key sizes. Currently only applicable to HMAC, where it must
                      be between 32 and 512 bytes. The key size in bytes for algorithms
                      that allow variable key sizes. Currently only applicable to
                      HMAC; this value must be between 32 and 512.
                    type: number
                  minDecryptionVersion:
                    description: Minimum key version to use for decryption. Minimum
                      key version to use for decryption.
                    type: number
                  minEncryptionVersion:
                    description: Minimum key version to use for encryption Minimum
                      key version to use for encryption
                    type: number
                  name:
                    description: The name to identify this key within the backend.
                      Must be unique within the backend. Name of the encryption key
                      to create.
                    type: string
                  namespace:
                    description: The namespace to provision the resource in. The value
                      should not contain leading or trailing forward slashes. The
                      namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise. Target namespace. (requires
                      Enterprise)
                    type: string
                  type:
                    description: 'Specifies the type of key to create. The currently-supported
                      types are: aes128-gcm96, aes256-gcm96 (default), chacha20-poly1305,
                      ed25519, ecdsa-p256, ecdsa-p384, ecdsa-p521, hmac, rsa-2048,
                      rsa-3072 and rsa-4096. Specifies the type of key to create.
                      The currently-supported types are: aes128-gcm96, aes256-gcm96,
                      chacha20-poly1305, ed25519, ecdsa-p256, ecdsa-p384, ecdsa-p521,
                      hmac, rsa-2048, rsa-3072, rsa-4096'
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: backend is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.backend)
                || has(self.initProvider.backend)'
            - message: name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || has(self.initProvider.name)'
          status:
            description: SecretBackendKeyStatus defines the observed state of SecretBackendKey.
            properties:
              atProvider:
                properties:
                  allowPlaintextBackup:
                    description: Enables taking backup of entire keyring in the plaintext
                      format. Once set, this cannot be disabled. If set, enables taking
                      backup of named key in the plaintext format. Once set, this
                      cannot be disabled.
                    type: boolean
                  autoRotateInterval:
                    description: Replaced by auto_rotate_period. Amount of time the
                      key should live before being automatically rotated. A value
                      of 0 disables automatic rotation for the key.
                    type: number
                  autoRotatePeriod:
                    description: Amount of seconds the key should live before being
                      automatically rotated. A value of 0 disables automatic rotation
                      for the key. Amount of seconds the key should live before being
                      automatically rotated. A value of 0 disables automatic rotation
                      for the key.
                    type: number
                  backend:
                    description: The path the transit secret backend is mounted at,
                      with no leading or trailing /s. The Transit secret backend the
                      resource belongs to.
                    type: string
                  convergentEncryption:
                    description: Whether or not to support convergent encryption,
                      where the same plaintext creates the same ciphertext. This requires
                      derived to be set to true. Whether or not to support convergent
                      encryption, where the same plaintext creates the same ciphertext.
                      This requires derived to be set to true.
                    type: boolean
                  deletionAllowed:
                    description: Specifies if the keyring is allowed to be deleted.
                      Specifies if the key is allowed to be deleted.
                    type: boolean
                  derived:
                    description: Specifies if key derivation is to be used. If enabled,
                      all encrypt/decrypt requests to this key must provide a context
                      which is used for key derivation. Specifies if key derivation
                      is to be used. If enabled, all encrypt/decrypt requests to this
                      key must provide a context which is used for key derivation.
                    type: boolean
                  exportable:
                    description: Enables keys to be exportable. This allows for all
                      valid private keys in the keyring to be exported. Once set,
                      this cannot be disabled. Enables keys to be exportable. This
                      allows for all the valid keys in the key ring to be exported.
                      Once set, this cannot be disabled.
                    type: boolean
                  id:
                    type: string
                  keySize:
                    description: The key size in bytes for algorithms that allow variable
                      key sizes. Currently only applicable to HMAC, where it must
                      be between 32 and 512 bytes. The key size in bytes for algorithms
                      that allow variable key sizes. Currently only applicable to
                      HMAC; this value must be between 32 and 512.
                    type: number
                  keys:
                    description: List of key versions in the keyring. This attribute
                      is zero-indexed and will contain a map of values depending on
                      the type of the encryption key. List of key versions in the
                      keyring.
                    items:
                      additionalProperties:
                        type: string
                      type: object
                    type: array
                  latestVersion:
                    description: Latest key version available. This value is 1-indexed,
                      so if latest_version is 1, then the key's information can be
                      referenced from keys by selecting element 0 Latest key version
                      in use in the keyring
                    type: number
                  minAvailableVersion:
                    description: Minimum key version available for use. If keys have
                      been archived by increasing min_decryption_version, this attribute
                      will reflect that change. Minimum key version available for
                      use.
                    type: number
                  minDecryptionVersion:
                    description: Minimum key version to use for decryption. Minimum
                      key version to use for decryption.
                    type: number
                  minEncryptionVersion:
                    description: Minimum key version to use for encryption Minimum
                      key version to use for encryption
                    type: number
                  name:
                    description: The name to identify this key within the backend.
                      Must be unique within the backend. Name of the encryption key
                      to create.
                    type: string
                  namespace:
                    description: The namespace to provision the resource in. The value
                      should not contain leading or trailing forward slashes. The
                      namespace is always relative to the provider's configured namespace.
                      Available only for Vault Enterprise. Target namespace. (requires
                      Enterprise)
                    type: string
                  supportsDecryption:
                    description: Whether or not the key supports decryption, based
                      on key type. Whether or not the key supports decryption, based
                      on key type.
                    type: boolean
                  supportsDerivation:
                    description: Whether or not the key supports derivation, based
                      on key type. Whether or not the key supports derivation, based
                      on key type.
                    type: boolean
                  supportsEncryption:
                    description: Whether or not the key supports encryption, based
                      on key type. Whether or not the key supports encryption, based
                      on key type.
                    type: boolean
                  supportsSigning:
                    description: Whether or not the key supports signing, based on
                      key type. Whether or not the key supports signing, based on
                      key type.
                    type: boolean
                  type:
                    description: 'Specifies the type of key to create. The currently-supported
                      types are: aes128-gcm96, aes256-gcm96 (default), chacha20-poly1305,
                      ed25519, ecdsa-p256, ecdsa-p384, ecdsa-p521, hmac, rsa-2048,
                      rsa-3072 and rsa-4096. Specifies the type of key to create.
                      The currently-supported types are: aes128-gcm96, aes256-gcm96,
                      chacha20-poly1305, ed25519, ecdsa-p256, ecdsa-p384, ecdsa-p521,
                      hmac, rsa-2048, rsa-3072, rsa-4096'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
